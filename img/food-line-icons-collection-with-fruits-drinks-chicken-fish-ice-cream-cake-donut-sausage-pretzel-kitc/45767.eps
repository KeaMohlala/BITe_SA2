%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1__9 copy.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Lisa Taiga
%%CreationDate: 1/30/2018
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.2 x242 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 10 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">jjj4</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-01-30T22:59:49+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-01-30T22:59:49+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-01-30T22:59:49+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>20</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAFAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A7bpXmLT9A0HWNYvmY2lqIysSfFJI5JSOKMNxBeRyEQV3JGavs07S+Di6Y82N&#xA;X/5v+YGv4EtbnQ9O9SS5T9HXzXc8/KzVZJ4557ZfRtpI4WDsG5kFuNPhJOx4i5fcyS289w65pOp6&#xA;bfWw07XbSOKabTxJ66yW0rr6d1bOUiaWF60qY1Kt8LAHMfWH91L8dWrOKiWRaCsi+X4xAVeYCb0z&#xA;IxKl+TceZHI0r9NMOiH7ofH70YfpSDytqf5j3XmG7ttag0aLTbSThOLW4ea4XlGXj4pwXjy5I372&#xA;h49Bl0bs3f2MxdqnmzUvzCtdWtYtBtdKmsJWRC95ctDIGamzp6bVBNePpkn2wyvam/Hw0br7f0fp&#xA;ZOltLdaR9X1JYzNNAq3q25YReoVpJ6ZajceVaV3pjkgJxMTyLTKIIosF1TyxfRas8Gl2lm1j9XCx&#xA;pcSMZTKXLc6elX7NV/vaUXx6YZ0GKMfTEE+aMGmw8Q4weHy5r4fKmuvp1/J6GlpcvcmTTzxkuU+q&#xA;mgVKottxNBzBPP7XHtywz0OKtoi1xYMXEOIbJ1pflL6trdlqSvFGYIys8MMLwozlHUsiu7sB8Q6k&#xA;5CPZ8Y5hkjsB0+bSNOBMSHJ5J5xugPNWsW6FVt3vJVlAqW5VJZgxUCOnLdg23iDmwLepS2V9Ok0E&#xA;qokMhKKhkO8fGql+KOft70DfwzX5u0sWOXCbJHc0T1MYmigSrpcrbH/R4onWsSGRwGZ1UGMslSvw&#xA;qa70CilczoS4ogjq3A2LD2W2j1JPy2tY9MmVdRXTmWxmdkkVZeFIyzDkp4mldz8zkchqBIcnSxic&#xA;kQeVvOrjUfzTsX8sWd1rcCarczuNXjKxyxzxqyvS0WKLl8MThn5nYfF9nMPinVgn7PxydnlOCH1C&#xA;PLul5+ff+Oiax+YfzA8s6CZfMkn6WvkuOEH1KKH1Jo24qryJRUQBuRND08cjHJklIC6+RdNqcsZE&#xA;CG1X8feN/sZn5J846D5je8TS75L6TT5IY7oqKFXfnuP8luGx9jmTpsnFfPo25smOX0Mf/MHzhp+j&#xA;eYr61f8AQyuNMNwDep6k63FWCSMioWkSvprw5A0JfotDOeDHI2YAn3BxTjiTuEp03zeLyPUrm40r&#xA;RZLO0a1ijnsWXmWnRpHd0b1DEPh9NRIg+LlX4lKZianHixx4vDB+DVljCIvhQt35xs7G9ZJ9Lsp0&#xA;gl0m1uYCkkU0RureSeZjRVWSWc8RCq7U7cvhNsdHhkAeBkMMDvws6/KrUrfVtJu75YLRLiK5e0lm&#xA;sFkSJjEqM6UlZ2PCRmTkDRwOXw8uK3YtPCB9MaZwxxjyFMH83v8AmxJ59aPT7DVI9Gv3dJUgvR6K&#xA;rA6xxSxyrEwtvURPU413qQ/XJSyUa3+RciIFftTLz5rfnq216KWHQ9Ze3uLQWcg0y49aFI5Yw81w&#xA;qJGeN1FI3pxlvtAVquQzeJ/D+P2fasK6j7WVavPqS+QoTqKSQX8bJFWWRJJWMchSOZnjVU5SBVlI&#xA;CilabZkNaH1bzTqfl/ybp1zbRW8jmEST3N3cpawKgIqolkDfvGLgJVaHISlTOI2vuSby9501m680&#xA;/o6zvf0tol6ZVurh5obe6014mdDW2dPrB9SQqqqyjiB/rVoPERVkA9ev7GU/r9IsBP24n8x/iY8k&#xA;4gA/CrVtu/TkR4b0+/MpqQvn/VNdsNbtjaXv1aznFnGRGkiSc/rdXPrys1q4ZBxMCRGZxUKQNxGS&#xA;jnupR+YrnX5otP8ALN/PZ+pbwzD67bzr+7jkiZ6JIYblOUasnJz1PyrjxyDi4N+V+XzZSz8U+W/u&#xA;/ATH8qodVTy6japdzXF3xVZIbq5+uzwnkzhXuVWBJQyOrD90CK8SWoKW45A2WeSEoxAkNuY5ff8A&#xA;BjX51fmFqei3NpoWmSTWr3CLPfXUPBZGt5S8HpQvIUCy8/iBQ8th0BLC1rYD+X35nectN80Q6dNe&#xA;SavY3c0STWt5dQySx+u6VcSNI7KyrL8Kg8WKlVG6tgV6bp+iaZqMDTX919StbC7gvZ2V0RXKJKsQ&#xA;laSnELJIJFI/bUHNV2YB6vh+lxNLtbE73WrLy5qC6Xp9jda9YB1Oo331zTCupeqGmeWYvPExdWb0&#xA;yWX4wKNXbNnwm7tyaZdZeU/LWmWc+oaRrNxqD2sE0Ei/WIJo+F1OJgsixKtAsin0+NDRmG/ajV7Y&#xA;pMMx9BT+ytpL/wAlS21teSwzSJcILq3CPKp5tsqzrMu42oynY+OQ0cv3Njfn95YYT6Hlf5f+XdLu&#xA;vOOnNY231C504+vPd239/SKNY/q1yzmQMHQBCyhWIG+zACnT6szmI+/8foc3PhhCMDGYmZg2O5Gf&#xA;mbo4tvNFxdXU1xfW14iSi3lZj9XKqURrT9lCvOSj0qhJ8VGXajOYS57fe5ODTGUOIR4ud8/T57fd&#xA;zPTq9M8nWA0DyTY2t3eT3Edpb8mubz+9EbEuqvSu0aMEHU0ArmUJjh4js40sJ8Qwj6jde9h3nbWf&#xA;JH1u6vdRuZ5SunxzGa3ggZVtvraQhUnkCkMszcipfoflkTw5I94ROE8UqkKkEAt3+VUmianCNbcW&#xA;w1ASXUsCvbyC6nj9RJOFqsI4tF8CtIlCEoN1xyxBjR3+1rE+E2Hpnlg6adHsTpbM+nGOtq7iYMYz&#xA;WhP1gmX/AILLUPDfOM0K+b9ando4pRcSLHIeXOocJyKrxagA/ZO9F98FKmmg+fpLHTEsILmOiBUj&#xA;9RPUb7JkEgehXfqeZ2PtvmpyafURkeAjhO/u6uJLHkBNVRY1qMolvHvHTg/on6sXjZJFAKAbR13C&#xA;uWPFv15scOIY4CN8nIhHhAD2nytcxt+XumXCzCatm7GYEt+83r1LfZfbrthymoE+TIyMRbzXWP8A&#xA;HuseY7TUtP1CK007SJeE8NxBHJI8TOvN4ppYy68+PH92afY35/CNdGUiOd7d/L8fscjSYDlqUiDv&#xA;5+/oPx8EfpGoXHmzS2n0y+lL20gS5laWrRARq7oUmj2qGU7ZVPccv7Pi7DPk02GXqgJbcuEbe/cJ&#xA;9+UiQpe+YYob6O7SK6gidBE8MqSxmVJDKGhg5cmBCsK9MzdHg8My3HRxdXm08xHwocBF8X6OpZBr&#xA;35kaHpeqnR763d55naKCP4D63CL1ZOKsQSEQ/F4beIyc9VRI4SabsfZ3FGJM4xMwSAb6ML8+615f&#xA;81Lp7WOoX2m33KZbWe2mlWKZOK+q0f1O6gMhXglHBIp23ByuepIsiMvP8b/YEw7PEuEDJD1XXPp8&#xA;B9p9yc+TvPfkfSdC0yyiv7i/a5BjhvpGe5N1LGWMnpyNJMxVGDADkeP2csjnAuxK+v7Gr8kZcNSh&#xA;6rrfu79vvZpoPmnRNaLrpsvqenyL0WgqHKPv0JDqyt4EGu+XQzCRrq4+TTSjAT2MSat5v5t8w+YJ&#xA;7/XtMu+Y0zUqW1pZTWaSyRQxM8M4EcZZ7lL0Rn0+RVvioKbE15M0ozA6ff8AqYxxki6Nd/cl1o2m&#xA;+UdUmh8p6PJoOmX1nCXgubGRDLcyx+rFJHNNJzdo/V9NrdgvEhsjqdXHERfX8fLzYActibNbBnGq&#xA;alcap+XVvd3lvc21zLwSeG8iFvMXRzGzPEhcJzK81oT1GZYQUs1y18ux+StJv9buV07StPRJZbgB&#xA;ZYplc+pLaywmKflGWjVvs1LKOm+Y2WdGjsDsD5+74WtwFGXySLyPqHlPzZ5vgePzBpt3c2dpbTJY&#xA;6fNdi7Z4ykhE136sP1uASUPCWM025Krc+doodf2spZAefdQZjdXEQ/Mu3jaYpQKOBLDkWt3IAIIW&#xA;mw2NTU5YwS38w5PLmneZE1LVLJp7maxSCzELGa7nMc5fhZW3q0E0LtHJ6np/ZJ+LamVZYk7f2/Bv&#xA;w5IwPERchy7viGL6vpflzyz5gmv0tLe61mWGOF70abCXn1HUZzDIWlDmRpbiJnBQrw2NXUtvEG9g&#xA;f0olKpeocx7vjs9A/LPXPLt5pB0vRrJ9MXTUiL6dIjI0SXCmRCa8h8fxMo5E8aHuMnjFbNRramMf&#xA;nf5AXUYE802WpQaPqFiiR3N5dSRwwtGjMYAzyGNaiaXiAZEHxdTQA2IYN+V/kG78yeYfr11qemT6&#xA;bp10l5NaWd7baqx5NIVQBBJ6KzFauzOSxDcadcCbe6+XP0H9TuPqPL0f93+vSvGh6/5PXMPReHR4&#xA;GjDw16Vp/wAB9/0X0H/LP07ZmtyJf9A/oaf6t6P6P/3Z9U4ceW3Tj8PLplWfh4DxcmE6rdvSf0Z+&#xA;iofqPqfVatwpy5Vqa/Z9/DbIabg4BwfSjFXDtyVIv0f6knpep6lf33HnWv8AlU/jl0eGzXNmKan/&#xA;AEdWP1+deX7rnz+1/k17/LGVdWyHFvw2s1b6h+hb7616v1X0m+sUr6nGm/Hn7ZDPXAeLlTdo+LxY&#xA;8H1WKt51df8AKv8A9H/6V+lP0dxP97w9Hh6gr9r4aerx/wBlTvmBj4eH08fC7nVcfGfF8Dj63aYP&#xA;/h/hPz/xB6dE+s8uVKfsc6/8LXLJct/E+xxzw/7R9qa6H+i/0/bU/TH13i3D6/y9Pjwb7fLelK09&#xA;8cfD4g+vi8+TLUcf5c14XB/R58xyY9rv/KtP0pqf6Q+t/WvrUn1vlw48vh5cPU/3X8vfM4eTokAP&#xA;+VO/pF+H6Q+v8h6nD6z6v2zy5U+OnLjy/wBj3xFbLs0//Kof9M/3r9P04vtceFKR8fT9Xbn/ADct&#xA;68q74QoekaF+hP8ADth+jvU/R3pN6HL7XGp58+XvXEpWN/hWq8vR5VPGvp1rXen05UPD6cP2NmHj&#xA;r0XXl+xSs/8ABdJvqX1anqH1/R9H+9ovLnx/apxrXfpgPhf0fsRn4r/eXf8AS/amNl+i/Wk+q/a9&#xA;X9/w409X/izjvy+eXCmDFPMn+CP01d/XvX+u8R9a9P0qcPh+1z3414+1c1eo8PiN8XnVU7LF+cqP&#xA;Byo8P0cutXv70mj/AOVY+jb+l9Y9H00+q8Pq/D0+A4enTbjwpSnbKZeHvfiefL7WUPz3p4fPhrwv&#xA;jw/ppRX/AJVRSDh9Y+031bj6H2t+fCn01pgl4e9+J58vhaIfnfTw+fDXhfHh/TTKfIH+EPrNz+gP&#xA;X5cP3vqceFOe9OG1eWZej4OM1xcVfxOPm/McA8T6On01fX6WXyej6u/KveleP05sXEdN6VRyrX/J&#xA;r0+jFUt8z/on9Fr+kuf1b1ouPpfa5ctvo8fbFWh/hr9AWf1z6v8AovhH6H130+NePw19T4edK5Vm&#xA;8OvXVef7WE+GvVSFsP8AAX6Ug+ofUf0nwX0PQ4er6fH4acd+PHp2ykeDxCq4ujEcFjvXS/4e/wAY&#xA;R8+f6X4fu+nCnpnrTf7Pjt09sy21E6z/AIc+tL+lOP1j0W9Dnz+zyFfS/Z9TlSnH4+mQnVbtmO+I&#xA;V39eX27JHD/yrD9J3NPq/wCk/S/0v1PU9b6v9YNfU57+j61eVfg8chh4KPC26rxOIeJz4R3cunJP&#xA;fK/+G/0RB/hz0v0P6afVPqv+83p029KnwU8ePfrvlka6NBuhy+z7f2ovV/0P9Qf9MfV/0fyj9T65&#xA;w9Hn6i+ly9T4a+px4/5VKb5Jiknkb/lXPoXP+C/0d6fwfXP0d6fKnJ/T9Th8VK8+HLb7VO+RjVbf&#xA;j5tmS73r4V+h/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:f9d72fe4-f5e8-a248-b539-31f4ab5d6a4b</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:f9d72fe4-f5e8-a248-b539-31f4ab5d6a4b</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:45326e05-1e8d-4d9d-be32-88a4099204c6</stRef:instanceID>
            <stRef:documentID>xmp.did:57876900-3956-2742-a3cd-fee5762c692f</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34f71515-7c62-a646-9edc-56802b5aa451</stEvt:instanceID>
                  <stEvt:when>2018-01-11T16:20:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f9d72fe4-f5e8-a248-b539-31f4ab5d6a4b</stEvt:instanceID>
                  <stEvt:when>2018-01-30T22:59:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>640.896205</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
300.411 127.29 mo
286.602 127.29 275.407 116.095 275.407 102.286 cv
275.407 88.4771 286.602 77.2828 300.411 77.2828 cv
314.221 77.2828 325.415 88.4771 325.415 102.286 cv
325.415 116.095 314.221 127.29 300.411 127.29 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.986559 .946236 .867343 rgb
f
327.42 79.109 mo
313.61 79.109 302.416 67.9141 302.416 54.1051 cv
302.416 40.296 313.61 29.1012 327.42 29.1012 cv
341.228 29.1012 352.424 40.296 352.424 54.1051 cv
352.424 67.9141 341.228 79.109 327.42 79.109 cv
f
354.565 125.772 mo
340.756 125.772 329.561 114.577 329.561 100.768 cv
329.561 86.9586 340.756 75.7643 354.565 75.7643 cv
368.374 75.7643 379.568 86.9586 379.568 100.768 cv
379.568 114.577 368.374 125.772 354.565 125.772 cv
f
406.857 125.772 mo
393.048 125.772 381.853 114.577 381.853 100.768 cv
381.853 89.9473 388.726 80.7326 398.345 77.2507 cv
399.457 77.1282 400.511 76.8152 401.475 76.345 cv
403.209 75.9648 405.01 75.7643 406.857 75.7643 cv
420.666 75.7643 431.86 86.9586 431.86 100.768 cv
431.86 114.577 420.666 125.772 406.857 125.772 cv
416.238 78.818 mo
411.605 78.818 407.85 82.5738 407.85 87.2066 cv
407.85 91.8395 411.605 95.5953 416.238 95.5953 cv
420.872 95.5953 424.627 91.8395 424.627 87.2066 cv
424.627 82.5738 420.872 78.818 416.238 78.818 cv
f
327.711 172.369 mo
313.902 172.369 302.708 161.174 302.708 147.365 cv
302.708 133.556 313.902 122.361 327.711 122.361 cv
341.52 122.361 352.715 133.556 352.715 147.365 cv
352.715 161.174 341.52 172.369 327.711 172.369 cv
f
160.719 117.69 mo
146.91 117.69 135.716 106.495 135.716 92.6861 cv
135.716 78.8765 146.91 67.6822 160.719 67.6822 cv
174.528 67.6822 185.723 78.8765 185.723 92.6861 cv
185.723 106.495 174.528 117.69 160.719 117.69 cv
f
391.393 227.245 mo
377.583 227.245 366.389 216.05 366.389 202.241 cv
366.389 188.432 377.583 177.237 391.393 177.237 cv
405.201 177.237 416.396 188.432 416.396 202.241 cv
416.396 216.05 405.201 227.245 391.393 227.245 cv
f
365.129 274.311 mo
351.319 274.311 340.125 263.116 340.125 249.307 cv
340.125 235.498 351.319 224.303 365.129 224.303 cv
378.937 224.303 390.133 235.498 390.133 249.307 cv
390.133 263.116 378.937 274.311 365.129 274.311 cv
f
310.213 274.311 mo
296.404 274.311 285.21 263.116 285.21 249.307 cv
285.21 235.498 296.404 224.303 310.213 224.303 cv
324.022 224.303 335.217 235.498 335.217 249.307 cv
335.217 253.723 334.072 257.872 332.062 261.473 cv
331.31 261.283 330.522 261.182 329.711 261.182 cv
324.427 261.182 320.143 265.466 320.143 270.751 cv
320.143 271.248 320.18 271.736 320.254 272.213 cv
317.181 273.562 313.784 274.311 310.213 274.311 cv
f
338.747 319.758 mo
332.276 319.758 326.378 317.299 321.938 313.265 cv
321.876 307.74 318.847 302.927 314.37 300.344 cv
313.96 298.547 313.743 296.676 313.743 294.755 cv
313.743 287.435 316.888 280.851 321.9 276.278 cv
323.633 278.723 326.486 280.319 329.711 280.319 cv
334.996 280.319 339.279 276.035 339.279 270.751 cv
339.279 270.414 339.262 270.082 339.228 269.755 cv
352.815 270.012 363.751 281.106 363.751 294.755 cv
363.751 308.564 352.557 319.758 338.747 319.758 cv
f
394.121 319.758 mo
380.312 319.758 369.118 308.564 369.118 294.755 cv
369.118 280.945 380.312 269.751 394.121 269.751 cv
407.931 269.751 419.125 280.945 419.125 294.755 cv
419.125 308.564 407.931 319.758 394.121 319.758 cv
f
192.046 343.418 mo
178.237 343.418 167.043 332.224 167.043 318.414 cv
167.043 304.605 178.237 293.411 192.046 293.411 cv
205.855 293.411 217.05 304.605 217.05 318.414 cv
217.05 332.224 205.855 343.418 192.046 343.418 cv
f
136.898 343.418 mo
123.089 343.418 111.895 332.224 111.895 318.414 cv
111.895 304.605 123.089 293.411 136.898 293.411 cv
150.708 293.411 161.902 304.605 161.902 318.414 cv
161.902 332.224 150.708 343.418 136.898 343.418 cv
f
165.665 389.749 mo
151.855 389.749 140.661 378.554 140.661 364.745 cv
140.661 350.936 151.855 339.741 165.665 339.741 cv
179.474 339.741 190.668 350.936 190.668 364.745 cv
190.668 378.554 179.474 389.749 165.665 389.749 cv
f
96.9961 426.553 mo
83.1866 426.553 71.9922 415.359 71.9922 401.55 cv
71.9922 387.74 83.1866 376.546 96.9961 376.546 cv
99.6368 376.546 102.181 376.955 104.57 377.714 cv
102.404 379.85 101.061 382.82 101.061 386.103 cv
101.061 392.611 106.337 397.886 112.845 397.886 cv
116.019 397.886 118.9 396.631 121.019 394.59 cv
121.657 396.799 122 399.135 122 401.55 cv
122 415.359 110.806 426.553 96.9961 426.553 cv
f
41.0391 426.553 mo
27.2295 426.553 16.0351 415.359 16.0351 401.55 cv
16.0351 387.74 27.2295 376.546 41.0391 376.546 cv
54.8486 376.546 66.043 387.74 66.043 401.55 cv
66.043 409.734 62.1113 416.999 56.0335 421.561 cv
56.0861 421.181 56.1133 420.793 56.1133 420.399 cv
56.1133 415.766 52.3574 412.01 47.7246 412.01 cv
43.0918 412.01 39.336 415.766 39.336 420.399 cv
39.336 422.821 40.3629 425.004 42.0051 426.535 cv
41.6844 426.547 41.3628 426.553 41.0391 426.553 cv
f
156.171 234.183 mo
156.171 248.695 144.405 260.46 129.894 260.46 cv
115.381 260.46 103.616 248.695 103.616 234.183 cv
103.616 219.67 115.381 207.905 129.894 207.905 cv
144.405 207.905 156.171 219.67 156.171 234.183 cv
cp
1 .458824 .329412 rgb
f
416.396 172.369 mo
416.396 184.028 406.944 193.48 395.285 193.48 cv
383.627 193.48 374.175 184.028 374.175 172.369 cv
374.175 160.71 383.627 151.259 395.285 151.259 cv
406.944 151.259 416.396 160.71 416.396 172.369 cv
cp
.960784 .466667 .345098 rgb
f
100.02 286.279 mo
100.02 297.939 90.5674 307.39 78.9092 307.39 cv
67.25 307.39 57.7979 297.939 57.7979 286.279 cv
57.7979 274.621 67.25 265.169 78.9092 265.169 cv
90.5674 265.169 100.02 274.621 100.02 286.279 cv
cp
f
431.86 32.4059 mo
431.86 40.9469 424.937 47.8707 416.396 47.8707 cv
407.855 47.8707 400.932 40.9469 400.932 32.4059 cv
400.932 23.8648 407.855 16.941 416.396 16.941 cv
424.937 16.941 431.86 23.8648 431.86 32.4059 cv
cp
f
240.393 63.9459 mo
235.108 63.9459 230.824 59.6623 230.824 54.3775 cv
230.824 49.0934 235.108 44.8092 240.393 44.8092 cv
245.677 44.8092 249.961 49.0934 249.961 54.3775 cv
249.961 59.6623 245.677 63.9459 240.393 63.9459 cv
.652349 .652349 .652349 rgb
f
247.961 53.3775 mo
247.961 58.6622 243.677 62.9459 238.393 62.9459 cv
233.108 62.9459 228.824 58.6622 228.824 53.3775 cv
228.824 48.0934 233.108 43.8092 238.393 43.8092 cv
243.677 43.8092 247.961 48.0934 247.961 53.3775 cv
cp
.2 .2 .2 rgb
f
397.285 77.3087 mo
392.001 77.3087 387.717 73.0246 387.717 67.7404 cv
387.717 62.4556 392.001 58.1719 397.285 58.1719 cv
402.57 58.1719 406.853 62.4556 406.853 67.7404 cv
406.853 71.5219 404.66 74.7914 401.475 76.345 cv
400.405 76.5798 399.359 76.8834 398.345 77.2507 cv
397.997 77.289 397.643 77.3087 397.285 77.3087 cv
.652349 .652349 .652349 rgb
f
398.345 77.2507 mo
399.359 76.8834 400.405 76.5798 401.475 76.345 cv
400.511 76.8152 399.457 77.1282 398.345 77.2507 cv
.642491 .616332 .56692 rgb
f
404.854 66.7403 mo
404.854 72.0245 400.57 76.3087 395.285 76.3087 cv
390.001 76.3087 385.718 72.0245 385.718 66.7403 cv
385.718 61.4557 390.001 57.172 395.285 57.172 cv
400.57 57.172 404.854 61.4557 404.854 66.7403 cv
cp
.2 .2 .2 rgb
f
47.8047 173.369 mo
39.4599 173.369 32.6953 166.604 32.6953 158.259 cv
32.6953 149.915 39.4599 143.15 47.8047 143.15 cv
56.1494 143.15 62.914 149.915 62.914 158.259 cv
62.914 166.604 56.1494 173.369 47.8047 173.369 cv
.652349 .652349 .652349 rgb
f
60.9141 157.259 mo
60.9141 165.604 54.1494 172.369 45.8047 172.369 cv
37.46 172.369 30.6953 165.604 30.6953 157.259 cv
30.6953 148.915 37.46 142.15 45.8047 142.15 cv
54.1494 142.15 60.9141 148.915 60.9141 157.259 cv
cp
.2 .2 .2 rgb
f
163.902 281.967 mo
155.558 281.967 148.792 275.202 148.792 266.857 cv
148.792 258.512 155.558 251.748 163.902 251.748 cv
172.247 251.748 179.012 258.512 179.012 266.857 cv
179.012 275.202 172.247 281.967 163.902 281.967 cv
.652349 .652349 .652349 rgb
f
177.012 265.857 mo
177.012 274.202 170.247 280.967 161.902 280.967 cv
153.558 280.967 146.793 274.202 146.793 265.857 cv
146.793 257.512 153.558 250.748 161.902 250.748 cv
170.247 250.748 177.012 257.512 177.012 265.857 cv
cp
.2 .2 .2 rgb
f
306.83 328.55 mo
298.485 328.55 291.721 321.785 291.721 313.441 cv
291.721 305.096 298.485 298.331 306.83 298.331 cv
309.576 298.331 312.151 299.064 314.37 300.344 cv
315.527 305.41 318.222 309.889 321.938 313.265 cv
321.939 313.324 321.939 313.382 321.939 313.441 cv
321.939 321.785 315.175 328.55 306.83 328.55 cv
.652349 .652349 .652349 rgb
f
321.938 313.265 mo
318.222 309.889 315.527 305.41 314.37 300.344 cv
318.847 302.927 321.876 307.74 321.938 313.265 cv
.642491 .616332 .56692 rgb
f
319.939 312.441 mo
319.939 320.785 313.175 327.55 304.83 327.55 cv
296.485 327.55 289.721 320.785 289.721 312.441 cv
289.721 304.096 296.485 297.331 304.83 297.331 cv
313.175 297.331 319.939 304.096 319.939 312.441 cv
cp
.2 .2 .2 rgb
f
39.3955 335.135 mo
31.0508 335.135 24.2861 328.37 24.2861 320.026 cv
24.2861 311.681 31.0508 304.916 39.3955 304.916 cv
47.7402 304.916 54.5049 311.681 54.5049 320.026 cv
54.5049 328.37 47.7402 335.135 39.3955 335.135 cv
.652349 .652349 .652349 rgb
f
52.5059 319.026 mo
52.5059 327.37 45.7402 334.135 37.3955 334.135 cv
29.0508 334.135 22.2861 327.37 22.2861 319.026 cv
22.2861 310.681 29.0508 303.916 37.3955 303.916 cv
45.7402 303.916 52.5059 310.681 52.5059 319.026 cv
cp
.2 .2 .2 rgb
f
45.7148 42.9742 mo
40.4306 42.9742 36.1465 38.6905 36.1465 33.4059 cv
36.1465 28.1217 40.4306 23.8375 45.7148 23.8375 cv
50.999 23.8375 55.2833 28.1217 55.2833 33.4059 cv
55.2833 38.6905 50.999 42.9742 45.7148 42.9742 cv
.652349 .652349 .652349 rgb
f
53.2832 32.4059 mo
53.2832 37.6905 49 41.9742 43.7148 41.9742 cv
38.4307 41.9742 34.1465 37.6905 34.1465 32.4059 cv
34.1465 27.1217 38.4307 22.8375 43.7148 22.8375 cv
49 22.8375 53.2832 27.1217 53.2832 32.4059 cv
cp
.2 .2 .2 rgb
f
171.635 32.4059 mo
171.635 40.9469 164.711 47.8707 156.171 47.8707 cv
147.63 47.8707 140.706 40.9469 140.706 32.4059 cv
140.706 23.8648 147.63 16.941 156.171 16.941 cv
164.711 16.941 171.635 23.8648 171.635 32.4059 cv
cp
.960784 .466667 .345098 rgb
f
149.891 422.515 mo
149.891 430.043 143.787 436.146 136.26 436.146 cv
128.731 436.146 122.629 430.043 122.629 422.515 cv
122.629 414.987 128.731 408.884 136.26 408.884 cv
143.787 408.884 149.891 414.987 149.891 422.515 cv
cp
1 .458824 .329412 rgb
f
419.125 422.515 mo
419.125 429.291 413.633 434.783 406.857 434.783 cv
400.081 434.783 394.589 429.291 394.589 422.515 cv
394.589 415.74 400.081 410.247 406.857 410.247 cv
413.633 410.247 419.125 415.74 419.125 422.515 cv
cp
f
222.093 51.4396 mo
222.093 58.9674 215.99 65.0704 208.462 65.0704 cv
200.934 65.0704 194.831 58.9674 194.831 51.4396 cv
194.831 43.9112 200.934 37.8087 208.462 37.8087 cv
215.99 37.8087 222.093 43.9112 222.093 51.4396 cv
cp
f
216.05 405.884 mo
216.05 422.564 202.528 436.086 185.849 436.086 cv
169.169 436.086 155.647 422.564 155.647 405.884 cv
155.647 389.205 169.169 375.683 185.849 375.683 cv
202.528 375.683 216.05 389.205 216.05 405.884 cv
cp
.960784 .466667 .345098 rgb
f
321.9 276.278 mo
321.06 275.094 320.483 273.711 320.254 272.213 cv
325.263 270.014 329.414 266.22 332.062 261.473 cv
335.899 262.442 338.812 265.728 339.228 269.755 cv
339.068 269.752 338.908 269.751 338.747 269.751 cv
332.257 269.751 326.344 272.224 321.9 276.278 cv
.652349 .652349 .652349 rgb
f
320.254 272.213 mo
320.18 271.736 320.143 271.248 320.143 270.751 cv
320.143 265.466 324.427 261.182 329.711 261.182 cv
330.522 261.182 331.31 261.283 332.062 261.473 cv
329.414 266.22 325.263 270.014 320.254 272.213 cv
.642491 .616332 .56692 rgb
f
329.711 280.319 mo
326.486 280.319 323.633 278.723 321.9 276.278 cv
326.344 272.224 332.257 269.751 338.747 269.751 cv
338.908 269.751 339.068 269.752 339.228 269.755 cv
339.262 270.082 339.279 270.414 339.279 270.751 cv
339.279 276.035 334.996 280.319 329.711 280.319 cv
f
337.279 269.751 mo
337.279 275.035 332.996 279.319 327.711 279.319 cv
322.427 279.319 318.144 275.035 318.144 269.751 cv
318.144 264.466 322.427 260.182 327.711 260.182 cv
332.996 260.182 337.279 264.466 337.279 269.751 cv
cp
.2 .2 .2 rgb
f
293.099 422.407 mo
287.814 422.407 283.53 418.123 283.53 412.839 cv
283.53 407.554 287.814 403.27 293.099 403.27 cv
298.383 403.27 302.666 407.554 302.666 412.839 cv
302.666 418.123 298.383 422.407 293.099 422.407 cv
.652349 .652349 .652349 rgb
f
300.667 411.839 mo
300.667 417.123 296.383 421.407 291.099 421.407 cv
285.813 421.407 281.53 417.123 281.53 411.839 cv
281.53 406.554 285.813 402.27 291.099 402.27 cv
296.383 402.27 300.667 406.554 300.667 411.839 cv
cp
.2 .2 .2 rgb
f
47.7246 428.787 mo
45.5143 428.787 43.5035 427.932 42.0051 426.535 cv
47.2578 426.335 52.0963 424.515 56.0335 421.561 cv
55.4678 425.644 51.9632 428.787 47.7246 428.787 cv
.652349 .652349 .652349 rgb
f
42.0051 426.535 mo
40.3629 425.004 39.336 422.821 39.336 420.399 cv
39.336 415.766 43.0918 412.01 47.7246 412.01 cv
52.3574 412.01 56.1133 415.766 56.1133 420.399 cv
56.1133 420.793 56.0861 421.181 56.0335 421.561 cv
52.0963 424.515 47.2578 426.335 42.0051 426.535 cv
.642491 .616332 .56692 rgb
f
54.1133 419.399 mo
54.1133 424.031 50.3574 427.787 45.7246 427.787 cv
41.0918 427.787 37.3359 424.031 37.3359 419.399 cv
37.3359 414.766 41.0918 411.01 45.7246 411.01 cv
50.3574 411.01 54.1133 414.766 54.1133 419.399 cv
cp
.2 .2 .2 rgb
f
416.238 95.5953 mo
411.605 95.5953 407.85 91.8395 407.85 87.2066 cv
407.85 82.5738 411.605 78.818 416.238 78.818 cv
420.872 78.818 424.627 82.5738 424.627 87.2066 cv
424.627 91.8395 420.872 95.5953 416.238 95.5953 cv
.642491 .616332 .56692 rgb
f
422.628 86.2066 mo
422.628 90.8395 418.872 94.5953 414.239 94.5953 cv
409.605 94.5953 405.851 90.8395 405.851 86.2066 cv
405.851 81.5738 409.605 77.818 414.239 77.818 cv
418.872 77.818 422.628 81.5738 422.628 86.2066 cv
cp
.2 .2 .2 rgb
f
121.019 394.59 mo
118.703 386.582 112.492 380.229 104.57 377.714 cv
106.698 375.615 109.62 374.32 112.845 374.32 cv
119.352 374.32 124.628 379.595 124.628 386.103 cv
124.628 389.437 123.244 392.447 121.019 394.59 cv
.652349 .652349 .652349 rgb
f
112.845 397.886 mo
106.337 397.886 101.061 392.611 101.061 386.103 cv
101.061 382.82 102.404 379.85 104.57 377.714 cv
112.492 380.229 118.703 386.582 121.019 394.59 cv
118.9 396.631 116.019 397.886 112.845 397.886 cv
.642491 .616332 .56692 rgb
f
122.629 385.103 mo
122.629 391.611 117.353 396.886 110.845 396.886 cv
104.337 396.886 99.0615 391.611 99.0615 385.103 cv
99.0615 378.595 104.337 373.32 110.845 373.32 cv
117.353 373.32 122.629 378.595 122.629 385.103 cv
cp
.2 .2 .2 rgb
f
310.213 269.751 mo
310.213 279.469 302.335 287.348 292.616 287.348 cv
282.897 287.348 275.02 279.469 275.02 269.751 cv
275.02 260.032 282.897 252.153 292.616 252.153 cv
302.335 252.153 310.213 260.032 310.213 269.751 cv
cp
1 .458824 .329412 rgb
f
37.0576 267.888 mo
39.1611 267.888 41.7402 268.723 44.7637 270.387 cv
47.6572 271.981 49.7646 271.232 50.7637 270.644 cv
51.2451 270.358 51.6641 270.002 52.0107 269.582 cv
51.3594 266.115 47.7891 263.532 43.5791 263.532 cv
40.0713 263.532 36.9414 265.362 35.6602 268.026 cv
36.0996 267.934 36.5654 267.888 37.0576 267.888 cv
cp
48.1416 272.621 mo
47.0039 272.621 45.6602 272.333 44.1504 271.502 cv
40.0439 269.243 36.9307 268.611 34.8975 269.621 cv
34.6738 269.732 34.4082 269.703 34.2139 269.546 cv
34.0205 269.39 33.9355 269.136 33.9971 268.895 cv
34.9688 265.049 38.998 262.259 43.5791 262.259 cv
48.5244 262.259 52.708 265.442 53.3135 269.663 cv
53.3379 269.827 53.2949 269.995 53.1963 270.13 cv
52.7207 270.778 52.1191 271.32 51.4111 271.739 cv
50.7188 272.148 49.5996 272.621 48.1416 272.621 cv
cp
.788235 .254902 .12549 rgb
f
35.082 271.947 mo
35.4668 275.633 39.1406 278.482 43.5791 278.482 cv
47.1143 278.482 50.1836 276.69 51.4727 274.045 cv
49.7871 274.818 46.9531 275.41 43.4004 273.448 cv
39.793 271.462 36.8896 270.815 35.4346 271.678 cv
35.3076 271.753 35.1914 271.842 35.082 271.947 cv
cp
43.5791 279.755 mo
38.3643 279.755 34.0645 276.244 33.79 271.762 cv
33.7793 271.601 33.8311 271.443 33.9336 271.318 cv
34.1816 271.018 34.4688 270.77 34.7861 270.582 cv
36.6895 269.453 39.8809 270.057 44.0146 272.333 cv
44.0146 272.334 li
47.5869 274.305 50.2705 273.327 51.5518 272.568 cv
51.791 272.428 52.0195 272.267 52.2295 272.102 cv
52.4395 271.938 52.7285 271.92 52.9561 272.059 cv
53.1826 272.198 53.2988 272.463 53.248 272.725 cv
52.4473 276.798 48.3809 279.755 43.5791 279.755 cv
cp
f
388.092 312.236 mo
390.195 312.236 392.774 313.07 395.799 314.734 cv
398.692 316.328 400.8 315.579 401.799 314.991 cv
402.28 314.706 402.699 314.349 403.045 313.929 cv
402.395 310.462 398.824 307.879 394.614 307.879 cv
391.105 307.879 387.977 309.71 386.695 312.373 cv
387.135 312.282 387.601 312.236 388.092 312.236 cv
cp
399.176 316.968 mo
398.038 316.968 396.694 316.681 395.185 315.849 cv
391.078 313.591 387.965 312.959 385.932 313.968 cv
385.709 314.079 385.442 314.05 385.249 313.893 cv
385.056 313.737 384.971 313.483 385.031 313.242 cv
386.003 309.397 390.033 306.607 394.614 306.607 cv
399.559 306.607 403.743 309.789 404.349 314.01 cv
404.372 314.175 404.33 314.343 404.23 314.477 cv
403.755 315.126 403.154 315.668 402.446 316.087 cv
401.753 316.495 400.634 316.968 399.176 316.968 cv
cp
f
386.116 316.295 mo
386.502 319.98 390.175 322.829 394.614 322.829 cv
398.148 322.829 401.219 321.037 402.507 318.392 cv
400.822 319.166 397.988 319.757 394.435 317.796 cv
390.827 315.809 387.924 315.162 386.47 316.025 cv
386.343 316.1 386.226 316.189 386.116 316.295 cv
cp
394.614 324.102 mo
389.399 324.102 385.099 320.591 384.824 316.109 cv
384.814 315.949 384.866 315.79 384.969 315.665 cv
385.217 315.365 385.504 315.117 385.821 314.929 cv
387.724 313.8 390.915 314.405 395.049 316.681 cv
395.05 316.681 li
398.622 318.653 401.305 317.674 402.587 316.915 cv
402.826 316.776 403.054 316.614 403.265 316.449 cv
403.474 316.285 403.763 316.268 403.99 316.407 cv
404.217 316.546 404.333 316.811 404.282 317.072 cv
403.481 321.146 399.415 324.102 394.614 324.102 cv
cp
f
307.044 33.0851 mo
309.147 33.0851 311.726 33.92 314.75 35.5836 cv
317.644 37.1778 319.751 36.4283 320.75 35.8404 cv
321.231 35.5548 321.65 35.1983 321.997 34.7789 cv
321.346 31.3116 317.775 28.7286 313.565 28.7286 cv
310.058 28.7286 306.928 30.5587 305.646 33.2228 cv
306.086 33.131 306.552 33.0851 307.044 33.0851 cv
cp
318.127 37.818 mo
316.99 37.818 315.646 37.5299 314.136 36.6983 cv
310.03 34.44 306.917 33.8082 304.883 34.8175 cv
304.66 34.9283 304.395 34.8995 304.2 34.7428 cv
304.007 34.5865 303.922 34.3326 303.982 34.0914 cv
304.955 30.2462 308.984 27.4557 313.565 27.4557 cv
318.51 27.4557 322.694 30.6383 323.3 34.8595 cv
323.323 35.024 323.281 35.192 323.183 35.3263 cv
322.706 35.9752 322.105 36.5172 321.397 36.9361 cv
320.704 37.3443 319.585 37.818 318.127 37.818 cv
cp
f
305.067 37.1441 mo
305.453 40.8297 309.127 43.6783 313.565 43.6783 cv
317.1 43.6783 320.17 41.8863 321.458 39.2418 cv
319.773 40.0152 316.939 40.6065 313.387 38.6451 cv
309.778 36.6583 306.876 36.0113 305.421 36.8746 cv
305.294 36.9498 305.177 37.0387 305.067 37.1441 cv
cp
313.565 44.9513 mo
308.351 44.9513 304.051 41.4405 303.775 36.9591 cv
303.766 36.798 303.817 36.6393 303.92 36.5148 cv
304.168 36.2145 304.455 35.9664 304.772 35.7789 cv
306.676 34.6495 309.867 35.254 314.001 37.5299 cv
314.001 37.5309 li
317.573 39.5021 320.257 38.524 321.538 37.7643 cv
321.777 37.6251 322.005 37.4635 322.216 37.2984 cv
322.426 37.1344 322.715 37.1168 322.942 37.256 cv
323.169 37.3946 323.285 37.6598 323.234 37.9215 cv
322.433 41.9947 318.366 44.9513 313.565 44.9513 cv
cp
f
127.938 91.4772 mo
130.042 91.4772 132.62 92.3116 135.645 93.9752 cv
138.538 95.5694 140.646 94.8199 141.645 94.232 cv
142.126 93.9469 142.545 93.59 142.891 93.1705 cv
142.24 89.7032 138.67 87.1202 134.46 87.1202 cv
130.951 87.1202 127.822 88.9508 126.541 91.6144 cv
126.98 91.5231 127.446 91.4772 127.938 91.4772 cv
cp
139.021 96.2096 mo
137.885 96.2096 136.541 95.922 135.03 95.0904 cv
130.924 92.8316 127.812 92.1998 125.777 93.2091 cv
125.555 93.3204 125.288 93.2911 125.095 93.1344 cv
124.901 92.9786 124.816 92.7242 124.877 92.483 cv
125.849 88.6378 129.879 85.8478 134.46 85.8478 cv
139.404 85.8478 143.589 89.0304 144.194 93.2516 cv
144.218 93.4161 144.176 93.5841 144.077 93.7179 cv
143.601 94.3668 143 94.9088 142.292 95.3277 cv
141.599 95.7359 140.479 96.2096 139.021 96.2096 cv
cp
f
125.962 95.5358 mo
126.348 99.2213 130.021 102.07 134.46 102.07 cv
137.994 102.07 141.064 100.278 142.353 97.6334 cv
140.668 98.4073 137.834 98.9982 134.281 97.0367 cv
130.673 95.0499 127.771 94.4029 126.315 95.2662 cv
126.188 95.3414 126.071 95.4303 125.962 95.5358 cv
cp
134.46 103.343 mo
129.245 103.343 124.945 99.8321 124.67 95.3507 cv
124.66 95.19 124.712 95.0314 124.814 94.9064 cv
125.063 94.6061 125.35 94.358 125.667 94.1705 cv
127.57 93.0411 130.762 93.6461 134.895 95.922 cv
134.896 95.9225 li
138.468 97.8941 141.151 96.9156 142.433 96.1564 cv
142.672 96.0172 142.899 95.8556 143.11 95.69 cv
143.32 95.526 143.609 95.5084 143.836 95.6481 cv
144.063 95.7862 144.18 96.0519 144.129 96.3136 cv
143.327 100.387 139.261 103.343 134.46 103.343 cv
cp
f
348.068 164.305 mo
350.172 164.305 352.751 165.139 355.774 166.803 cv
358.668 168.397 360.775 167.648 361.774 167.06 cv
362.256 166.775 362.675 166.418 363.021 165.998 cv
362.371 162.531 358.8 159.948 354.59 159.948 cv
351.082 159.948 347.952 161.778 346.671 164.442 cv
347.11 164.351 347.576 164.305 348.068 164.305 cv
cp
359.152 169.037 mo
358.015 169.037 356.671 168.75 355.161 167.918 cv
351.055 165.66 347.941 165.027 345.908 166.037 cv
345.685 166.148 345.419 166.119 345.225 165.962 cv
345.031 165.806 344.946 165.552 345.008 165.311 cv
345.979 161.466 350.009 158.675 354.59 158.675 cv
359.535 158.675 363.72 161.858 364.324 166.079 cv
364.349 166.244 364.306 166.412 364.207 166.546 cv
363.731 167.195 363.13 167.736 362.422 168.155 cv
361.729 168.564 360.61 169.037 359.152 169.037 cv
cp
f
346.093 168.364 mo
346.478 172.049 350.151 174.898 354.59 174.898 cv
358.125 174.898 361.194 173.106 362.483 170.462 cv
360.798 171.235 357.964 171.826 354.411 169.865 cv
350.804 167.878 347.9 167.231 346.445 168.094 cv
346.318 168.169 346.202 168.258 346.093 168.364 cv
cp
354.59 176.171 mo
349.375 176.171 345.075 172.66 344.801 168.178 cv
344.79 168.018 344.842 167.859 344.944 167.734 cv
345.192 167.434 345.479 167.186 345.797 166.998 cv
347.7 165.869 350.892 166.474 355.025 168.75 cv
355.025 168.75 li
358.599 170.722 361.281 169.743 362.563 168.984 cv
362.802 168.845 363.03 168.683 363.24 168.518 cv
363.45 168.354 363.739 168.337 363.967 168.476 cv
364.193 168.614 364.31 168.879 364.259 169.141 cv
363.458 173.214 359.392 176.171 354.59 176.171 cv
cp
f
190.666 358.538 mo
192.77 358.538 195.349 359.372 198.373 361.036 cv
201.267 362.63 203.374 361.881 204.373 361.293 cv
204.854 361.007 205.273 360.651 205.619 360.231 cv
204.969 356.764 201.398 354.181 197.188 354.181 cv
193.68 354.181 190.551 356.011 189.27 358.675 cv
189.708 358.584 190.175 358.538 190.666 358.538 cv
cp
201.75 363.271 mo
200.612 363.271 199.269 362.983 197.759 362.151 cv
193.652 359.893 190.539 359.26 188.506 360.27 cv
188.283 360.381 188.017 360.352 187.823 360.195 cv
187.63 360.039 187.544 359.785 187.605 359.544 cv
188.577 355.699 192.607 352.908 197.188 352.908 cv
202.133 352.908 206.317 356.091 206.923 360.312 cv
206.946 360.477 206.904 360.645 206.805 360.779 cv
206.329 361.428 205.729 361.97 205.021 362.388 cv
204.327 362.797 203.208 363.271 201.75 363.271 cv
cp
f
188.69 362.597 mo
189.076 366.282 192.749 369.131 197.188 369.131 cv
200.723 369.131 203.793 367.339 205.081 364.694 cv
203.396 365.468 200.563 366.059 197.009 364.098 cv
193.401 362.11 190.498 361.464 189.043 362.327 cv
188.917 362.402 188.8 362.491 188.69 362.597 cv
cp
197.188 370.404 mo
191.974 370.404 187.673 366.893 187.398 362.412 cv
187.389 362.251 187.44 362.092 187.543 361.967 cv
187.79 361.667 188.078 361.419 188.396 361.231 cv
190.298 360.102 193.489 360.707 197.623 362.983 cv
197.624 362.984 li
201.196 364.955 203.879 363.976 205.16 363.217 cv
205.399 363.078 205.628 362.916 205.839 362.751 cv
206.048 362.587 206.337 362.569 206.564 362.709 cv
206.791 362.847 206.907 363.112 206.856 363.374 cv
206.056 367.447 201.989 370.404 197.188 370.404 cv
cp
f
131.973 61.7091 mo
131.973 77.3258 119.313 89.9859 103.695 89.9859 cv
88.0791 89.9859 75.4189 77.3258 75.4189 61.7091 cv
75.4189 46.0919 88.0791 33.4317 103.695 33.4317 cv
119.313 33.4317 131.973 46.0919 131.973 61.7091 cv
cp
1 1 1 rgb
f
103.695 33.9317 mo
88.3789 33.9317 75.9189 46.3927 75.9189 61.7091 cv
75.9189 77.0255 88.3789 89.4859 103.695 89.4859 cv
119.012 89.4859 131.473 77.0255 131.473 61.7091 cv
131.473 46.3927 119.012 33.9317 103.695 33.9317 cv
cp
103.695 90.4859 mo
87.8281 90.4859 74.9189 77.5768 74.9189 61.7091 cv
74.9189 45.8414 87.8281 32.9317 103.695 32.9317 cv
119.563 32.9317 132.473 45.8414 132.473 61.7091 cv
132.473 77.5768 119.563 90.4859 103.695 90.4859 cv
cp
.721569 .721569 .721569 rgb
f
384.266 47.9898 mo
384.266 63.6065 371.605 76.2667 355.988 76.2667 cv
340.371 76.2667 327.711 63.6065 327.711 47.9898 cv
327.711 32.3727 340.371 19.7125 355.988 19.7125 cv
371.605 19.7125 384.266 32.3727 384.266 47.9898 cv
cp
1 1 1 rgb
f
355.988 20.2125 mo
340.672 20.2125 328.211 32.6734 328.211 47.9898 cv
328.211 63.3063 340.672 75.7667 355.988 75.7667 cv
371.305 75.7667 383.766 63.3063 383.766 47.9898 cv
383.766 32.6734 371.305 20.2125 355.988 20.2125 cv
cp
355.988 76.7667 mo
340.12 76.7667 327.211 63.8575 327.211 47.9898 cv
327.211 32.1222 340.12 19.2125 355.988 19.2125 cv
371.856 19.2125 384.766 32.1222 384.766 47.9898 cv
384.766 63.8575 371.856 76.7667 355.988 76.7667 cv
cp
.721569 .721569 .721569 rgb
f
328.688 79.7164 mo
328.688 95.3336 316.028 107.994 300.411 107.994 cv
284.794 107.994 272.134 95.3336 272.134 79.7164 cv
272.134 64.0997 284.794 51.4396 300.411 51.4396 cv
316.028 51.4396 328.688 64.0997 328.688 79.7164 cv
cp
1 1 1 rgb
f
300.411 51.9396 mo
285.095 51.9396 272.634 64.4 272.634 79.7164 cv
272.634 95.0328 285.095 107.494 300.411 107.494 cv
315.728 107.494 328.188 95.0328 328.188 79.7164 cv
328.188 64.4 315.728 51.9396 300.411 51.9396 cv
cp
300.411 108.494 mo
284.543 108.494 271.634 95.5841 271.634 79.7164 cv
271.634 63.8487 284.543 50.9396 300.411 50.9396 cv
316.279 50.9396 329.188 63.8487 329.188 79.7164 cv
329.188 95.5841 316.279 108.494 300.411 108.494 cv
cp
.721569 .721569 .721569 rgb
f
384.688 111.631 mo
384.688 127.248 372.027 139.908 356.41 139.908 cv
340.793 139.908 328.133 127.248 328.133 111.631 cv
328.133 96.0138 340.793 83.3536 356.41 83.3536 cv
372.027 83.3536 384.688 96.0138 384.688 111.631 cv
cp
1 1 1 rgb
f
356.41 83.8536 mo
341.094 83.8536 328.633 96.3146 328.633 111.631 cv
328.633 126.947 341.094 139.408 356.41 139.408 cv
371.727 139.408 384.188 126.947 384.188 111.631 cv
384.188 96.3146 371.727 83.8536 356.41 83.8536 cv
cp
356.41 140.408 mo
340.542 140.408 327.633 127.499 327.633 111.631 cv
327.633 95.7633 340.542 82.8536 356.41 82.8536 cv
372.278 82.8536 385.188 95.7633 385.188 111.631 cv
385.188 127.499 372.278 140.408 356.41 140.408 cv
cp
.721569 .721569 .721569 rgb
f
71.9922 89.9859 mo
71.9922 105.603 59.332 118.263 43.7148 118.263 cv
28.0986 118.263 15.4385 105.603 15.4385 89.9859 cv
15.4385 74.3692 28.0986 61.7091 43.7148 61.7091 cv
59.332 61.7091 71.9922 74.3692 71.9922 89.9859 cv
cp
1 1 1 rgb
f
43.7148 62.2091 mo
28.3984 62.2091 15.9385 74.6695 15.9385 89.9859 cv
15.9385 105.302 28.3984 117.763 43.7148 117.763 cv
59.0313 117.763 71.4922 105.302 71.4922 89.9859 cv
71.4922 74.6695 59.0313 62.2091 43.7148 62.2091 cv
cp
43.7148 118.763 mo
27.8477 118.763 14.9385 105.854 14.9385 89.9859 cv
14.9385 74.1183 27.8477 61.2091 43.7148 61.2091 cv
59.583 61.2091 72.4922 74.1183 72.4922 89.9859 cv
72.4922 105.854 59.583 118.763 43.7148 118.763 cv
cp
.721569 .721569 .721569 rgb
f
125.564 126.334 mo
125.564 141.951 112.904 154.611 97.2871 154.611 cv
81.6699 154.611 69.0098 141.951 69.0098 126.334 cv
69.0098 110.717 81.6699 98.0567 97.2871 98.0567 cv
112.904 98.0567 125.564 110.717 125.564 126.334 cv
cp
1 1 1 rgb
f
97.2871 98.5567 mo
81.9707 98.5567 69.5098 111.018 69.5098 126.334 cv
69.5098 141.65 81.9707 154.111 97.2871 154.111 cv
112.604 154.111 125.064 141.65 125.064 126.334 cv
125.064 111.018 112.604 98.5567 97.2871 98.5567 cv
cp
97.2871 155.111 mo
81.4189 155.111 68.5098 142.202 68.5098 126.334 cv
68.5098 110.466 81.4189 97.5567 97.2871 97.5567 cv
113.155 97.5567 126.064 110.466 126.064 126.334 cv
126.064 142.202 113.155 155.111 97.2871 155.111 cv
cp
.721569 .721569 .721569 rgb
f
184.447 159.301 mo
184.447 174.919 171.787 187.579 156.171 187.579 cv
140.554 187.579 127.894 174.919 127.894 159.301 cv
127.894 143.684 140.554 131.024 156.171 131.024 cv
171.787 131.024 184.447 143.684 184.447 159.301 cv
cp
1 1 1 rgb
f
156.171 131.524 mo
140.854 131.524 128.394 143.985 128.394 159.301 cv
128.394 174.618 140.854 187.079 156.171 187.079 cv
171.487 187.079 183.947 174.618 183.947 159.301 cv
183.947 143.985 171.487 131.524 156.171 131.524 cv
cp
156.171 188.079 mo
140.303 188.079 127.394 175.169 127.394 159.301 cv
127.394 143.434 140.303 130.524 156.171 130.524 cv
172.038 130.524 184.947 143.434 184.947 159.301 cv
184.947 175.169 172.038 188.079 156.171 188.079 cv
cp
.721569 .721569 .721569 rgb
f
378.022 210.056 mo
378.022 225.673 365.362 238.334 349.746 238.334 cv
334.129 238.334 321.469 225.673 321.469 210.056 cv
321.469 194.44 334.129 181.779 349.746 181.779 cv
365.362 181.779 378.022 194.44 378.022 210.056 cv
cp
1 1 1 rgb
f
349.746 182.279 mo
334.43 182.279 321.969 194.74 321.969 210.056 cv
321.969 225.373 334.43 237.834 349.746 237.834 cv
365.063 237.834 377.522 225.373 377.522 210.056 cv
377.522 194.74 365.063 182.279 349.746 182.279 cv
cp
349.746 238.834 mo
333.878 238.834 320.969 225.924 320.969 210.056 cv
320.969 194.189 333.878 181.279 349.746 181.279 cv
365.613 181.279 378.522 194.189 378.522 210.056 cv
378.522 225.924 365.613 238.834 349.746 238.834 cv
cp
.721569 .721569 .721569 rgb
f
148.583 339.741 mo
148.583 355.359 135.924 368.019 120.307 368.019 cv
104.689 368.019 92.0293 355.359 92.0293 339.741 cv
92.0293 324.125 104.689 311.464 120.307 311.464 cv
135.924 311.464 148.583 324.125 148.583 339.741 cv
cp
1 1 1 rgb
f
120.307 311.964 mo
104.99 311.964 92.5293 324.425 92.5293 339.741 cv
92.5293 355.058 104.99 367.519 120.307 367.519 cv
135.623 367.519 148.083 355.058 148.083 339.741 cv
148.083 324.425 135.623 311.964 120.307 311.964 cv
cp
120.307 368.519 mo
104.438 368.519 91.5293 355.609 91.5293 339.741 cv
91.5293 323.874 104.438 310.964 120.307 310.964 cv
136.174 310.964 149.083 323.874 149.083 339.741 cv
149.083 355.609 136.174 368.519 120.307 368.519 cv
cp
.721569 .721569 .721569 rgb
f
93.3613 373.952 mo
93.3613 389.569 80.7012 402.229 65.084 402.229 cv
49.4668 402.229 36.8066 389.569 36.8066 373.952 cv
36.8066 358.335 49.4668 345.675 65.084 345.675 cv
80.7012 345.675 93.3613 358.335 93.3613 373.952 cv
cp
1 1 1 rgb
f
65.084 346.175 mo
49.7676 346.175 37.3066 358.635 37.3066 373.952 cv
37.3066 389.268 49.7676 401.729 65.084 401.729 cv
80.4004 401.729 92.8613 389.268 92.8613 373.952 cv
92.8613 358.635 80.4004 346.175 65.084 346.175 cv
cp
65.084 402.729 mo
49.2158 402.729 36.3066 389.819 36.3066 373.952 cv
36.3066 358.084 49.2158 345.175 65.084 345.175 cv
80.9521 345.175 93.8613 358.084 93.8613 373.952 cv
93.8613 389.819 80.9521 402.729 65.084 402.729 cv
cp
.721569 .721569 .721569 rgb
f
263.234 265.873 mo
263.234 281.49 250.574 294.15 234.957 294.15 cv
219.34 294.15 206.68 281.49 206.68 265.873 cv
206.68 250.256 219.34 237.596 234.957 237.596 cv
250.574 237.596 263.234 250.256 263.234 265.873 cv
cp
1 1 1 rgb
f
234.957 238.096 mo
219.641 238.096 207.18 250.557 207.18 265.873 cv
207.18 281.19 219.641 293.65 234.957 293.65 cv
250.273 293.65 262.734 281.19 262.734 265.873 cv
262.734 250.557 250.273 238.096 234.957 238.096 cv
cp
234.957 294.65 mo
219.089 294.65 206.18 281.741 206.18 265.873 cv
206.18 250.005 219.089 237.096 234.957 237.096 cv
250.825 237.096 263.734 250.005 263.734 265.873 cv
263.734 281.741 250.825 294.65 234.957 294.65 cv
cp
.721569 .721569 .721569 rgb
f
263.234 330.065 mo
263.234 345.682 250.574 358.342 234.957 358.342 cv
219.34 358.342 206.68 345.682 206.68 330.065 cv
206.68 314.448 219.34 301.788 234.957 301.788 cv
250.574 301.788 263.234 314.448 263.234 330.065 cv
cp
1 1 1 rgb
f
234.957 302.288 mo
219.641 302.288 207.18 314.748 207.18 330.065 cv
207.18 345.381 219.641 357.842 234.957 357.842 cv
250.273 357.842 262.734 345.381 262.734 330.065 cv
262.734 314.748 250.273 302.288 234.957 302.288 cv
cp
234.957 358.842 mo
219.089 358.842 206.18 345.932 206.18 330.065 cv
206.18 314.197 219.089 301.288 234.957 301.288 cv
250.825 301.288 263.734 314.197 263.734 330.065 cv
263.734 345.932 250.825 358.842 234.957 358.842 cv
cp
.721569 .721569 .721569 rgb
f
263.234 395.779 mo
263.234 411.396 250.574 424.056 234.957 424.056 cv
219.34 424.056 206.68 411.396 206.68 395.779 cv
206.68 380.162 219.34 367.502 234.957 367.502 cv
250.574 367.502 263.234 380.162 263.234 395.779 cv
cp
1 1 1 rgb
f
234.957 368.002 mo
219.641 368.002 207.18 380.463 207.18 395.779 cv
207.18 411.095 219.641 423.556 234.957 423.556 cv
250.273 423.556 262.734 411.095 262.734 395.779 cv
262.734 380.463 250.273 368.002 234.957 368.002 cv
cp
234.957 424.556 mo
219.089 424.556 206.18 411.647 206.18 395.779 cv
206.18 379.911 219.089 367.002 234.957 367.002 cv
250.825 367.002 263.734 379.911 263.734 395.779 cv
263.734 411.647 250.825 424.556 234.957 424.556 cv
cp
.721569 .721569 .721569 rgb
f
319.376 363.058 mo
319.376 378.675 306.716 391.336 291.099 391.336 cv
275.481 391.336 262.821 378.675 262.821 363.058 cv
262.821 347.441 275.481 334.781 291.099 334.781 cv
306.716 334.781 319.376 347.441 319.376 363.058 cv
cp
1 1 1 rgb
f
291.099 335.281 mo
275.782 335.281 263.321 347.742 263.321 363.058 cv
263.321 378.375 275.782 390.836 291.099 390.836 cv
306.415 390.836 318.876 378.375 318.876 363.058 cv
318.876 347.742 306.415 335.281 291.099 335.281 cv
cp
291.099 391.836 mo
275.23 391.836 262.321 378.926 262.321 363.058 cv
262.321 347.191 275.23 334.281 291.099 334.281 cv
306.967 334.281 319.876 347.191 319.876 363.058 cv
319.876 378.926 306.967 391.836 291.099 391.836 cv
cp
.721569 .721569 .721569 rgb
f
377.022 329.509 mo
377.022 345.126 364.362 357.786 348.746 357.786 cv
333.129 357.786 320.469 345.126 320.469 329.509 cv
320.469 313.892 333.129 301.232 348.746 301.232 cv
364.362 301.232 377.022 313.892 377.022 329.509 cv
cp
1 1 1 rgb
f
348.746 301.732 mo
333.43 301.732 320.969 314.193 320.969 329.509 cv
320.969 344.825 333.43 357.286 348.746 357.286 cv
364.063 357.286 376.522 344.825 376.522 329.509 cv
376.522 314.193 364.063 301.732 348.746 301.732 cv
cp
348.746 358.286 mo
332.878 358.286 319.969 345.377 319.969 329.509 cv
319.969 313.641 332.878 300.732 348.746 300.732 cv
364.613 300.732 377.522 313.641 377.522 329.509 cv
377.522 345.377 364.613 358.286 348.746 358.286 cv
cp
.721569 .721569 .721569 rgb
f
377.022 395.842 mo
377.022 411.459 364.362 424.119 348.746 424.119 cv
333.129 424.119 320.469 411.459 320.469 395.842 cv
320.469 380.225 333.129 367.565 348.746 367.565 cv
364.362 367.565 377.022 380.225 377.022 395.842 cv
cp
1 1 1 rgb
f
348.746 368.065 mo
333.43 368.065 320.969 380.526 320.969 395.842 cv
320.969 411.158 333.43 423.619 348.746 423.619 cv
364.063 423.619 376.522 411.158 376.522 395.842 cv
376.522 380.526 364.063 368.065 348.746 368.065 cv
cp
348.746 424.619 mo
332.878 424.619 319.969 411.71 319.969 395.842 cv
319.969 379.974 332.878 367.065 348.746 367.065 cv
364.613 367.065 377.522 379.974 377.522 395.842 cv
377.522 411.71 364.613 424.619 348.746 424.619 cv
cp
.721569 .721569 .721569 rgb
f
437.683 360.081 mo
437.683 375.697 425.022 388.358 409.405 388.358 cv
393.788 388.358 381.128 375.697 381.128 360.081 cv
381.128 344.464 393.788 331.803 409.405 331.803 cv
425.022 331.803 437.683 344.464 437.683 360.081 cv
cp
1 1 1 rgb
f
409.405 332.303 mo
394.089 332.303 381.628 344.764 381.628 360.081 cv
381.628 375.397 394.089 387.858 409.405 387.858 cv
424.722 387.858 437.183 375.397 437.183 360.081 cv
437.183 344.764 424.722 332.303 409.405 332.303 cv
cp
409.405 388.858 mo
393.537 388.858 380.628 375.948 380.628 360.081 cv
380.628 344.213 393.537 331.303 409.405 331.303 cv
425.273 331.303 438.183 344.213 438.183 360.081 cv
438.183 375.948 425.273 388.858 409.405 388.858 cv
cp
.721569 .721569 .721569 rgb
f
128.282 191.963 mo
128.282 207.58 115.622 220.24 100.005 220.24 cv
84.3877 220.24 71.7275 207.58 71.7275 191.963 cv
71.7275 176.346 84.3877 163.686 100.005 163.686 cv
115.622 163.686 128.282 176.346 128.282 191.963 cv
cp
1 1 1 rgb
f
100.005 164.186 mo
84.6885 164.186 72.2275 176.647 72.2275 191.963 cv
72.2275 207.28 84.6885 219.74 100.005 219.74 cv
115.321 219.74 127.782 207.28 127.782 191.963 cv
127.782 176.647 115.321 164.186 100.005 164.186 cv
cp
100.005 220.74 mo
84.1367 220.74 71.2275 207.831 71.2275 191.963 cv
71.2275 176.096 84.1367 163.186 100.005 163.186 cv
115.873 163.186 128.782 176.096 128.782 191.963 cv
128.782 207.831 115.873 220.74 100.005 220.74 cv
cp
.721569 .721569 .721569 rgb
f
71.9922 223.556 mo
71.9922 239.173 59.332 251.834 43.7148 251.834 cv
28.0986 251.834 15.4385 239.173 15.4385 223.556 cv
15.4385 207.939 28.0986 195.279 43.7148 195.279 cv
59.332 195.279 71.9922 207.939 71.9922 223.556 cv
cp
1 1 1 rgb
f
43.7148 195.779 mo
28.3984 195.779 15.9385 208.24 15.9385 223.556 cv
15.9385 238.873 28.3984 251.334 43.7148 251.334 cv
59.0313 251.334 71.4922 238.873 71.4922 223.556 cv
71.4922 208.24 59.0313 195.779 43.7148 195.779 cv
cp
43.7148 252.334 mo
27.8477 252.334 14.9385 239.424 14.9385 223.556 cv
14.9385 207.689 27.8477 194.779 43.7148 194.779 cv
59.583 194.779 72.4922 207.689 72.4922 223.556 cv
72.4922 239.424 59.583 252.334 43.7148 252.334 cv
cp
.721569 .721569 .721569 rgb
f
243.204 185.618 mo
242.729 185.618 242.253 185.59 241.784 185.535 cv
239.729 185.273 238.625 184.935 237.735 184.659 cv
236.805 184.363 236.129 184.156 234.557 184.128 cv
234.273 182.832 li
234.273 184.122 li
232.474 184.122 230.818 184.57 229.356 184.963 cv
228.136 185.294 226.984 185.604 225.929 185.604 cv
215.198 185.604 201.137 169.66 199.054 155.129 cv
197.571 144.798 199.337 136.178 204.019 130.854 cv
207.737 126.63 213.052 124.493 219.939 124.493 cv
220.091 124.493 220.245 124.494 220.398 124.496 cv
223.694 124.544 225.847 125.15 227.929 125.737 cv
229.806 126.269 231.59 126.775 234.154 126.775 cv
234.284 126.775 234.416 126.774 234.55 126.771 cv
237.411 126.716 239.501 125.999 241.521 125.309 cv
243.589 124.602 245.705 123.879 248.519 123.879 cv
249.929 123.879 251.514 124.06 253.355 124.516 cv
265.77 127.585 270.011 138.509 270.011 148.798 cv
270.011 150.777 269.852 152.736 269.569 154.605 cv
267.107 170.625 254.135 185.618 243.204 185.618 cv
.652349 .652349 .652349 rgb
f
232.936 123.571 mo
232.404 123.571 231.929 123.247 231.735 122.744 cv
231.523 122.192 226.529 109 231.687 99.7584 cv
234.06 95.5098 238.163 92.8136 243.887 91.7447 cv
254.356 89.7794 256.852 88.255 257.432 87.6964 cv
257.678 87.4608 258 87.3334 258.331 87.3334 cv
258.427 87.3334 258.523 87.3439 258.618 87.3654 cv
259.039 87.462 259.384 87.7726 259.535 88.1793 cv
261.128 92.4894 264.225 103.455 258.618 112.109 cv
254.245 118.861 245.632 122.716 233.019 123.565 cv
232.936 123.571 li
f
265.646 153.522 mo
267.328 142.495 264.459 129.565 251.363 126.33 cv
249.729 125.923 248.356 125.757 247.129 125.757 cv
244.756 125.757 242.956 126.378 240.977 127.054 cv
238.874 127.771 236.487 128.592 233.226 128.654 cv
230.088 128.702 227.915 128.109 225.847 127.523 cv
223.84 126.958 221.943 126.42 218.984 126.378 cv
212.702 126.24 207.854 128.137 204.578 131.861 cv
200.398 136.612 198.854 144.502 200.227 154.081 cv
202.116 167.287 215.074 182.342 224.55 182.342 cv
225.26 182.342 226.205 182.087 227.302 181.791 cv
228.839 181.37 230.75 180.853 232.895 180.853 cv
233.219 180.866 li
235.163 180.901 236.115 181.197 237.122 181.508 cv
237.949 181.763 238.895 182.06 240.722 182.287 cv
249.584 183.404 263.101 170.081 265.646 153.522 cv
cp
268.632 148.108 mo
268.632 150.088 268.473 152.046 268.19 153.916 cv
265.728 169.936 252.756 184.928 241.825 184.928 cv
241.35 184.928 240.873 184.901 240.404 184.846 cv
238.35 184.584 237.246 184.246 236.356 183.97 cv
235.426 183.673 234.75 183.466 233.177 183.439 cv
232.895 182.142 li
232.895 183.432 li
231.095 183.432 229.439 183.88 227.978 184.273 cv
226.757 184.604 225.604 184.915 224.55 184.915 cv
213.819 184.915 199.758 168.97 197.675 154.44 cv
196.192 144.109 197.957 135.488 202.64 130.164 cv
206.44 125.847 211.909 123.709 219.019 123.806 cv
222.315 123.854 224.467 124.461 226.55 125.047 cv
228.522 125.606 230.391 126.137 233.17 126.082 cv
236.032 126.026 238.122 125.309 240.143 124.62 cv
243.246 123.558 246.46 122.461 251.977 123.827 cv
264.39 126.896 268.632 137.819 268.632 148.108 cv
cp
0 0 0 rgb
f
255.073 110.02 mo
259.494 103.199 257.735 94.5377 256.267 89.9171 cv
253.853 91.1583 249.474 92.3653 242.983 93.586 cv
238.046 94.503 234.543 96.7721 232.563 100.317 cv
228.701 107.22 231.467 117.22 232.446 120.234 cv
243.667 119.317 251.28 115.882 255.073 110.02 cv
cp
258.156 87.4894 mo
259.749 91.7999 262.846 102.765 257.238 111.42 cv
252.866 118.171 244.253 122.026 231.64 122.875 cv
231.557 122.882 li
231.025 122.882 230.55 122.558 230.356 122.054 cv
230.143 121.503 225.149 108.31 230.309 99.0685 cv
232.681 94.8204 236.784 92.1241 242.508 91.0548 cv
252.977 89.0895 255.473 87.5655 256.053 87.0069 cv
256.37 86.7032 256.811 86.5792 257.238 86.6759 cv
257.659 86.7726 258.004 87.0826 258.156 87.4894 cv
cp
f
213.13 138.467 mo
214.791 135.875 215.247 133.42 214.964 132.13 cv
214.867 131.695 214.702 131.392 214.46 131.24 cv
214.315 131.15 214.13 131.102 213.909 131.102 cv
212.667 131.102 210.364 132.53 208.461 135.495 cv
206.233 139.005 206.185 142.129 207.137 142.736 cv
207.371 142.888 207.716 142.916 208.15 142.819 cv
209.439 142.536 211.475 141.081 213.122 138.474 cv
213.13 138.467 li
cp
217.481 131.578 mo
217.971 133.813 217.136 136.985 215.295 139.854 cv
213.475 142.736 210.95 144.833 208.709 145.337 cv
208.357 145.412 208.02 145.454 207.688 145.454 cv
206.971 145.454 206.309 145.267 205.75 144.909 cv
203.191 143.275 203.419 138.633 206.288 134.116 cv
209.178 129.612 213.281 127.44 215.847 129.068 cv
216.674 129.599 217.239 130.468 217.481 131.578 cv
cp
f
215.295 139.854 mo
217.136 136.985 217.971 133.813 217.481 131.578 cv
217.239 130.468 216.674 129.599 215.847 129.068 cv
213.281 127.44 209.178 129.612 206.288 134.116 cv
203.419 138.633 203.191 143.275 205.75 144.909 cv
206.309 145.267 206.971 145.454 207.688 145.454 cv
208.02 145.454 208.357 145.412 208.709 145.337 cv
210.95 144.833 213.475 142.736 215.295 139.854 cv
cp
251.363 126.33 mo
264.459 129.565 267.328 142.495 265.646 153.522 cv
263.101 170.081 249.584 183.404 240.722 182.287 cv
238.895 182.06 237.949 181.763 237.122 181.508 cv
236.115 181.197 235.163 180.901 233.219 180.866 cv
232.895 180.853 li
230.75 180.853 228.839 181.37 227.302 181.791 cv
226.205 182.087 225.26 182.342 224.55 182.342 cv
215.074 182.342 202.116 167.287 200.227 154.081 cv
198.854 144.502 200.398 136.612 204.578 131.861 cv
207.854 128.137 212.702 126.24 218.984 126.378 cv
221.943 126.42 223.84 126.958 225.847 127.523 cv
227.915 128.109 230.088 128.702 233.226 128.654 cv
236.487 128.592 238.874 127.771 240.977 127.054 cv
242.956 126.378 244.756 125.757 247.129 125.757 cv
248.356 125.757 249.729 125.923 251.363 126.33 cv
cp
.494118 .780392 .27451 rgb
f
256.267 89.9171 mo
257.735 94.5377 259.494 103.199 255.073 110.02 cv
251.28 115.882 243.667 119.317 232.446 120.234 cv
231.467 117.22 228.701 107.22 232.563 100.317 cv
234.543 96.7721 238.046 94.503 242.983 93.586 cv
249.474 92.3653 253.853 91.1583 256.267 89.9171 cv
cp
1 1 1 rgb
f
214.964 132.13 mo
215.247 133.42 214.791 135.875 213.13 138.467 cv
213.122 138.474 li
211.475 141.081 209.439 142.536 208.15 142.819 cv
207.716 142.916 207.371 142.888 207.137 142.736 cv
206.185 142.129 206.233 139.005 208.461 135.495 cv
210.364 132.53 212.667 131.102 213.909 131.102 cv
214.13 131.102 214.315 131.15 214.46 131.24 cv
214.702 131.392 214.867 131.695 214.964 132.13 cv
cp
f
118.666 55.8941 mo
118.666 55.9298 li
118.648 56.2989 118.486 56.6588 118.207 56.9015 cv
108.148 65.8541 li
107.617 66.3307 106.799 66.3038 106.295 65.7999 cv
104.063 63.5685 li
103.893 63.3888 103.604 63.3888 103.425 63.5685 cv
90.3604 76.6329 li
89.8389 77.1544 88.9756 77.1544 88.4531 76.6329 cv
87.9229 76.1017 87.9229 75.2472 88.4531 74.7252 cv
101.518 61.6524 li
101.697 61.4811 101.697 61.1935 101.518 61.0226 cv
99.2861 58.7911 li
98.7822 58.2784 98.7549 57.4684 99.2324 56.9376 cv
108.185 46.8697 li
108.428 46.5997 108.787 46.4288 109.156 46.42 cv
109.192 46.42 li
109.552 46.42 109.894 46.5636 110.146 46.8155 cv
118.271 54.94 li
118.522 55.192 118.666 55.5431 118.666 55.8941 cv
cp
.494118 .780392 .27451 rgb
f
117.991 55.3302 mo
117.991 55.294 li
117.991 54.9435 117.848 54.5924 117.596 54.3404 cv
109.471 46.2159 li
109.219 45.964 108.877 45.8199 108.518 45.8199 cv
108.481 45.8199 li
108.112 45.8292 107.753 46.0001 107.51 46.2696 cv
98.5576 56.338 li
98.0801 56.8688 98.1074 57.6783 98.6113 58.1915 cv
100.843 60.4225 li
101.022 60.5934 101.022 60.8815 100.843 61.0523 cv
87.7783 74.1256 li
87.248 74.6476 87.248 75.5021 87.7783 76.0328 cv
88.3008 76.5548 89.1641 76.5548 89.6855 76.0328 cv
102.75 62.9689 li
102.93 62.7887 103.218 62.7887 103.389 62.9689 cv
105.62 65.2003 li
106.124 65.7042 106.942 65.7311 107.474 65.254 cv
117.532 56.3019 li
117.812 56.0587 117.974 55.6988 117.991 55.3302 cv
cp
118.226 53.7018 mo
118.666 54.1334 118.909 54.7364 118.892 55.357 cv
118.873 55.9781 118.595 56.5626 118.136 56.9767 cv
108.076 65.92 li
107.186 66.7115 105.827 66.6759 104.99 65.839 cv
103.074 63.9225 li
90.3252 76.6715 li
89.8838 77.1036 89.3086 77.3287 88.7324 77.3287 cv
88.1563 77.3287 87.5811 77.1036 87.1396 76.6715 cv
86.2666 75.7901 86.2666 74.3683 87.1396 73.4869 cv
99.8887 60.7374 li
97.9727 58.8209 li
97.1357 57.9845 97.0908 56.6256 97.8828 55.735 cv
106.835 45.6759 li
107.249 45.2174 107.834 44.9381 108.454 44.9205 cv
109.075 44.9112 109.669 45.1451 110.11 45.5773 cv
118.226 53.7018 li
cp
0 0 0 rgb
f
115.806 55.5011 mo
115.806 55.3751 115.77 55.2672 115.688 55.1773 cv
115.599 55.0782 115.473 55.024 115.355 55.024 cv
115.247 55.024 115.14 55.0602 115.05 55.1412 cv
106.664 62.6808 li
106.484 62.8517 106.466 63.1398 106.628 63.3199 cv
106.816 63.5089 107.087 63.5177 107.267 63.3556 cv
115.652 55.8072 li
115.742 55.7262 115.796 55.6183 115.806 55.5011 cv
cp
116.354 54.5743 mo
116.597 54.8351 116.723 55.1861 116.705 55.546 cv
116.678 55.9059 116.525 56.2389 116.255 56.482 cv
107.869 64.0216 li
107.608 64.2555 107.285 64.3727 106.961 64.3727 cv
106.619 64.3727 106.277 64.2374 106.007 63.9767 cv
105.467 63.3736 105.513 62.5099 106.062 62.0152 cv
114.446 54.4752 li
115.005 53.9718 115.851 54.0167 116.354 54.5743 cv
cp
f
113.466 53.1437 mo
113.466 53.027 113.421 52.9098 113.34 52.8199 cv
113.25 52.7301 113.133 52.6852 113.007 52.6852 cv
112.899 52.6852 112.791 52.7301 112.701 52.8111 cv
104.595 60.6388 li
104.505 60.7193 104.46 60.8365 104.46 60.9532 cv
104.45 61.0704 104.495 61.1876 104.586 61.2774 cv
104.757 61.4483 105.044 61.4571 105.216 61.2862 cv
113.322 53.4586 li
113.412 53.3775 113.466 53.2608 113.466 53.1437 cv
cp
113.97 52.1813 mo
114.239 52.4601 114.365 52.8019 114.365 53.1617 cv
114.356 53.5216 114.213 53.8546 113.952 54.1065 cv
105.845 61.9342 li
105.584 62.1861 105.242 62.3121 104.909 62.3121 cv
104.559 62.3121 104.217 62.1769 103.956 61.9161 cv
103.416 61.3673 103.434 60.5035 103.965 59.9908 cv
112.08 52.1632 li
112.603 51.6593 113.448 51.6593 113.97 52.1813 cv
cp
f
111.001 51.1105 mo
111.172 50.9303 111.162 50.6515 110.991 50.4806 cv
110.901 50.3907 110.785 50.3458 110.668 50.3458 cv
110.551 50.3458 110.434 50.3907 110.353 50.4806 cv
102.525 58.587 li
102.354 58.7672 102.354 59.046 102.525 59.2169 cv
102.22 59.5499 li
102.534 59.2262 li
102.624 59.3067 102.732 59.3522 102.858 59.3522 cv
102.975 59.3522 103.092 59.298 103.173 59.2169 cv
111.001 51.1105 li
cp
111.612 49.8238 mo
112.144 50.3546 112.152 51.2096 111.648 51.7311 cv
103.82 59.838 li
103.569 60.0987 103.236 60.2428 102.876 60.2516 cv
102.849 60.2516 li
102.498 60.2516 102.165 60.1168 101.913 59.8736 cv
101.896 59.8556 li
101.373 59.3429 101.364 58.4884 101.877 57.9664 cv
109.705 49.86 li
110.218 49.3199 111.072 49.3111 111.612 49.8238 cv
cp
f
108.67 48.7623 mo
108.832 48.5733 108.823 48.2853 108.635 48.1231 cv
108.554 48.0421 108.445 48.0065 108.338 48.0065 cv
108.311 48.0065 li
108.193 48.0152 108.076 48.0694 108.005 48.1593 cv
100.456 56.545 li
100.294 56.7247 100.303 56.9947 100.474 57.1656 cv
100.186 57.5167 li
100.492 57.1744 li
100.672 57.3453 100.96 57.3277 101.122 57.1476 cv
108.67 48.7623 li
cp
109.237 47.4576 mo
109.786 47.9523 109.831 48.8072 109.336 49.3561 cv
101.797 57.7506 li
101.526 58.0475 101.157 58.1915 100.789 58.1915 cv
100.465 58.1915 100.141 58.0831 99.8887 57.8492 cv
99.835 57.7955 li
99.3311 57.2916 99.3037 56.4728 99.79 55.942 cv
107.33 47.5563 li
107.572 47.2867 107.905 47.1246 108.266 47.1065 cv
108.635 47.0885 108.967 47.2145 109.237 47.4576 cv
cp
f
90.2803 73.8468 mo
90.3701 73.7565 90.3701 73.6129 90.2803 73.5226 cv
90.127 73.4596 li
89.9648 73.5226 li
88.5703 74.9171 li
88.4893 75.0074 88.4893 75.151 88.5703 75.2413 cv
88.6875 75.3492 88.7773 75.3492 88.8945 75.2413 cv
90.2803 73.8468 li
cp
90.9189 72.8927 mo
91.3594 73.3248 91.3594 74.0445 90.9189 74.4762 cv
89.5244 75.8712 li
89.3174 76.087 89.0293 76.2037 88.7324 76.2037 cv
88.4355 76.2037 88.1475 76.087 87.9404 75.8712 cv
87.5 75.4303 87.5 74.7193 87.9316 74.2784 cv
89.3262 72.8927 li
89.7578 72.461 90.4961 72.461 90.9189 72.8927 cv
cp
f
352.147 333.755 mo
352.147 339.657 li
352.147 339.901 351.688 339.901 351.688 339.657 cv
351.688 334.853 li
351.688 334.61 351.49 334.403 351.238 334.403 cv
350.078 334.403 li
349.835 334.403 349.628 334.61 349.628 334.853 cv
349.628 339.657 li
349.628 339.901 349.179 339.901 349.179 339.657 cv
349.179 334.853 li
349.179 334.61 348.98 334.403 348.729 334.403 cv
347.577 334.403 li
347.325 334.403 347.127 334.61 347.127 334.853 cv
347.127 339.657 li
347.127 339.901 346.668 339.901 346.668 339.657 cv
346.668 333.755 li
346.668 332.513 347.766 331.983 348.684 331.758 cv
348.891 331.704 349.034 331.506 349.017 331.29 cv
348.144 317.551 li
348.081 317.083 348.054 316.66 348.054 316.255 cv
348.054 313.709 348.854 312.081 349.403 312.081 cv
349.952 312.081 350.753 313.709 350.753 316.255 cv
350.753 316.66 350.726 317.074 350.672 317.578 cv
349.79 331.29 li
349.781 331.506 349.925 331.704 350.132 331.758 cv
351.05 331.983 352.147 332.513 352.147 333.755 cv
cp
.494118 .780392 .27451 rgb
f
369.071 336.394 mo
369.125 336.556 369.08 336.727 368.964 336.853 cv
367.659 338.185 366.093 338.554 365.112 338.644 cv
365.193 338.491 li
365.302 338.23 365.229 337.978 365.059 337.744 cv
365.842 337.663 367.056 337.375 368.1 336.439 cv
367.946 336.17 367.623 335.765 367.056 335.684 cv
366.921 335.666 366.795 335.576 366.732 335.45 cv
366.66 335.324 366.66 335.18 366.723 335.045 cv
366.723 335.036 366.858 334.712 366.678 334.343 cv
366.489 333.929 365.994 333.587 365.247 333.335 cv
364.905 333.974 364.123 335.548 364.06 336.952 cv
363.79 336.799 363.574 336.709 363.574 336.709 cv
363.421 336.7 363.313 336.718 363.241 336.763 cv
363.232 336.763 li
363.169 336.736 li
363.34 334.73 364.591 332.66 364.653 332.562 cv
364.762 332.391 364.969 332.31 365.157 332.363 cv
366.391 332.706 367.173 333.255 367.506 333.983 cv
367.668 334.334 367.686 334.667 367.668 334.919 cv
368.693 335.315 369.054 336.34 369.071 336.394 cv
cp
0 0 0 rgb
f
365.086 338.671 mo
365.499 339.418 365.706 340.254 365.706 341.082 cv
365.706 342.495 365.104 343.907 363.943 344.897 cv
359.489 348.675 353.947 350.772 348.314 350.808 cv
348.171 350.808 li
342.106 350.808 336.699 348.379 332.947 343.961 cv
332.083 342.935 331.67 341.64 331.777 340.308 cv
331.832 339.597 332.038 338.922 332.371 338.32 cv
332.605 338.338 332.804 338.347 332.956 338.347 cv
333.172 338.347 333.307 338.329 333.325 338.329 cv
333.46 338.293 li
333.001 338.896 332.731 339.615 332.668 340.38 cv
332.578 341.478 332.92 342.54 333.631 343.376 cv
337.212 347.587 342.367 349.908 348.171 349.908 cv
348.314 349.908 li
353.722 349.872 359.066 347.857 363.358 344.213 cv
365.041 342.782 365.283 340.272 363.925 338.554 cv
364.159 338.662 li
364.186 338.662 364.312 338.671 364.51 338.671 cv
364.591 338.788 364.627 338.859 364.627 338.859 cv
364.627 338.859 364.888 338.914 365.086 338.671 cv
cp
f
365.059 337.744 mo
365.229 337.978 365.302 338.23 365.193 338.491 cv
365.112 338.644 li
365.104 338.644 li
365.086 338.644 li
365.067 338.644 li
364.915 338.365 364.734 338.095 364.519 337.843 cv
364.456 337.771 li
364.6 337.771 364.807 337.771 365.059 337.744 cv
cp
f
365.104 338.644 mo
365.086 338.671 li
365.076 338.644 li
365.104 338.644 li
cp
f
365.076 338.644 mo
365.086 338.671 li
364.888 338.914 364.627 338.859 364.627 338.859 cv
364.627 338.859 364.591 338.788 364.51 338.671 cv
364.537 338.671 li
364.681 338.671 364.86 338.662 365.067 338.644 cv
365.076 338.644 li
cp
f
365.067 338.644 mo
364.86 338.662 364.681 338.671 364.537 338.671 cv
364.51 338.671 li
364.312 338.356 363.826 337.681 363.16 337.258 cv
363.143 337.105 363.151 336.961 363.169 336.808 cv
363.232 336.763 li
363.241 336.763 li
363.529 336.934 363.808 337.132 364.06 337.366 cv
364.06 337.42 li
364.401 337.771 li
364.456 337.771 li
364.519 337.843 li
364.734 338.095 364.915 338.365 365.067 338.644 cv
cp
f
365.059 337.744 mo
364.807 337.771 364.6 337.771 364.456 337.771 cv
364.33 337.627 364.195 337.492 364.06 337.366 cv
364.051 337.231 364.051 337.096 364.06 336.952 cv
364.393 337.132 364.815 337.42 365.059 337.744 cv
cp
f
364.51 338.671 mo
364.312 338.671 364.186 338.662 364.159 338.662 cv
363.925 338.554 li
363.826 338.428 li
363.655 338.23 363.475 338.041 363.269 337.879 cv
363.178 337.681 li
363.16 337.546 363.151 337.402 363.16 337.258 cv
363.826 337.681 364.312 338.356 364.51 338.671 cv
cp
f
364.456 337.771 mo
364.401 337.771 li
364.06 337.42 li
364.06 337.366 li
364.195 337.492 364.33 337.627 364.456 337.771 cv
cp
f
364.06 336.952 mo
364.051 337.096 364.051 337.231 364.06 337.366 cv
363.808 337.132 363.529 336.934 363.241 336.763 cv
363.313 336.718 363.421 336.7 363.574 336.709 cv
363.574 336.709 363.79 336.799 364.06 336.952 cv
cp
f
363.826 338.428 mo
363.925 338.554 li
363.889 338.526 li
363.304 337.933 li
363.269 337.879 li
363.475 338.041 363.655 338.23 363.826 338.428 cv
cp
f
363.169 336.736 mo
363.232 336.763 li
363.169 336.808 li
363.169 336.736 li
cp
f
362.026 338.922 mo
362.063 338.824 362.08 338.725 362.08 338.626 cv
362.08 338.212 361.783 337.807 361.315 337.636 cv
361.181 337.582 361.027 337.555 360.884 337.555 cv
360.722 337.555 360.56 337.591 360.416 337.654 cv
360.191 337.762 360.021 337.942 359.939 338.158 cv
359.858 338.374 359.876 338.617 359.976 338.841 cv
360.101 339.121 360.353 339.337 360.649 339.444 cv
360.956 339.561 361.289 339.552 361.559 339.426 cv
361.783 339.318 361.954 339.138 362.026 338.922 cv
cp
363.178 337.681 mo
363.269 337.879 li
363.034 337.69 362.782 337.528 362.513 337.402 cv
362.944 337.906 363.106 338.599 362.872 339.237 cv
362.71 339.678 362.377 340.038 361.937 340.236 cv
361.45 340.461 360.866 340.488 360.344 340.29 cv
359.822 340.101 359.391 339.714 359.165 339.219 cv
358.958 338.778 358.932 338.293 359.094 337.843 cv
359.192 337.564 359.363 337.321 359.588 337.132 cv
359.03 337.285 358.509 337.555 358.041 337.951 cv
355.261 340.317 351.697 341.676 348.261 341.694 cv
345.805 341.694 342.448 341.064 339.894 338.059 cv
339.183 337.222 338.192 336.718 337.095 336.628 cv
336.987 336.619 336.87 336.61 336.753 336.61 cv
335.854 336.61 334.989 336.907 334.279 337.456 cv
334.306 337.348 li
334.351 337.024 334.351 336.691 334.314 336.359 cv
335.179 335.863 336.159 335.648 337.176 335.729 cv
338.508 335.837 339.713 336.457 340.577 337.483 cv
342.907 340.218 345.993 340.794 348.171 340.794 cv
351.481 340.776 354.838 339.489 357.456 337.267 cv
359.103 335.873 361.388 335.719 363.169 336.736 cv
363.169 336.808 li
363.007 336.961 363.115 337.231 363.115 337.231 cv
363.16 337.258 li
363.151 337.402 363.16 337.546 363.178 337.681 cv
cp
f
363.169 336.808 mo
363.151 336.961 363.143 337.105 363.16 337.258 cv
363.115 337.231 li
363.115 337.231 363.007 336.961 363.169 336.808 cv
cp
f
351.473 339.058 mo
351.473 333.155 li
351.473 331.914 350.375 331.383 349.457 331.158 cv
349.25 331.104 349.106 330.906 349.115 330.69 cv
349.997 316.978 li
350.051 316.474 350.078 316.061 350.078 315.655 cv
350.078 313.109 349.277 311.481 348.729 311.481 cv
348.18 311.481 347.379 313.109 347.379 315.655 cv
347.379 316.061 347.406 316.484 347.469 316.951 cv
348.342 330.69 li
348.359 330.906 348.216 331.104 348.009 331.158 cv
347.091 331.383 345.993 331.914 345.993 333.155 cv
345.993 339.058 li
345.993 339.3 346.452 339.3 346.452 339.058 cv
346.452 334.253 li
346.452 334.01 346.65 333.803 346.902 333.803 cv
348.054 333.803 li
348.306 333.803 348.504 334.01 348.504 334.253 cv
348.504 339.058 li
348.504 339.3 348.953 339.3 348.953 339.058 cv
348.953 334.253 li
348.953 334.01 349.16 333.803 349.403 333.803 cv
350.563 333.803 li
350.815 333.803 351.014 334.01 351.014 334.253 cv
351.014 339.058 li
351.014 339.3 351.473 339.3 351.473 339.058 cv
cp
352.372 333.155 mo
352.372 339.058 li
352.372 339.678 351.859 340.182 351.238 340.182 cv
350.618 340.182 350.114 339.678 350.114 339.058 cv
350.114 334.703 li
349.854 334.703 li
349.854 339.058 li
349.854 339.678 349.35 340.182 348.729 340.182 cv
348.107 340.182 347.604 339.678 347.604 339.058 cv
347.604 334.703 li
347.352 334.703 li
347.352 339.058 li
347.352 339.678 346.839 340.182 346.218 340.182 cv
345.598 340.182 345.094 339.678 345.094 339.058 cv
345.094 333.155 li
345.094 331.833 345.912 330.861 347.424 330.384 cv
346.569 317.032 li
346.516 316.555 346.479 316.096 346.479 315.655 cv
346.479 313.136 347.253 310.581 348.729 310.581 cv
350.204 310.581 350.978 313.136 350.978 315.655 cv
350.978 316.096 350.951 316.547 350.888 317.059 cv
350.042 330.384 li
351.545 330.861 352.372 331.833 352.372 333.155 cv
cp
f
334.314 336.359 mo
334.351 336.691 334.351 337.024 334.306 337.348 cv
334.279 337.456 li
334.107 337.591 li
333.865 337.798 333.649 338.032 333.46 338.284 cv
333.46 338.293 li
333.325 338.329 li
333.307 338.329 333.172 338.347 332.956 338.347 cv
332.804 338.347 332.605 338.338 332.371 338.32 cv
332.461 338.176 li
332.578 338.329 332.768 338.266 332.768 338.266 cv
332.768 338.266 333.361 337.195 334.279 336.637 cv
334.279 336.637 334.279 336.52 334.188 336.43 cv
334.314 336.359 li
cp
f
334.107 337.591 mo
334.279 337.456 li
334.18 337.6 li
333.604 338.194 li
333.46 338.284 li
333.649 338.032 333.865 337.798 334.107 337.591 cv
cp
f
334.314 336.359 mo
334.188 336.43 li
334.135 336.359 334.027 336.304 333.847 336.304 cv
333.847 336.304 333.658 336.412 333.424 336.583 cv
333.353 335.18 332.587 333.641 332.245 333.003 cv
331.48 333.263 330.985 333.614 330.806 334.019 cv
330.635 334.397 330.77 334.712 330.77 334.721 cv
330.833 334.847 330.833 335 330.761 335.126 cv
330.698 335.252 330.572 335.333 330.428 335.359 cv
329.87 335.441 329.546 335.837 329.394 336.107 cv
330.482 337.078 331.76 337.348 332.524 337.42 cv
332.416 337.582 332.354 337.744 332.362 337.897 cv
332.371 338.032 332.407 338.122 332.461 338.176 cv
332.371 338.32 li
331.391 338.221 329.825 337.843 328.529 336.52 cv
328.403 336.403 328.367 336.223 328.422 336.062 cv
328.439 336.016 328.8 334.982 329.825 334.586 cv
329.798 334.334 329.825 334.001 329.987 333.65 cv
330.311 332.922 331.103 332.381 332.335 332.031 cv
332.524 331.977 332.731 332.058 332.839 332.229 cv
332.902 332.328 334.144 334.37 334.314 336.359 cv
cp
f
334.188 336.43 mo
334.279 336.52 334.279 336.637 334.279 336.637 cv
333.361 337.195 332.768 338.266 332.768 338.266 cv
332.768 338.266 332.578 338.329 332.461 338.176 cv
332.605 337.915 332.785 337.672 333.001 337.438 cv
333.082 337.438 li
333.424 337.087 li
333.424 336.997 li
333.523 336.907 li
333.73 336.727 333.955 336.565 334.188 336.43 cv
cp
f
333.847 336.304 mo
334.027 336.304 334.135 336.359 334.188 336.43 cv
333.955 336.565 333.73 336.727 333.523 336.907 cv
333.424 336.997 li
333.442 336.862 333.433 336.727 333.424 336.583 cv
333.658 336.412 333.847 336.304 333.847 336.304 cv
cp
f
333.424 336.583 mo
333.433 336.727 333.442 336.862 333.424 336.997 cv
333.262 337.132 333.118 337.285 333.001 337.438 cv
332.884 337.438 332.723 337.429 332.524 337.42 cv
332.74 337.105 333.127 336.79 333.424 336.583 cv
cp
f
333.424 336.997 mo
333.424 337.087 li
333.082 337.438 li
333.001 337.438 li
333.118 337.285 333.262 337.132 333.424 336.997 cv
cp
f
332.524 337.42 mo
332.723 337.429 332.884 337.438 333.001 337.438 cv
332.785 337.672 332.605 337.915 332.461 338.176 cv
332.407 338.122 332.371 338.032 332.362 337.897 cv
332.354 337.744 332.416 337.582 332.524 337.42 cv
cp
f
107.891 118.133 mo
107.891 121.903 li
106.721 121.903 li
89.2031 121.903 li
88.0332 121.903 li
88.0332 118.133 li
99.8379 118.133 li
101.745 118.133 li
107.891 118.133 li
cp
.494118 .780392 .27451 rgb
f
99.9277 127.76 mo
102.061 128.714 103.284 130.828 102.852 132.727 cv
102.591 132.853 102.313 132.924 102.016 132.961 cv
101.386 133.032 100.152 132.924 99.0459 131.458 cv
97.6426 129.587 96.2842 128.471 94.9971 128.12 cv
96.2656 127.149 98.2002 126.977 99.9277 127.76 cv
cp
f
100.597 134.81 mo
99.5264 134.755 98.0234 134.315 96.7188 132.587 cv
95.3877 130.815 94.1191 129.825 93.2012 129.825 cv
93.084 129.834 li
92.8955 129.879 li
92.2832 131.832 93.498 134.099 95.7471 135.107 cv
97.457 135.88 99.3281 135.727 100.597 134.81 cv
cp
102.145 134 mo
102.253 134.153 102.253 134.359 102.145 134.513 cv
101.227 135.799 99.6699 136.501 97.9971 136.501 cv
97.1328 136.501 96.2334 136.312 95.3789 135.925 cv
93.4619 135.07 92.1846 133.406 91.8965 131.66 cv
91.7705 130.896 91.834 130.113 92.1123 129.375 cv
92.1572 129.267 92.2383 129.177 92.3467 129.132 cv
92.5713 129.024 92.7695 128.962 92.9941 128.943 cv
94.2715 128.799 95.8105 129.87 97.4385 132.047 cv
98.8066 133.865 100.399 133.982 101.218 133.892 cv
101.371 133.883 101.523 133.847 101.668 133.811 cv
101.767 133.802 li
101.92 133.802 102.063 133.874 102.145 134 cv
cp
f
108.115 117.084 mo
108.115 121.753 li
108.115 122.005 107.917 122.203 107.665 122.203 cv
106.441 122.203 li
106.496 121.816 li
106.514 121.69 106.478 121.555 106.388 121.456 cv
106.307 121.366 106.181 121.303 106.046 121.303 cv
107.216 121.303 li
107.216 117.533 li
101.07 117.533 li
101.322 117.533 101.521 117.335 101.521 117.084 cv
101.521 116.633 li
107.665 116.633 li
107.917 116.633 108.115 116.84 108.115 117.084 cv
cp
0 0 0 rgb
f
106.99 103.21 mo
107.171 103.389 107.171 103.669 106.99 103.848 cv
101.521 109.318 li
101.521 116.633 li
100.621 116.633 li
100.621 109.139 li
100.621 109.013 100.666 108.905 100.756 108.815 cv
106.037 103.525 li
105.326 102.814 li
99.6133 108.527 li
99.6133 116.633 li
98.7129 116.633 li
98.7129 108.374 li
98.7402 108.221 li
98.8486 108.023 li
105.012 101.86 li
105.092 101.77 105.209 101.725 105.326 101.725 cv
105.443 101.725 105.561 101.77 105.642 101.86 cv
106.99 103.21 li
cp
f
106.388 121.456 mo
106.478 121.555 106.514 121.69 106.496 121.816 cv
106.441 122.203 li
105.533 122.203 li
89.0498 122.203 li
88.1416 122.203 li
88.0869 121.816 li
88.0693 121.69 88.1055 121.555 88.1953 121.456 cv
88.2764 121.366 88.4023 121.303 88.5283 121.303 cv
106.046 121.303 li
106.181 121.303 106.307 121.366 106.388 121.456 cv
cp
f
106.441 122.203 mo
103.158 146.567 li
103.131 146.783 102.942 146.954 102.717 146.954 cv
91.8662 146.954 li
91.6416 146.954 91.4521 146.783 91.416 146.567 cv
88.1416 122.203 li
89.0498 122.203 li
90.3184 131.596 li
92.2617 146.055 li
102.321 146.055 li
104.201 132.1 li
105.533 122.203 li
106.441 122.203 li
cp
f
102.177 132.127 mo
102.609 130.229 101.386 128.114 99.2529 127.16 cv
97.5254 126.378 95.5908 126.548 94.3223 127.52 cv
95.6094 127.871 96.9678 128.987 98.3711 130.858 cv
99.4775 132.325 100.711 132.433 101.341 132.361 cv
101.638 132.325 101.916 132.253 102.177 132.127 cv
cp
99.6221 126.341 mo
102.016 127.412 103.428 129.743 103.113 131.956 cv
103.086 132.163 103.041 132.361 102.987 132.559 cv
102.96 132.676 102.879 132.775 102.78 132.829 cv
102.42 133.026 102.042 133.162 101.638 133.225 cv
101.439 133.252 li
101.322 133.27 101.188 133.278 101.044 133.278 cv
100.162 133.278 98.8301 132.963 97.6514 131.398 cv
96.0684 129.293 94.6104 128.258 93.3594 128.294 cv
93.1885 128.321 93.0273 128.204 92.9463 128.051 cv
92.8652 127.889 92.8828 127.7 92.9912 127.565 cv
94.4219 125.766 97.2109 125.253 99.6221 126.333 cv
99.6221 126.341 li
cp
f
101.521 116.633 mo
101.521 117.084 li
101.521 117.335 101.322 117.533 101.07 117.533 cv
99.1631 117.533 li
98.9111 117.533 98.7129 117.335 98.7129 117.084 cv
98.7129 116.633 li
99.6133 116.633 li
100.621 116.633 li
101.521 116.633 li
cp
f
99.1631 117.533 mo
87.3584 117.533 li
87.3584 121.303 li
88.5283 121.303 li
88.4023 121.303 88.2764 121.366 88.1953 121.456 cv
88.1055 121.555 88.0693 121.69 88.0869 121.816 cv
88.1416 122.203 li
86.9092 122.203 li
86.6572 122.203 86.459 122.005 86.459 121.753 cv
86.459 117.084 li
86.459 116.84 86.6572 116.633 86.9092 116.633 cv
98.7129 116.633 li
98.7129 117.084 li
98.7129 117.335 98.9111 117.533 99.1631 117.533 cv
cp
f
64.4893 90.6398 mo
64.4893 90.694 64.3535 90.8287 64.0303 90.8829 cv
63.3008 91.0177 62.5361 91.1168 61.7178 91.1979 cv
61.6729 91.1979 li
59.2256 91.4137 57.0928 91.2965 55.2217 91.1886 cv
53.4854 91.09 51.9912 90.9996 50.6602 91.2066 cv
48.8154 91.4855 47.1064 91.3058 45.46 91.1349 cv
45.1172 91.09 44.7754 91.0538 44.4336 91.027 cv
43.1113 90.901 41.6895 90.8287 40.2588 91.1617 cv
38.1357 91.6656 36.2822 91.4049 34.9238 91.2066 cv
33.8711 91.0538 33.1152 90.9459 32.5576 91.2066 cv
31.7207 91.6207 29.3721 91.6476 26.6914 90.8917 cv
26.4756 90.838 26.2861 90.7838 26.1064 90.7477 cv
25.5391 90.6129 25.0986 90.5499 24.7656 90.5138 cv
25.3955 90.2442 26.6104 89.902 27.834 89.6681 cv
28.2207 89.6593 li
29.9482 89.65 37.083 89.6144 44.3887 89.5963 cv
49.7334 89.587 53.9082 89.5963 56.8594 89.6144 cv
57.3086 89.6144 57.7412 89.6232 58.1367 89.6232 cv
58.335 89.6232 58.5234 89.6232 58.7031 89.6324 cv
59.4414 89.6412 60.0625 89.6593 60.5664 89.6681 cv
60.5928 89.6681 li
60.6201 89.6681 li
63.751 89.7403 64.4795 90.4601 64.4893 90.6398 cv
cp
.494118 .780392 .27451 rgb
f
64.7139 89.9679 mo
64.7588 90.5528 64.2725 91.0387 63.5166 91.1739 cv
62.9229 91.2818 62.3115 91.3629 61.6641 91.4347 cv
61.6094 91.2189 61.5283 91.0206 61.4297 90.8316 cv
61.3574 90.6881 61.2051 90.5978 61.043 90.5978 cv
61.8613 90.5167 62.626 90.4181 63.3555 90.2828 cv
63.6787 90.2291 63.8145 90.0939 63.8145 90.0401 cv
63.8047 89.86 63.0762 89.1402 59.9453 89.0685 cv
60.0527 89.0504 60.1523 89.0055 60.2334 88.9244 cv
60.3232 88.8253 60.3594 88.6993 60.3496 88.5733 cv
60.3408 88.4386 60.3232 88.3038 60.2959 88.1778 cv
63.0313 88.2945 64.6328 88.9332 64.7139 89.9679 cv
cp
0 0 0 rgb
f
61.6641 91.4347 mo
61.7266 91.6686 61.7627 91.9117 61.7627 92.1637 cv
61.7627 93.423 61.0342 94.4127 60.0977 94.4127 cv
59.6484 94.4127 li
59.6934 94.3136 59.7295 94.215 59.7656 94.107 cv
59.8105 93.9718 59.792 93.819 59.7021 93.7018 cv
59.6211 93.5758 59.4863 93.5128 59.3428 93.5128 cv
60.0977 93.5128 li
60.458 93.5128 60.8633 92.9552 60.8633 92.1637 cv
60.8633 91.9386 60.8271 91.7135 60.7549 91.5157 cv
60.8633 91.5065 60.9707 91.4977 61.0791 91.4889 cv
61.2764 91.4708 61.4746 91.4527 61.6641 91.4347 cv
cp
f
61.6641 91.4347 mo
61.4746 91.4527 61.2764 91.4708 61.0791 91.4889 cv
60.9707 91.4977 60.8633 91.5065 60.7549 91.5157 cv
60.3408 91.5519 59.9365 91.5694 59.54 91.5875 cv
59.3154 91.5968 59.0908 91.6056 58.8652 91.6056 cv
57.2637 91.6417 55.8154 91.5607 54.4932 91.4889 cv
52.8105 91.3898 51.3613 91.3087 50.1201 91.4977 cv
48.1592 91.7945 46.3955 91.6056 44.6943 91.4259 cv
44.3525 91.3898 44.0107 91.3536 43.6777 91.3175 cv
42.4277 91.2008 41.0957 91.1378 39.791 91.4435 cv
37.4971 91.9835 35.5449 91.7047 34.123 91.4977 cv
33.2949 91.3717 32.584 91.2726 32.2783 91.4166 cv
31.7568 91.6686 30.9648 91.7945 30.0293 91.7945 cv
28.7783 91.7945 27.2666 91.5787 25.7734 91.1559 cv
25.665 91.1285 25.5664 91.1017 25.4678 91.0748 cv
25.2334 91.0206 li
24.9727 90.9576 24.748 90.9127 24.541 90.8858 cv
24.667 90.6158 24.8467 90.3912 25.0537 90.2291 cv
25.1611 90.1481 25.2969 90.1119 25.4316 90.1481 cv
25.6113 90.1842 25.8008 90.2379 26.0166 90.2921 cv
28.6973 91.048 31.0459 91.0206 31.8828 90.607 cv
32.4404 90.3458 33.1963 90.4537 34.249 90.607 cv
35.6074 90.8048 37.4609 91.0655 39.584 90.5621 cv
41.0146 90.2291 42.4365 90.3009 43.7588 90.4269 cv
44.1006 90.4537 44.4424 90.4899 44.7852 90.5348 cv
46.4316 90.7057 48.1406 90.8858 49.9854 90.607 cv
51.3164 90.4 52.8105 90.4899 54.5469 90.589 cv
56.418 90.6969 58.5508 90.8141 60.998 90.5978 cv
61.043 90.5978 li
61.2051 90.5978 61.3574 90.6881 61.4297 90.8316 cv
61.5283 91.0206 61.6094 91.2189 61.6641 91.4347 cv
cp
f
60.3496 88.5733 mo
60.3594 88.6993 60.3232 88.8253 60.2334 88.9244 cv
60.1523 89.0055 60.0527 89.0504 59.9453 89.0685 cv
59.918 89.0685 li
59.8643 89.0592 li
59.3691 89.0504 58.7578 89.0416 58.0283 89.0323 cv
57.8486 89.0235 57.6602 89.0235 57.4619 89.0235 cv
57.0664 89.0143 56.6338 89.0143 56.1846 89.0143 cv
53.2334 88.9962 49.0586 88.9874 43.7139 88.9962 cv
36.4082 89.0143 29.2734 89.0504 27.5459 89.0592 cv
27.1592 89.0685 li
27.0244 89.0685 26.9072 89.0143 26.8262 88.9156 cv
26.7363 88.8253 26.6914 88.6993 26.709 88.5733 cv
26.7178 88.4654 26.7363 88.3487 26.7451 88.2408 cv
26.8535 88.2135 26.9609 88.1954 27.0693 88.1778 cv
27.5459 88.1598 li
27.6631 88.1598 li
29.5703 88.1505 36.5703 88.1149 43.7139 88.0968 cv
48.9863 88.0875 53.1338 88.0968 56.0947 88.1149 cv
57.0479 88.1236 57.8672 88.1324 58.5771 88.1417 cv
59.0811 88.1505 59.5313 88.1598 59.9092 88.1686 cv
59.9717 88.1686 li
60.0801 88.1686 60.1885 88.1778 60.2959 88.1778 cv
60.3232 88.3038 60.3408 88.4386 60.3496 88.5733 cv
cp
f
60.2959 88.1778 mo
60.1885 88.1778 60.0801 88.1686 59.9717 88.1686 cv
59.9092 88.1686 li
59.5313 88.1598 59.0811 88.1505 58.5771 88.1417 cv
58.874 88.1417 59.1445 88.1505 59.3965 88.1505 cv
58.6318 82.7433 54.0342 78.7213 48.5098 78.7213 cv
38.5498 78.7213 li
33.0166 78.7213 28.4277 82.7521 27.6631 88.1598 cv
27.5459 88.1598 li
27.0693 88.1778 li
26.9609 88.1954 26.8535 88.2135 26.7451 88.2408 cv
27.4834 82.2755 32.5029 77.8219 38.5498 77.8219 cv
48.5098 77.8219 li
54.5381 77.8219 59.54 82.2486 60.2959 88.1778 cv
cp
f
59.918 89.0685 mo
59.8916 89.0685 li
59.3877 89.0592 58.7666 89.0416 58.0283 89.0323 cv
58.7578 89.0416 59.3691 89.0504 59.8643 89.0592 cv
59.918 89.0685 li
cp
f
59.7021 93.7018 mo
59.792 93.819 59.8105 93.9718 59.7656 94.107 cv
59.7295 94.215 59.6934 94.3136 59.6484 94.4127 cv
58.6943 94.4127 li
28.3643 94.4127 li
27.4111 94.4127 li
27.3662 94.3136 27.3301 94.215 27.2939 94.107 cv
27.249 93.9718 27.2666 93.819 27.3477 93.693 cv
27.4375 93.5758 27.5732 93.5128 27.7168 93.5128 cv
59.3428 93.5128 li
59.4863 93.5128 59.6211 93.5758 59.7021 93.7018 cv
cp
f
58.6943 94.4127 mo
59.6484 94.4127 li
57.9209 99.0553 53.4854 102.15 48.5098 102.15 cv
38.5498 102.15 li
33.5654 102.15 29.1387 99.0553 27.4111 94.4127 cv
28.3643 94.4127 li
30.0469 98.5245 34.0596 101.251 38.5498 101.251 cv
48.5098 101.251 li
52.999 101.251 57.0117 98.5245 58.6943 94.4127 cv
cp
f
58.8652 91.6056 mo
59.0908 91.6056 59.3154 91.5968 59.54 91.5875 cv
59.3066 91.5968 59.0908 91.6056 58.8652 91.6056 cv
cp
f
57.4619 89.0235 mo
57.0664 89.0235 56.6338 89.0143 56.1846 89.0143 cv
56.6338 89.0143 57.0664 89.0143 57.4619 89.0235 cv
cp
f
56.0947 88.1149 mo
53.1338 88.0968 48.9863 88.0875 43.7139 88.0968 cv
48.9951 88.0875 53.1338 88.0875 56.0947 88.1149 cv
cp
f
52.6758 80.152 mo
52.9902 80.152 53.2422 80.4039 53.2422 80.7189 cv
53.2422 81.0338 52.9902 81.2945 52.6758 81.2945 cv
52.0811 81.2945 li
51.7666 81.2945 51.5059 81.0338 51.5059 80.7189 cv
51.5059 80.4039 51.7666 80.152 52.0811 80.152 cv
52.6758 80.152 li
cp
f
49.2656 82.1402 mo
49.4277 82.1402 49.5625 82.2843 49.5625 82.4464 cv
49.5625 82.6173 49.4277 82.7521 49.2656 82.7521 cv
48.9414 82.7521 li
48.7705 82.7521 48.6357 82.6173 48.6357 82.4464 cv
48.6357 82.2843 48.7705 82.1402 48.9414 82.1402 cv
49.2656 82.1402 li
cp
f
48.3301 79.5401 mo
48.501 79.5401 48.6357 79.6754 48.6357 79.837 cv
48.6357 80.0079 48.501 80.152 48.3301 80.152 cv
48.0146 80.152 li
47.8438 80.152 47.709 80.0079 47.709 79.837 cv
47.709 79.6754 47.8438 79.5401 48.0146 79.5401 cv
48.3301 79.5401 li
cp
f
43.876 82.4464 mo
44.0469 82.4464 44.1816 82.5904 44.1816 82.7521 cv
44.1816 82.9234 44.0469 83.0582 43.876 83.0582 cv
43.5518 83.0582 li
43.3896 83.0582 43.2461 82.9234 43.2461 82.7521 cv
43.2461 82.5904 43.3896 82.4464 43.5518 82.4464 cv
43.876 82.4464 li
cp
f
42.958 79.2701 mo
43.2734 79.2701 43.5254 79.5221 43.5254 79.837 cv
43.5254 80.1612 43.2734 80.4132 42.958 80.4132 cv
42.3643 80.4132 li
42.0498 80.4132 41.7891 80.1612 41.7891 79.837 cv
41.7891 79.5221 42.0498 79.2701 42.3643 79.2701 cv
42.958 79.2701 li
cp
f
36.5254 82.1402 mo
36.6963 82.1402 36.8311 82.2843 36.8311 82.4464 cv
36.8311 82.6173 36.6963 82.7521 36.5254 82.7521 cv
36.2012 82.7521 li
36.0303 82.7521 35.8955 82.6173 35.8955 82.4464 cv
35.8955 82.2843 36.0303 82.1402 36.2012 82.1402 cv
36.5254 82.1402 li
cp
f
36.0576 79.5401 mo
36.2285 79.5401 36.3633 79.6754 36.3633 79.837 cv
36.3633 80.0079 36.2285 80.152 36.0576 80.152 cv
35.7422 80.152 li
35.5713 80.152 35.4277 80.0079 35.4277 79.837 cv
35.4277 79.6754 35.5713 79.5401 35.7422 79.5401 cv
36.0576 79.5401 li
cp
f
25.8906 93.5128 mo
27.7168 93.5128 li
27.5732 93.5128 27.4375 93.5758 27.3477 93.693 cv
27.2666 93.819 27.249 93.9718 27.2939 94.107 cv
27.3301 94.215 27.3662 94.3136 27.4111 94.4127 cv
25.8906 94.4127 li
24.9639 94.4127 24.2354 93.423 24.2354 92.1637 cv
24.2354 91.7047 24.3428 91.2545 24.541 90.8858 cv
24.748 90.9127 24.9727 90.9576 25.2334 91.0206 cv
25.4678 91.0748 li
25.2607 91.3356 25.1348 91.7403 25.1348 92.1637 cv
25.1348 92.9552 25.5303 93.5128 25.8906 93.5128 cv
cp
f
26.8262 88.9156 mo
26.9072 89.0143 27.0244 89.0685 27.1592 89.0685 cv
25.9355 89.3024 24.7207 89.6441 24.0908 89.9142 cv
24.4238 89.9503 24.8643 90.0133 25.4316 90.1481 cv
25.2969 90.1119 25.1611 90.1481 25.0537 90.2291 cv
24.8467 90.3912 24.667 90.6158 24.541 90.8858 cv
24.0186 90.796 23.6768 90.796 23.4697 90.7867 cv
23.2178 90.7867 22.957 90.7779 22.7949 90.5348 cv
22.6426 90.2921 22.7324 90.0582 22.8398 89.815 cv
23.1279 89.0953 25.0625 88.5646 26.7451 88.2408 cv
26.7363 88.3487 26.7178 88.4654 26.709 88.5733 cv
26.6914 88.6993 26.7363 88.8253 26.8262 88.9156 cv
cp
f
369.589 215.233 mo
369.589 207.963 li
369.589 206.812 368.662 205.885 367.511 205.885 cv
361.788 205.885 li
361.653 205.885 361.519 205.948 361.438 206.056 cv
361.348 206.173 361.32 206.317 361.356 206.452 cv
364.353 216.988 li
364.407 217.177 364.578 217.312 364.784 217.312 cv
367.511 217.312 li
368.662 217.312 369.589 216.376 369.589 215.233 cv
cp
371.101 207.963 mo
371.101 215.233 li
371.101 217.213 369.49 218.823 367.511 218.823 cv
365.469 218.823 li
365.324 218.823 365.189 218.886 365.108 219.003 cv
365.019 219.111 364.991 219.255 365.036 219.399 cv
366.377 224.141 li
365.747 224.582 364.011 225.67 362.652 225.67 cv
341.4 225.67 li
340.033 225.67 338.306 224.572 337.667 224.141 cv
339.709 216.943 li
339.745 216.808 339.718 216.664 339.637 216.547 cv
339.547 216.439 339.421 216.367 339.277 216.367 cv
335.399 216.367 li
334.842 216.367 334.697 214.334 334.59 212.849 cv
334.455 210.825 334.302 208.728 333.394 207.64 cv
332.521 206.587 330.622 206.389 329.74 206.344 cv
329.74 203.816 li
330.91 203.582 334.823 203.006 336.893 205.174 cv
338.026 206.371 338.404 207.469 338.711 208.341 cv
339.098 209.457 339.431 210.42 341.086 210.42 cv
341.221 210.42 li
341.419 210.42 341.599 210.285 341.652 210.096 cv
343.722 202.817 li
360.322 202.817 li
360.673 204.041 li
360.727 204.239 360.907 204.374 361.104 204.374 cv
367.511 204.374 li
369.49 204.374 371.101 205.984 371.101 207.963 cv
cp
.494118 .780392 .27451 rgb
f
370.426 214.633 mo
370.426 207.364 li
370.426 205.384 368.815 203.774 366.836 203.774 cv
360.43 203.774 li
360.232 203.774 360.052 203.639 359.998 203.441 cv
359.647 202.217 li
343.047 202.217 li
340.978 209.496 li
340.924 209.685 340.744 209.82 340.546 209.82 cv
340.411 209.82 li
338.756 209.82 338.423 208.858 338.036 207.742 cv
337.729 206.869 337.352 205.771 336.218 204.575 cv
334.148 202.406 330.235 202.982 329.065 203.216 cv
329.065 205.744 li
329.947 205.789 331.846 205.987 332.719 207.04 cv
333.627 208.129 333.78 210.225 333.915 212.249 cv
334.022 213.734 334.167 215.767 334.725 215.767 cv
338.603 215.767 li
338.746 215.767 338.872 215.839 338.962 215.947 cv
339.043 216.064 339.07 216.208 339.034 216.343 cv
336.992 223.541 li
337.631 223.973 339.358 225.07 340.726 225.07 cv
361.978 225.07 li
363.336 225.07 365.072 223.982 365.702 223.541 cv
364.361 218.799 li
364.316 218.655 364.344 218.511 364.434 218.403 cv
364.515 218.286 364.649 218.223 364.794 218.223 cv
366.836 218.223 li
368.815 218.223 370.426 216.613 370.426 214.633 cv
cp
371.325 207.364 mo
371.325 214.633 li
371.325 217.108 369.311 219.123 366.836 219.123 cv
365.388 219.123 li
366.656 223.604 li
366.71 223.784 366.647 223.973 366.494 224.081 cv
366.396 224.162 363.966 225.97 361.978 225.97 cv
340.726 225.97 li
338.729 225.97 336.299 224.162 336.2 224.081 cv
336.057 223.973 335.984 223.784 336.038 223.604 cv
338.009 216.667 li
334.725 216.667 li
333.321 216.667 333.187 214.651 333.024 212.312 cv
332.898 210.513 332.754 208.488 332.025 207.616 cv
331.314 206.761 329.335 206.626 328.624 206.644 cv
328.508 206.635 328.382 206.599 328.301 206.509 cv
328.211 206.428 328.166 206.311 328.166 206.194 cv
328.166 202.856 li
328.166 202.649 328.301 202.469 328.499 202.424 cv
328.724 202.361 334.059 201.021 336.866 203.954 cv
338.144 205.295 338.575 206.536 338.891 207.454 cv
339.232 208.443 339.376 208.858 340.204 208.911 cv
342.273 201.641 li
342.327 201.443 342.508 201.317 342.705 201.317 cv
359.989 201.317 li
360.196 201.317 360.367 201.443 360.421 201.641 cv
360.771 202.874 li
366.836 202.874 li
369.311 202.874 371.325 204.88 371.325 207.364 cv
cp
0 0 0 rgb
f
368.015 214.633 mo
368.015 207.364 li
368.015 206.707 367.493 206.185 366.836 206.185 cv
361.717 206.185 li
364.442 215.812 li
366.836 215.812 li
367.493 215.812 368.015 215.281 368.015 214.633 cv
cp
368.914 207.364 mo
368.914 214.633 li
368.914 215.776 367.987 216.712 366.836 216.712 cv
364.109 216.712 li
363.903 216.712 363.732 216.577 363.678 216.388 cv
360.682 205.852 li
360.646 205.717 360.673 205.573 360.763 205.456 cv
360.844 205.348 360.979 205.285 361.113 205.285 cv
366.836 205.285 li
367.987 205.285 368.914 206.212 368.914 207.364 cv
cp
f
344.037 199.977 mo
358.657 199.977 li
356.381 197.925 353.763 197.116 352.314 196.801 cv
352.135 196.756 351.99 196.612 351.964 196.432 cv
351.937 196.243 352.026 196.063 352.18 195.973 cv
352.71 195.667 353.025 195.128 353.025 194.525 cv
353.025 193.607 352.27 192.851 351.352 192.851 cv
350.425 192.851 349.669 193.607 349.669 194.525 cv
349.669 195.128 349.984 195.667 350.515 195.973 cv
350.677 196.063 350.758 196.243 350.73 196.432 cv
350.704 196.612 350.56 196.756 350.38 196.801 cv
348.94 197.116 346.322 197.925 344.037 199.977 cv
cp
360.088 200.121 mo
360.214 200.247 360.241 200.445 360.169 200.607 cv
360.097 200.769 359.936 200.877 359.755 200.877 cv
342.939 200.877 li
342.759 200.877 342.598 200.769 342.525 200.607 cv
342.453 200.445 342.489 200.247 342.606 200.121 cv
344.829 197.736 347.527 196.63 349.346 196.126 cv
348.977 195.676 348.77 195.118 348.77 194.525 cv
348.77 193.112 349.93 191.951 351.352 191.951 cv
352.765 191.951 353.925 193.112 353.925 194.525 cv
353.925 195.118 353.718 195.676 353.358 196.126 cv
355.167 196.63 357.865 197.736 360.088 200.121 cv
cp
f
342.759 197.421 mo
343.65 196.099 344.612 193.661 342.237 191.043 cv
341.742 191.528 340.789 192.608 340.627 193.931 cv
340.726 194.003 li
341.022 194.246 li
341.05 194.273 li
341.311 194.525 li
341.509 194.75 li
341.571 194.821 li
341.742 195.037 li
341.814 195.128 li
341.977 195.361 li
342.03 195.451 li
342.175 195.694 li
342.229 195.793 li
342.291 195.928 342.346 196.045 342.399 196.162 cv
342.444 196.288 li
342.543 196.54 li
342.615 196.747 342.679 196.999 342.741 197.278 cv
342.759 197.421 li
cp
342.579 190.089 mo
346.898 194.399 343.11 198.502 342.669 198.96 cv
342.588 199.041 342.489 199.086 342.382 199.086 cv
342.31 198.645 342.156 198.087 341.859 197.494 cv
341.851 197.449 li
341.814 197.242 341.761 197.035 341.688 196.828 cv
341.616 196.621 li
341.563 196.504 li
341.526 196.414 341.481 196.315 341.428 196.216 cv
341.383 196.126 li
341.274 195.946 li
341.212 195.847 li
341.095 195.667 li
341.022 195.577 li
340.896 195.406 li
340.834 195.343 li
340.672 195.163 li
340.168 194.705 li
339.907 194.525 li
339.772 194.435 339.7 194.282 339.709 194.129 cv
339.817 191.807 341.896 190.134 341.985 190.062 cv
342.156 189.918 342.417 189.927 342.579 190.089 cv
cp
f
337.145 198.726 mo
338.306 199.59 339.79 199.896 341.554 199.644 cv
341.5 199.05 341.266 197.827 340.267 196.747 cv
339.088 195.487 337.226 194.786 334.725 194.65 cv
334.932 195.586 335.543 197.547 337.145 198.726 cv
cp
342.382 199.086 mo
342.489 199.644 342.462 200.022 342.462 200.058 cv
342.453 200.265 342.301 200.436 342.094 200.472 cv
341.509 200.58 340.941 200.634 340.402 200.634 cv
338.936 200.634 337.667 200.238 336.605 199.446 cv
334.14 197.62 333.753 194.372 333.735 194.237 cv
333.717 194.111 333.762 193.976 333.852 193.886 cv
333.933 193.787 334.05 193.742 334.185 193.733 cv
337.235 193.796 339.502 194.606 340.933 196.153 cv
341.338 196.594 341.644 197.053 341.859 197.494 cv
341.896 197.683 341.913 197.89 341.923 198.079 cv
341.932 198.25 341.923 198.411 341.904 198.582 cv
341.878 198.78 341.977 198.96 342.147 199.05 cv
342.346 199.095 li
342.382 199.086 li
cp
f
342.382 199.086 mo
342.346 199.095 li
342.147 199.05 li
341.977 198.96 341.878 198.78 341.904 198.582 cv
341.923 198.411 341.932 198.25 341.923 198.079 cv
341.913 197.89 341.896 197.683 341.859 197.494 cv
342.156 198.087 342.31 198.645 342.382 199.086 cv
cp
f
83.7354 367.734 mo
83.7354 375.524 li
83.7354 378.16 82.085 380.561 79.6201 381.504 cv
78.1416 382.061 76.5342 382.061 75.0654 381.504 cv
72.6016 380.561 70.9404 378.16 70.9404 375.524 cv
70.9404 367.734 li
70.9404 364.208 73.8125 361.336 77.3379 361.336 cv
80.874 361.336 83.7354 364.208 83.7354 367.734 cv
cp
.494118 .780392 .27451 rgb
f
61.9707 377.035 mo
62.2383 377.035 62.5176 377.025 62.7852 376.992 cv
62.7207 377.893 62.2813 378.664 61.6602 378.953 cv
61.499 379.018 61.3809 379.168 61.3486 379.339 cv
58.9053 391.984 li
58.8633 392.21 58.6592 392.37 58.4238 392.381 cv
58.3701 392.381 li
58.1338 392.37 57.9414 392.21 57.8984 391.984 cv
55.4551 379.339 li
55.4229 379.168 55.3047 379.018 55.1445 378.953 cv
54.6084 378.696 54.1904 378.064 54.0615 377.271 cv
54.1904 377.282 54.3193 377.282 54.4365 377.282 cv
55.8623 377.282 57.2344 376.885 58.4131 376.146 cv
59.4951 376.724 60.7168 377.035 61.9707 377.035 cv
cp
f
82.9316 374.81 mo
82.9316 367.019 li
82.9316 363.493 80.0703 360.621 76.5342 360.621 cv
73.0088 360.621 70.1367 363.493 70.1367 367.019 cv
70.1367 374.81 li
70.1367 377.446 71.7979 379.846 74.2617 380.79 cv
75.7305 381.347 77.3379 381.347 78.8164 380.79 cv
81.2813 379.846 82.9316 377.446 82.9316 374.81 cv
cp
84.0029 367.019 mo
84.0029 374.81 li
84.0029 377.885 82.0742 380.682 79.2021 381.786 cv
78.334 382.118 77.4453 382.279 76.5342 382.279 cv
75.6338 382.279 74.7334 382.118 73.876 381.786 cv
70.9941 380.682 69.0645 377.885 69.0645 374.81 cv
69.0645 367.019 li
69.0645 362.904 72.4189 359.55 76.5342 359.55 cv
80.6602 359.55 84.0029 362.904 84.0029 367.019 cv
cp
0 0 0 rgb
f
78.0234 390.809 mo
78.0234 384.315 li
77.0488 384.562 76.0303 384.562 75.0449 384.315 cv
75.0449 390.809 li
75.0449 391.624 75.7197 392.299 76.5342 392.299 cv
77.3594 392.299 78.0234 391.624 78.0234 390.809 cv
cp
79.0957 383.587 mo
79.0957 390.809 li
79.0957 392.224 77.9482 393.37 76.5342 393.37 cv
75.1191 393.37 73.9727 392.224 73.9727 390.809 cv
73.9727 383.587 li
73.9727 383.404 74.0586 383.243 74.209 383.147 cv
74.3477 383.04 74.541 383.019 74.7012 383.083 cv
75.8906 383.533 77.1768 383.533 78.3662 383.083 cv
78.5381 383.019 78.7197 383.04 78.8701 383.147 cv
79.0098 383.243 79.0957 383.404 79.0957 383.587 cv
cp
f
65.6465 369.076 mo
65.6465 367.126 64.2852 365.412 62.335 364.897 cv
62.0566 364.822 61.8848 364.554 61.9385 364.265 cv
62.0029 363.986 62.0352 363.697 62.0352 363.397 cv
62.0352 361.007 60.0205 359.068 57.5557 359.068 cv
55.0801 359.068 53.0654 361.007 53.0654 363.397 cv
53.0654 363.729 53.1084 364.072 53.1943 364.415 cv
53.2256 364.565 53.2051 364.715 53.1299 364.833 cv
53.0439 364.962 52.915 365.047 52.7764 365.068 cv
50.6758 365.465 49.1543 367.255 49.1543 369.334 cv
49.1543 371.723 51.1689 373.663 53.6436 373.663 cv
54.9834 373.663 56.248 373.085 57.1055 372.077 cv
57.2021 371.959 57.3516 371.895 57.502 371.884 cv
57.6523 371.874 57.791 371.938 57.8984 372.045 cv
58.7559 372.934 59.9238 373.417 61.167 373.427 cv
63.6426 373.427 65.6465 371.477 65.6465 369.076 cv
cp
63.0635 364.008 mo
65.2393 364.779 66.7178 366.805 66.7178 369.076 cv
66.7178 372.067 64.2314 374.499 61.167 374.499 cv
59.8164 374.488 58.5518 374.027 57.5449 373.181 cv
56.5049 374.177 55.1123 374.734 53.6436 374.734 cv
50.5791 374.734 48.082 372.313 48.082 369.334 cv
48.082 366.922 49.7217 364.822 52.0469 364.147 cv
52.0146 363.89 51.9941 363.643 51.9941 363.397 cv
51.9941 360.418 54.4902 357.996 57.5449 357.996 cv
60.6094 357.996 63.1064 360.418 63.1064 363.397 cv
63.1064 363.601 63.0957 363.804 63.0635 364.008 cv
cp
f
61.9814 376.278 mo
61.7139 376.31 61.4346 376.321 61.167 376.321 cv
59.9131 376.321 58.6914 376.01 57.6094 375.431 cv
56.4307 376.171 55.0586 376.567 53.6328 376.567 cv
53.5156 376.567 53.3867 376.567 53.2578 376.556 cv
53.3867 377.35 53.8047 377.982 54.3408 378.239 cv
54.501 378.303 54.6191 378.453 54.6514 378.625 cv
57.0947 391.27 li
57.1377 391.495 57.3301 391.656 57.5664 391.667 cv
57.6201 391.667 li
57.8555 391.656 58.0596 391.495 58.1016 391.27 cv
60.5449 378.625 li
60.5771 378.453 60.6953 378.303 60.8564 378.239 cv
61.4775 377.95 61.917 377.178 61.9814 376.278 cv
cp
63.0635 375.656 mo
63.0635 376.031 li
63.0635 377.328 62.4639 378.507 61.5527 379.075 cv
59.1631 391.474 li
59.0234 392.17 58.4023 392.695 57.6729 392.738 cv
57.5986 392.738 li
56.8379 392.738 56.1836 392.202 56.0342 391.474 cv
53.6436 379.075 li
52.7334 378.518 52.1328 377.328 52.1328 376.031 cv
52.1328 375.881 52.1973 375.689 52.3154 375.592 cv
52.4326 375.485 52.583 375.399 52.7441 375.421 cv
54.2979 375.646 55.9697 375.271 57.2871 374.359 cv
57.459 374.242 57.6836 374.231 57.8662 374.338 cv
58.8525 374.938 59.9883 375.249 61.167 375.249 cv
61.585 375.249 62.0137 375.206 62.4209 375.131 cv
62.5811 375.099 62.7422 375.131 62.8711 375.238 cv
62.9883 375.335 63.0635 375.496 63.0635 375.656 cv
cp
f
354.592 120.108 mo
354.829 119.88 354.85 119.509 354.643 119.251 cv
351.204 115.192 350.812 111.051 353.477 106.941 cv
353.642 106.766 li
353.796 106.507 353.744 106.167 353.518 105.97 cv
351.597 104.308 349.479 103.74 347.373 104.318 cv
347.156 104.38 346.939 104.452 346.712 104.546 cv
346.475 104.638 li
346.34 104.7 346.206 104.762 346.082 104.824 cv
346.021 104.855 345.958 104.886 345.813 104.969 cv
345.7 105.031 345.587 105.103 345.463 105.165 cv
345.276 105.299 li
345.184 105.361 li
345.08 105.423 344.978 105.495 344.884 105.567 cv
344.626 105.764 li
344.522 105.846 344.42 105.929 344.326 106.012 cv
344.254 106.084 344.182 106.146 344.079 106.239 cv
343.985 106.332 343.893 106.415 343.8 106.518 cv
343.563 106.766 li
343.47 106.859 343.387 106.951 343.305 107.045 cv
343.232 107.137 343.149 107.23 343.077 107.323 cv
342.994 107.416 342.922 107.52 342.85 107.612 cv
342.777 107.715 342.705 107.819 342.633 107.922 cv
342.561 108.015 342.499 108.118 342.437 108.222 cv
342.364 108.325 342.292 108.428 342.23 108.542 cv
342.168 108.645 342.116 108.748 342.055 108.852 cv
341.993 108.965 341.931 109.079 341.869 109.192 cv
341.725 109.492 li
341.673 109.616 341.61 109.74 341.559 109.874 cv
341.436 110.173 li
341.394 110.308 341.342 110.432 341.301 110.556 cv
341.239 110.762 li
341.197 110.876 li
341.167 111.01 341.125 111.134 341.084 111.268 cv
341.043 111.454 li
341.022 111.557 li
340.991 111.702 340.96 111.846 340.929 111.991 cv
340.908 112.177 li
340.877 112.352 340.856 112.528 340.836 112.704 cv
340.836 112.714 li
340.815 112.951 340.805 113.189 340.805 113.426 cv
340.805 116.906 342.251 120.263 344.884 122.896 cv
345.06 123.071 345.235 123.247 345.421 123.412 cv
345.545 123.526 345.689 123.578 345.845 123.578 cv
345.927 123.567 li
349.8 123.03 352.712 121.874 354.592 120.108 cv
cp
357.163 113.87 mo
357.163 113.653 357.152 113.447 357.143 113.24 cv
357.091 112.239 356.915 111.381 356.78 110.835 cv
356.708 110.556 356.461 110.338 356.161 110.37 cv
355.872 110.37 355.624 110.576 355.572 110.865 cv
355.531 111.041 355.511 111.227 355.49 111.402 cv
355.469 111.567 355.459 111.722 355.448 111.888 cv
355.396 112.879 355.563 113.87 355.934 114.841 cv
356.037 115.079 356.265 115.234 356.512 115.234 cv
356.605 115.223 li
356.895 115.182 357.111 114.944 357.132 114.655 cv
357.152 114.418 357.163 114.191 357.163 113.87 cv
cp
365.083 126.335 mo
365.331 126.221 365.486 125.963 365.445 125.694 cv
365.414 125.416 365.207 125.199 364.929 125.158 cv
362.481 124.765 359.982 123.733 357.886 122.256 cv
357.648 122.08 357.308 122.111 357.101 122.318 cv
355.676 123.733 353.796 124.848 351.473 125.674 cv
351.38 125.705 li
351.38 125.715 li
351.122 125.788 350.946 126.025 350.936 126.294 cv
350.936 126.562 351.101 126.799 351.359 126.893 cv
353.311 127.564 355.387 127.915 357.514 127.915 cv
360.178 127.915 362.719 127.378 365.083 126.335 cv
cp
374.202 114.263 mo
374.223 113.994 374.233 113.715 374.233 113.426 cv
374.233 111.547 373.686 109.74 372.715 108.191 cv
371.744 106.642 370.36 105.361 368.677 104.535 cv
365.775 103.12 361.913 103.74 358.825 106.115 cv
358.567 106.311 358.505 106.672 358.691 106.941 cv
358.877 107.23 359.063 107.52 359.238 107.829 cv
359.61 108.439 361.583 113.633 359.61 118.528 cv
359.579 118.631 li
359.527 118.745 li
359.414 119.013 359.497 119.323 359.734 119.488 cv
361.779 120.955 364.525 122.028 367.2 122.028 cv
368.595 122.028 369.979 121.739 371.218 121.047 cv
371.486 120.893 li
371.661 120.779 371.848 120.666 372.023 120.542 cv
372.178 120.376 li
372.983 119.096 373.562 117.733 373.902 116.297 cv
373.923 116.184 373.943 116.06 373.985 115.863 cv
374.017 115.739 374.037 115.606 374.058 115.482 cv
374.078 115.347 374.099 115.213 374.119 115.068 cv
374.14 114.914 374.161 114.748 374.182 114.521 cv
374.202 114.263 li
cp
377.559 113.426 mo
377.559 117.082 376.309 120.593 373.943 123.598 cv
373.851 123.722 li
373.645 123.981 373.428 124.238 373.2 124.486 cv
373.128 124.569 li
372.633 125.127 372.085 125.653 371.517 126.149 cv
371.372 126.273 li
371.135 126.469 370.887 126.676 370.598 126.903 cv
370.474 126.996 li
369.875 127.45 369.234 127.874 368.584 128.255 cv
368.398 128.369 li
368.13 128.524 367.861 128.669 367.562 128.824 cv
367.335 128.937 li
367.046 129.092 366.746 129.226 366.446 129.36 cv
366.302 129.433 li
365.951 129.578 365.59 129.722 365.228 129.867 cv
365.114 129.908 li
365.011 129.939 li
364.722 130.042 364.433 130.135 364.134 130.228 cv
363.803 130.331 li
363.524 130.414 363.235 130.497 362.945 130.569 cv
362.667 130.641 li
362.285 130.724 361.902 130.806 361.438 130.889 cv
361.335 130.91 li
361.004 130.962 360.674 131.013 360.344 131.054 cv
360.044 131.085 li
359.961 131.095 li
359.683 131.127 359.394 131.157 359.104 131.178 cv
358.732 131.199 li
357.938 131.24 357.111 131.24 356.316 131.199 cv
355.954 131.178 li
355.665 131.157 355.376 131.127 355.098 131.095 cv
354.726 131.054 li
354.405 131.023 354.096 130.972 353.796 130.92 cv
353.559 130.889 li
353.166 130.816 352.784 130.734 352.402 130.641 cv
352.216 130.6 li
351.896 130.517 351.586 130.435 351.276 130.342 cv
350.987 130.259 li
350.688 130.166 350.398 130.073 350.037 129.939 cv
349.893 129.887 li
349.159 129.619 348.447 129.309 347.745 128.968 cv
347.631 128.906 li
347.311 128.752 347.012 128.586 346.712 128.411 cv
346.588 128.338 li
345.576 127.75 344.616 127.078 343.707 126.314 cv
339.689 122.906 337.479 118.332 337.479 113.426 cv
337.479 107.912 341.436 102.501 346.495 101.117 cv
348.292 100.621 351.865 100.239 355.5 103.285 cv
355.728 103.471 356.048 103.471 356.285 103.296 cv
357.658 102.222 359.321 101.406 361.087 100.91 cv
364.216 100.043 367.51 100.27 370.123 101.54 cv
374.636 103.74 377.559 108.407 377.559 113.426 cv
cp
.494118 .780392 .27451 rgb
f
373.169 122.91 mo
373.076 123.034 li
372.87 123.292 372.653 123.55 372.426 123.798 cv
372.354 123.88 li
371.857 124.438 371.311 124.965 370.742 125.461 cv
370.598 125.585 li
370.36 125.781 370.112 125.987 369.823 126.214 cv
369.699 126.307 li
369.101 126.762 368.46 127.185 367.81 127.567 cv
367.624 127.681 li
367.355 127.836 367.087 127.98 366.787 128.135 cv
366.561 128.249 li
366.271 128.404 365.972 128.538 365.672 128.672 cv
365.527 128.744 li
365.177 128.889 364.815 129.034 364.453 129.178 cv
364.34 129.219 li
364.236 129.251 li
363.947 129.354 363.658 129.447 363.358 129.54 cv
363.028 129.643 li
362.75 129.726 362.46 129.808 362.171 129.88 cv
361.893 129.953 li
361.511 130.035 361.128 130.118 360.663 130.201 cv
360.561 130.221 li
360.229 130.273 359.899 130.324 359.569 130.366 cv
359.27 130.397 li
359.187 130.407 li
358.908 130.438 358.619 130.469 358.33 130.49 cv
357.958 130.51 li
357.163 130.552 356.337 130.552 355.542 130.51 cv
355.18 130.49 li
354.891 130.469 354.602 130.438 354.323 130.407 cv
353.951 130.366 li
353.631 130.335 353.321 130.283 353.021 130.232 cv
352.784 130.201 li
352.392 130.128 352.01 130.046 351.628 129.953 cv
351.441 129.911 li
351.122 129.829 350.812 129.746 350.502 129.653 cv
350.213 129.57 li
349.913 129.478 349.624 129.385 349.263 129.251 cv
349.118 129.199 li
348.385 128.93 347.673 128.621 346.971 128.28 cv
346.856 128.218 li
346.536 128.063 346.237 127.898 345.938 127.722 cv
345.813 127.65 li
344.802 127.061 343.841 126.39 342.933 125.626 cv
338.915 122.218 336.705 117.643 336.705 112.738 cv
336.705 107.223 340.66 101.812 345.721 100.428 cv
347.518 99.9327 351.091 99.5504 354.726 102.597 cv
354.953 102.783 355.273 102.783 355.511 102.608 cv
356.884 101.533 358.547 100.717 360.313 100.222 cv
363.441 99.3546 366.735 99.5816 369.349 100.852 cv
373.861 103.051 376.783 107.719 376.783 112.738 cv
376.783 116.394 375.534 119.905 373.169 122.91 cv
cp
369.896 99.7364 mo
367.004 98.3321 363.4 98.0738 359.982 99.024 cv
358.227 99.5196 356.563 100.304 355.139 101.337 cv
351.204 98.2701 347.362 98.6935 345.391 99.2306 cv
339.824 100.759 335.466 106.697 335.466 112.738 cv
335.466 118.015 337.831 122.93 342.158 126.596 cv
343.098 127.381 344.12 128.094 345.194 128.724 cv
345.318 128.796 li
345.638 128.982 345.958 129.157 346.289 129.323 cv
346.423 129.385 li
347.156 129.756 347.92 130.087 348.695 130.366 cv
348.912 130.448 li
349.222 130.552 349.531 130.655 349.852 130.758 cv
350.15 130.841 li
350.481 130.944 350.812 131.026 351.215 131.13 cv
351.349 131.161 li
351.752 131.254 352.154 131.347 352.567 131.419 cv
352.815 131.45 li
353.136 131.512 353.466 131.553 353.796 131.595 cv
354.188 131.646 li
354.488 131.677 354.787 131.698 355.087 131.718 cv
355.47 131.75 li
355.893 131.77 356.316 131.791 356.739 131.791 cv
357.173 131.791 357.606 131.77 358.03 131.75 cv
358.412 131.718 li
358.722 131.698 359.021 131.677 359.331 131.636 cv
359.403 131.636 li
359.724 131.595 li
360.075 131.553 360.416 131.502 360.85 131.429 cv
360.963 131.409 li
361.366 131.337 361.769 131.254 362.171 131.15 cv
362.481 131.078 li
362.78 131.006 363.08 130.923 363.38 130.831 cv
363.73 130.727 li
364.04 130.634 364.351 130.521 364.732 130.386 cv
364.887 130.335 li
365.27 130.19 365.651 130.035 366.023 129.88 cv
366.178 129.808 li
366.498 129.664 366.808 129.519 367.118 129.364 cv
367.387 129.219 li
367.676 129.075 367.965 128.91 368.315 128.713 cv
368.439 128.641 li
369.132 128.228 369.803 127.784 370.443 127.299 cv
370.618 127.165 li
370.887 126.958 371.146 126.741 371.476 126.462 cv
371.559 126.39 li
372.168 125.863 372.746 125.306 373.272 124.717 cv
373.355 124.624 li
373.593 124.356 373.82 124.087 374.067 123.777 cv
374.15 123.674 li
376.681 120.452 378.022 116.672 378.022 112.738 cv
378.022 107.244 374.832 102.143 369.896 99.7364 cv
cp
0 0 0 rgb
f
372.188 113.492 mo
372.157 113.791 li
372.146 113.936 372.137 114.081 372.116 114.225 cv
372.096 114.349 372.085 114.473 372.064 114.597 cv
372.044 114.711 372.023 114.824 371.981 115.02 cv
371.961 115.124 371.94 115.227 371.92 115.33 cv
371.62 116.59 371.125 117.798 370.423 118.924 cv
370.309 119.006 370.175 119.079 370.03 119.171 cv
369.844 119.275 li
366.859 120.927 362.78 119.843 360.075 118.067 cv
362.078 112.769 360.003 107.306 359.527 106.501 cv
359.445 106.356 359.353 106.212 359.27 106.067 cv
360.922 104.931 362.771 104.332 364.505 104.332 cv
365.518 104.332 366.488 104.539 367.355 104.962 cv
370.309 106.397 372.22 109.444 372.22 112.738 cv
372.22 112.996 372.209 113.244 372.188 113.492 cv
cp
371.94 107.502 mo
370.97 105.953 369.586 104.672 367.902 103.847 cv
365.001 102.432 361.139 103.051 358.051 105.426 cv
357.793 105.623 357.73 105.984 357.917 106.253 cv
358.103 106.542 358.288 106.831 358.464 107.141 cv
358.836 107.75 360.809 112.944 358.836 117.839 cv
358.805 117.942 li
358.753 118.056 li
358.64 118.325 358.722 118.634 358.96 118.8 cv
361.004 120.266 363.751 121.34 366.426 121.34 cv
367.82 121.34 369.204 121.051 370.443 120.359 cv
370.712 120.204 li
370.887 120.09 371.073 119.977 371.249 119.853 cv
371.403 119.688 li
372.209 118.407 372.787 117.044 373.128 115.609 cv
373.148 115.495 373.169 115.371 373.211 115.175 cv
373.241 115.051 373.263 114.917 373.283 114.793 cv
373.304 114.659 373.324 114.525 373.345 114.38 cv
373.365 114.225 373.386 114.06 373.407 113.833 cv
373.428 113.574 li
373.448 113.306 373.458 113.027 373.458 112.738 cv
373.458 110.859 372.911 109.051 371.94 107.502 cv
cp
f
352.691 125.523 mo
354.292 124.799 355.676 123.912 356.822 122.869 cv
358.392 123.912 360.116 124.707 361.893 125.223 cv
358.97 126.122 355.696 126.225 352.691 125.523 cv
cp
364.154 124.469 mo
361.707 124.077 359.207 123.044 357.111 121.567 cv
356.874 121.392 356.533 121.423 356.326 121.63 cv
354.901 123.044 353.021 124.159 350.698 124.985 cv
350.605 125.017 li
350.605 125.027 li
350.347 125.099 350.172 125.337 350.161 125.605 cv
350.161 125.874 350.326 126.111 350.585 126.204 cv
352.536 126.875 354.612 127.227 356.739 127.227 cv
359.403 127.227 361.944 126.69 364.309 125.647 cv
364.557 125.533 364.712 125.275 364.67 125.006 cv
364.64 124.727 364.433 124.51 364.154 124.469 cv
cp
f
355.737 114.545 mo
355.831 114.535 li
356.12 114.493 356.337 114.256 356.357 113.967 cv
356.378 113.729 356.389 113.502 356.389 113.182 cv
356.389 112.965 356.378 112.758 356.367 112.552 cv
356.316 111.55 356.141 110.693 356.006 110.146 cv
355.934 109.867 355.687 109.65 355.387 109.681 cv
355.098 109.681 354.85 109.888 354.798 110.177 cv
354.757 110.353 354.736 110.538 354.715 110.714 cv
354.694 110.879 354.685 111.034 354.674 111.199 cv
354.622 112.191 354.787 113.182 355.159 114.153 cv
355.263 114.39 355.49 114.545 355.737 114.545 cv
cp
f
345.276 121.619 mo
345.174 121.526 345.08 121.433 344.987 121.33 cv
342.592 118.934 341.27 115.888 341.27 112.738 cv
341.27 112.542 341.28 112.335 341.301 112.129 cv
341.312 111.974 341.332 111.819 341.362 111.674 cv
341.384 111.509 li
341.404 111.385 341.425 111.272 341.456 111.148 cv
341.486 111.024 li
341.518 110.889 li
341.538 110.776 341.58 110.662 341.61 110.548 cv
341.652 110.425 li
341.693 110.27 li
341.734 110.156 341.776 110.043 341.858 109.846 cv
341.931 109.661 li
341.972 109.547 342.023 109.444 342.096 109.289 cv
342.199 109.062 li
342.262 108.958 342.313 108.855 342.364 108.752 cv
342.52 108.494 li
342.581 108.39 342.644 108.297 342.705 108.205 cv
342.757 108.111 342.819 108.019 342.881 107.936 cv
342.942 107.843 343.005 107.76 343.066 107.668 cv
343.139 107.574 343.201 107.492 343.273 107.409 cv
343.47 107.161 li
343.696 106.914 li
343.903 106.697 li
343.985 106.614 344.068 106.542 344.182 106.428 cv
344.368 106.263 li
344.45 106.191 344.533 106.118 344.688 105.995 cv
344.843 105.871 li
345.102 105.695 li
345.194 105.633 li
345.349 105.53 li
345.441 105.478 345.545 105.416 345.638 105.365 cv
345.741 105.313 li
345.865 105.241 li
345.969 105.189 346.082 105.137 346.217 105.086 cv
346.392 105.003 li
346.567 104.941 346.743 104.879 346.929 104.828 cv
348.478 104.404 350.017 104.755 351.483 105.86 cv
348.829 110.167 349.19 114.659 352.536 118.893 cv
350.884 120.225 348.447 121.144 345.276 121.619 cv
cp
353.868 118.562 mo
350.43 114.504 350.037 110.363 352.701 106.253 cv
352.867 106.077 li
353.021 105.819 352.97 105.478 352.743 105.282 cv
350.822 103.619 348.705 103.051 346.599 103.63 cv
346.382 103.692 346.165 103.764 345.938 103.857 cv
345.7 103.95 li
345.565 104.012 345.432 104.074 345.308 104.136 cv
345.245 104.167 345.184 104.198 345.039 104.28 cv
344.926 104.342 344.812 104.415 344.688 104.477 cv
344.502 104.611 li
344.409 104.672 li
344.306 104.734 344.202 104.807 344.109 104.879 cv
343.852 105.075 li
343.748 105.158 343.646 105.241 343.552 105.323 cv
343.479 105.396 343.407 105.458 343.305 105.55 cv
343.211 105.643 343.118 105.726 343.025 105.829 cv
342.788 106.077 li
342.695 106.17 342.612 106.263 342.529 106.356 cv
342.457 106.449 342.375 106.542 342.303 106.635 cv
342.22 106.728 342.147 106.831 342.075 106.924 cv
342.003 107.027 341.931 107.13 341.858 107.234 cv
341.786 107.327 341.725 107.43 341.662 107.533 cv
341.59 107.636 341.518 107.74 341.456 107.853 cv
341.394 107.957 341.342 108.06 341.28 108.163 cv
341.218 108.277 341.156 108.39 341.095 108.504 cv
340.95 108.803 li
340.898 108.927 340.836 109.051 340.784 109.186 cv
340.66 109.485 li
340.619 109.619 340.567 109.743 340.526 109.867 cv
340.465 110.074 li
340.423 110.187 li
340.392 110.321 340.351 110.445 340.31 110.58 cv
340.269 110.766 li
340.248 110.869 li
340.217 111.013 340.186 111.158 340.154 111.302 cv
340.134 111.488 li
340.103 111.664 340.082 111.839 340.062 112.015 cv
340.062 112.025 li
340.041 112.263 340.03 112.501 340.03 112.738 cv
340.03 116.218 341.477 119.574 344.109 122.208 cv
344.285 122.383 344.461 122.559 344.646 122.724 cv
344.771 122.838 344.915 122.889 345.07 122.889 cv
345.152 122.879 li
349.025 122.342 351.938 121.185 353.817 119.42 cv
354.055 119.192 354.075 118.82 353.868 118.562 cv
cp
f
137.399 333.391 mo
138.261 335.786 138.418 338.464 137.893 341.143 cv
137.841 341.132 li
137.925 340.534 137.799 339.777 137.231 338.843 cv
136.706 337.971 135.803 337.477 135.12 337.109 cv
135.004 337.057 li
135.183 336.889 li
135.582 336.542 li
135.991 336.174 136.359 335.818 136.675 335.334 cv
136.989 334.851 137.231 334.263 137.389 333.433 cv
137.399 333.391 li
cp
.494118 .780392 .27451 rgb
f
137.841 341.132 mo
137.893 341.143 li
137.357 343.959 136.055 346.774 134.069 349.253 cv
133.849 348.644 133.565 348.034 133.292 347.425 cv
132.746 346.227 131.927 344.431 132.389 344.011 cv
132.588 343.885 li
132.746 343.811 133.471 343.717 133.754 343.685 cv
134.951 343.538 136.181 343.38 137.042 342.614 cv
137.305 342.372 137.735 341.889 137.841 341.132 cv
cp
f
134.489 328.821 mo
133.313 328.79 132.221 329.283 131.296 329.714 cv
130.561 330.061 129.805 330.418 129.363 330.323 cv
128.796 330.218 128.555 329.525 128.208 327.897 cv
128.071 327.277 127.935 326.647 127.714 326.069 cv
127.619 325.848 127.515 325.575 127.367 325.302 cv
130.161 325.743 132.599 326.941 134.489 328.821 cv
cp
f
123.807 350.965 mo
125.015 352.068 126.569 353.507 128.344 354.179 cv
125.98 355.555 123.47 356.385 121.001 356.648 cv
120.991 356.501 li
121.495 356.448 121.947 356.228 122.283 355.923 cv
122.871 355.398 123.239 354.558 123.386 353.434 cv
123.438 353.076 123.46 352.625 123.48 352.152 cv
123.491 351.826 123.522 351.249 123.575 350.744 cv
123.807 350.965 li
cp
f
122.493 325.292 mo
122.398 325.428 122.294 325.575 122.199 325.712 cv
122.052 325.901 121.905 326.101 121.758 326.3 cv
121.621 326.468 121.495 326.615 121.38 326.72 cv
121.222 326.857 121.128 326.899 121.117 326.899 cv
121.012 326.857 120.949 326.804 120.791 326.626 cv
120.508 326.353 120.203 326.08 119.814 325.901 cv
120.697 325.628 121.601 325.428 122.493 325.292 cv
cp
f
120.991 356.501 mo
121.001 356.648 li
117.955 356.984 114.993 356.48 112.482 355.114 cv
113.354 354.841 114.132 354.232 114.772 353.654 cv
114.972 353.476 115.161 353.297 115.36 353.108 cv
115.57 352.908 115.771 352.667 116.033 352.373 cv
116.285 352.089 116.537 351.784 116.769 351.574 cv
116.873 351.49 li
116.926 351.648 116.988 351.837 117.03 351.973 cv
117.114 352.247 li
117.157 352.394 117.209 352.541 117.272 352.782 cv
117.514 353.644 117.85 354.831 118.722 355.608 cv
119.541 356.343 120.318 356.564 120.991 356.501 cv
cp
f
115.161 328.054 mo
115.045 328.359 114.951 328.664 114.877 328.958 cv
114.835 329.115 114.793 329.315 114.751 329.525 cv
114.698 329.756 li
114.479 329.62 114.205 329.493 113.9 329.42 cv
113.89 329.42 li
113.732 329.378 113.554 329.346 113.375 329.325 cv
113.953 328.863 114.552 328.443 115.161 328.054 cv
cp
f
109.53 335.355 mo
109.793 335.828 109.814 335.912 109.793 335.996 cv
109.782 336.006 109.709 336.237 109.068 336.805 cv
108.848 337.015 108.606 337.204 108.322 337.435 cv
108.165 337.561 107.976 337.698 107.766 337.866 cv
107.461 338.097 107.114 338.349 106.799 338.622 cv
107.304 337.078 108.028 335.565 108.974 334.115 cv
109.11 334.62 109.341 335.019 109.53 335.355 cv
cp
f
109.614 344.494 mo
109.583 344.609 109.499 344.851 109.31 345.314 cv
108.459 347.299 107.85 349.043 108.333 351.459 cv
106.631 349.074 105.854 346.122 105.99 343.055 cv
106.284 343.38 106.673 343.675 107.146 343.948 cv
107.829 344.326 108.543 344.389 109.1 344.431 cv
109.257 344.442 109.478 344.463 109.614 344.494 cv
cp
f
137.105 340.443 mo
137.63 337.764 137.473 335.086 136.611 332.691 cv
136.601 332.733 li
136.443 333.562 136.202 334.151 135.887 334.634 cv
135.571 335.117 135.204 335.474 134.794 335.842 cv
134.395 336.189 li
134.216 336.357 li
134.332 336.409 li
135.015 336.777 135.918 337.271 136.443 338.142 cv
137.011 339.077 137.137 339.834 137.053 340.432 cv
136.947 341.189 136.517 341.672 136.254 341.914 cv
135.393 342.68 134.164 342.838 132.966 342.985 cv
132.683 343.017 131.958 343.111 131.8 343.185 cv
131.601 343.311 li
131.139 343.731 131.958 345.527 132.504 346.725 cv
132.777 347.334 133.061 347.943 133.281 348.552 cv
135.267 346.073 136.569 343.258 137.105 340.443 cv
cp
136.391 329.823 mo
140.004 335.653 138.796 343.941 133.46 349.981 cv
133.354 350.097 133.219 350.16 133.061 350.16 cv
132.935 350.139 li
132.746 350.097 132.599 349.949 132.557 349.75 cv
132.367 348.941 131.947 348.038 131.548 347.155 cv
130.676 345.264 129.856 343.468 130.896 342.533 cv
131.013 342.428 131.159 342.334 131.317 342.25 cv
131.569 342.113 132 342.05 132.83 341.945 cv
133.87 341.819 134.941 341.682 135.551 341.126 cv
136.181 340.569 136.181 339.729 135.551 338.689 cv
135.162 338.058 134.469 337.68 133.859 337.355 cv
133.586 337.208 133.271 337.029 133.093 336.903 cv
132.882 336.734 132.83 336.43 132.966 336.199 cv
133.113 335.978 133.354 335.716 133.691 335.411 cv
134.09 335.054 li
134.805 334.423 135.319 333.867 135.571 332.544 cv
135.739 331.619 135.708 330.873 135.456 330.306 cv
135.403 330.18 135.403 330.043 135.456 329.917 cv
135.582 329.928 135.708 329.886 135.803 329.802 cv
135.96 329.57 li
136.128 329.581 136.286 329.675 136.391 329.823 cv
cp
0 0 0 rgb
f
130.508 329.014 mo
131.433 328.583 132.525 328.089 133.701 328.121 cv
131.811 326.24 129.374 325.043 126.579 324.602 cv
126.727 324.875 126.831 325.148 126.926 325.369 cv
127.146 325.946 127.283 326.577 127.42 327.196 cv
127.767 328.825 128.008 329.518 128.575 329.623 cv
129.017 329.717 129.772 329.36 130.508 329.014 cv
cp
135.897 329.088 mo
136.002 329.234 136.023 329.413 135.96 329.57 cv
135.697 329.633 li
135.582 329.696 135.487 329.802 135.456 329.917 cv
135.33 329.907 135.193 329.854 135.099 329.759 cv
134.847 329.507 134.563 329.371 134.363 329.308 cv
134.08 329.214 133.807 329.172 133.523 329.172 cv
132.661 329.172 131.79 329.57 130.949 329.97 cv
130.161 330.338 129.405 330.694 128.723 330.694 cv
128.606 330.694 128.48 330.684 128.365 330.652 cv
127.031 330.39 126.716 328.951 126.391 327.438 cv
126.265 326.839 126.139 326.251 125.938 325.747 cv
125.771 325.327 125.508 324.707 125.119 324.308 cv
124.962 324.15 124.92 323.919 125.015 323.719 cv
125.108 323.52 125.309 323.404 125.539 323.415 cv
129.342 323.73 132.619 325.306 134.993 327.964 cv
135.309 328.31 135.613 328.699 135.897 329.088 cv
cp
f
135.697 329.633 mo
135.96 329.57 li
135.803 329.802 li
135.708 329.886 135.582 329.928 135.456 329.917 cv
135.487 329.802 135.582 329.696 135.697 329.633 cv
cp
f
131.916 332.974 mo
132.179 333.257 132.146 333.71 131.863 333.962 cv
131.779 334.046 li
131.495 334.297 131.044 334.266 130.781 333.983 cv
130.529 333.699 130.561 333.247 130.845 332.995 cv
130.929 332.922 li
131.212 332.659 131.664 332.691 131.916 332.974 cv
cp
f
127.557 353.479 mo
125.781 352.807 124.227 351.368 123.019 350.265 cv
122.787 350.044 li
122.734 350.548 122.703 351.126 122.692 351.452 cv
122.672 351.924 122.65 352.376 122.599 352.734 cv
122.451 353.857 122.083 354.698 121.495 355.223 cv
121.159 355.527 120.707 355.748 120.203 355.8 cv
119.531 355.864 118.754 355.643 117.935 354.908 cv
117.063 354.13 116.726 352.943 116.484 352.082 cv
116.422 351.84 116.369 351.693 116.327 351.547 cv
116.243 351.273 li
116.201 351.136 116.138 350.947 116.085 350.79 cv
115.98 350.874 li
115.749 351.084 115.497 351.389 115.245 351.672 cv
114.982 351.966 114.782 352.208 114.572 352.408 cv
114.373 352.597 114.184 352.776 113.984 352.954 cv
113.344 353.532 112.566 354.141 111.694 354.414 cv
114.205 355.779 117.167 356.284 120.214 355.948 cv
122.683 355.685 125.192 354.855 127.557 353.479 cv
cp
129.374 353.185 mo
129.416 353.395 129.332 353.616 129.143 353.731 cv
125.76 355.979 121.999 357.103 118.438 357.103 cv
115.056 357.103 111.852 356.095 109.278 354.078 cv
109.142 353.9 li
109.278 353.921 li
109.415 353.921 109.562 353.857 109.667 353.752 cv
109.814 353.584 109.846 353.342 109.729 353.153 cv
109.898 353.227 li
110.034 353.321 110.192 353.395 110.35 353.437 cv
111.369 353.731 112.461 352.912 113.291 352.166 cv
113.47 352.008 113.659 351.83 113.837 351.651 cv
114.026 351.473 114.216 351.252 114.404 351.031 cv
114.72 350.674 114.993 350.349 115.287 350.097 cv
115.56 349.855 115.791 349.708 116.001 349.645 cv
116.106 349.624 116.19 349.613 116.232 349.603 cv
116.337 349.592 li
116.474 349.592 116.6 349.634 116.705 349.729 cv
116.895 349.907 117.021 350.223 117.22 350.874 cv
117.325 351.221 li
117.377 351.378 117.419 351.536 117.472 351.704 cv
117.714 352.576 117.986 353.542 118.638 354.13 cv
119.73 355.097 120.455 354.74 120.791 354.435 cv
121.19 354.089 121.442 353.468 121.559 352.607 cv
121.601 352.26 121.621 351.851 121.643 351.41 cv
121.685 350.464 121.747 349.424 121.947 348.91 cv
121.999 348.762 122.115 348.647 122.252 348.594 cv
122.398 348.552 122.556 348.563 122.692 348.636 cv
122.871 348.741 123.081 348.889 123.302 349.099 cv
123.732 349.487 li
124.415 350.118 125.225 350.863 126.117 351.494 cv
127 352.113 127.955 352.618 128.943 352.776 cv
129.153 352.807 129.321 352.975 129.374 353.185 cv
cp
f
129.132 346.704 mo
129.279 346.987 129.185 347.334 128.964 347.544 cv
128.891 347.617 128.807 347.66 128.712 347.691 cv
128.513 347.796 128.344 347.996 128.113 348.017 cv
127.787 348.059 127.493 347.943 127.347 347.649 cv
127.188 347.355 127.283 347.019 127.515 346.798 cv
127.756 346.662 li
127.955 346.546 128.124 346.357 128.354 346.325 cv
128.681 346.283 128.975 346.409 129.132 346.704 cv
cp
f
128.471 338.416 mo
128.723 338.699 128.701 339.151 128.418 339.403 cv
128.376 339.445 li
128.365 339.487 li
128.344 339.865 128.019 340.17 127.63 340.138 cv
127.252 340.128 126.947 339.781 126.968 339.403 cv
126.989 339.161 127.031 338.93 127.157 338.72 cv
127.241 338.584 127.367 338.468 127.482 338.353 cv
127.767 338.1 128.218 338.132 128.471 338.416 cv
cp
f
127.431 333.384 mo
127.683 333.668 127.651 334.119 127.367 334.381 cv
127.084 334.634 126.632 334.602 126.38 334.318 cv
126.117 334.025 125.896 333.72 125.896 333.3 cv
125.896 332.922 126.274 332.617 126.643 332.638 cv
126.979 332.659 127.21 332.901 127.283 333.205 cv
127.294 333.226 li
127.431 333.384 li
cp
f
124.804 338.395 mo
124.804 337.565 124.542 336.787 123.995 336.178 cv
123.365 335.484 122.462 335.107 121.422 335.107 cv
121.232 335.117 li
120.077 335.17 118.922 335.663 117.966 336.514 cv
117.021 337.365 116.4 338.458 116.222 339.603 cv
116.054 340.706 116.316 341.724 116.979 342.46 cv
117.64 343.195 118.606 343.573 119.73 343.531 cv
120.886 343.479 122.052 342.985 122.997 342.134 cv
124.174 341.084 124.804 339.676 124.804 338.395 cv
cp
124.772 335.484 mo
126.548 337.46 126.064 340.8 123.701 342.911 cv
122.566 343.93 121.18 344.519 119.772 344.571 cv
119.541 344.582 li
119.415 344.582 119.3 344.582 119.185 344.571 cv
117.986 344.487 116.946 343.993 116.19 343.164 cv
115.318 342.187 114.961 340.863 115.182 339.445 cv
115.392 338.058 116.138 336.745 117.272 335.726 cv
118.396 334.718 119.793 334.13 121.19 334.067 cv
122.608 334.004 123.9 334.508 124.772 335.484 cv
cp
f
124.878 345.086 mo
125.13 345.37 125.108 345.821 124.814 346.073 cv
124.531 346.325 124.079 346.304 123.827 346.021 cv
123.512 345.674 li
123.26 345.391 123.291 344.939 123.575 344.676 cv
123.858 344.424 124.311 344.445 124.563 344.739 cv
124.878 345.086 li
cp
f
114.09 328.257 mo
114.163 327.964 114.258 327.659 114.373 327.354 cv
113.764 327.743 113.165 328.163 112.587 328.625 cv
112.766 328.646 112.944 328.678 113.102 328.72 cv
113.112 328.72 li
113.417 328.793 113.69 328.919 113.911 329.056 cv
113.963 328.825 li
114.005 328.615 114.048 328.415 114.09 328.257 cv
cp
121.411 325.011 mo
121.506 324.875 121.61 324.728 121.705 324.591 cv
120.813 324.728 119.909 324.927 119.026 325.201 cv
119.415 325.379 119.72 325.652 120.004 325.925 cv
120.161 326.104 120.224 326.156 120.329 326.198 cv
120.34 326.198 120.435 326.156 120.592 326.02 cv
120.707 325.915 120.833 325.768 120.97 325.6 cv
121.117 325.4 121.264 325.201 121.411 325.011 cv
cp
123.48 323.74 mo
123.564 323.951 123.502 324.192 123.323 324.339 cv
122.955 324.665 122.619 325.127 122.262 325.621 cv
122.104 325.831 121.957 326.041 121.8 326.24 cv
121.621 326.472 121.453 326.661 121.285 326.808 cv
120.813 327.228 120.382 327.354 119.951 327.175 cv
119.615 327.049 119.437 326.86 119.247 326.661 cv
118.806 326.209 118.375 325.873 117.325 326.104 cv
116.778 326.219 116.358 326.419 116.033 326.703 cv
115.497 327.186 115.276 327.869 115.098 328.53 cv
115.066 328.678 115.024 328.846 114.993 329.025 cv
114.888 329.581 114.793 329.917 114.688 330.117 cv
114.614 330.243 114.499 330.338 114.362 330.38 cv
114.226 330.401 li
114.132 330.401 114.037 330.369 113.953 330.317 cv
113.701 330.159 li
113.448 330.001 113.176 329.812 112.86 329.738 cv
112.366 329.612 111.736 329.612 111.19 329.728 cv
111.012 329.77 110.822 329.707 110.707 329.581 cv
110.623 329.465 li
110.507 329.255 110.55 328.993 110.728 328.835 cv
110.928 328.646 li
114.373 325.558 118.648 323.698 122.955 323.404 cv
123.176 323.404 123.396 323.53 123.48 323.74 cv
cp
f
122.661 329.812 mo
122.913 330.096 122.882 330.547 122.599 330.799 cv
122.241 331.125 121.769 331.094 121.442 330.736 cv
121.19 330.453 121.212 330.001 121.506 329.749 cv
121.663 329.602 121.884 329.549 122.083 329.581 cv
122.294 329.57 122.504 329.644 122.661 329.812 cv
cp
f
119.468 347.103 mo
119.72 347.386 119.699 347.838 119.404 348.09 cv
119.152 348.321 li
118.858 348.584 118.417 348.552 118.154 348.269 cv
117.902 347.985 117.924 347.533 118.207 347.281 cv
118.47 347.05 li
118.638 346.903 118.869 346.851 119.09 346.882 cv
119.227 346.914 119.362 346.987 119.468 347.103 cv
cp
f
115.802 332.449 mo
116.18 332.48 116.484 332.817 116.464 333.194 cv
116.453 333.489 116.358 333.72 116.138 333.92 cv
116.001 334.035 115.833 334.098 115.665 334.098 cv
115.476 334.098 115.287 334.014 115.15 333.867 cv
115.066 333.783 115.024 333.678 115.003 333.573 cv
114.919 333.342 114.972 333.079 115.129 332.89 cv
115.182 332.764 115.276 332.659 115.392 332.575 cv
115.508 332.491 115.654 332.438 115.802 332.449 cv
cp
f
114.362 342.103 mo
114.583 342.344 114.688 342.617 114.688 342.943 cv
114.678 343.332 114.31 343.626 113.942 343.605 cv
113.596 343.594 113.354 343.332 113.291 343.006 cv
113.06 342.722 113.092 342.292 113.364 342.05 cv
113.659 341.787 114.11 341.819 114.362 342.103 cv
cp
f
112.85 346.903 mo
113.134 347.166 113.06 347.66 112.797 347.891 cv
112.682 347.996 112.535 348.059 112.377 348.069 cv
112.104 348.195 111.768 348.143 111.558 347.901 cv
111.295 347.617 111.327 347.166 111.61 346.914 cv
111.758 346.788 111.904 346.693 112.104 346.641 cv
112.388 346.578 112.65 346.714 112.85 346.903 cv
cp
f
111.106 338.069 mo
111.484 338.09 111.789 338.426 111.768 338.815 cv
111.747 339.193 111.411 339.498 111.032 339.476 cv
110.864 339.466 li
110.476 339.445 110.182 339.109 110.203 338.72 cv
110.224 338.342 110.56 338.037 110.938 338.058 cv
111.106 338.069 li
cp
f
108.521 344.613 mo
108.711 344.151 108.795 343.909 108.826 343.794 cv
108.69 343.762 108.47 343.741 108.312 343.731 cv
107.755 343.689 107.041 343.626 106.358 343.248 cv
105.886 342.974 105.497 342.68 105.202 342.355 cv
105.065 345.422 105.843 348.374 107.545 350.758 cv
107.062 348.342 107.671 346.599 108.521 344.613 cv
cp
109.005 335.296 mo
109.026 335.212 109.005 335.128 108.742 334.655 cv
108.554 334.318 108.322 333.92 108.186 333.415 cv
107.24 334.865 106.516 336.378 106.012 337.922 cv
106.326 337.649 106.673 337.397 106.978 337.166 cv
107.188 336.997 107.377 336.861 107.534 336.734 cv
107.818 336.504 108.06 336.315 108.28 336.105 cv
108.921 335.537 108.995 335.306 109.005 335.296 cv
cp
109.656 334.14 mo
109.94 334.644 110.161 335.033 110.014 335.568 cv
109.919 335.915 109.583 336.357 108.984 336.892 cv
108.742 337.102 108.49 337.313 108.28 337.481 cv
108.028 337.691 107.829 337.838 107.629 337.985 cv
107.282 338.247 106.915 338.521 106.589 338.815 cv
106.063 339.287 105.465 339.939 105.549 340.748 cv
105.612 341.336 106.063 341.872 106.873 342.334 cv
107.355 342.596 107.892 342.638 108.364 342.68 cv
108.837 342.712 109.215 342.743 109.488 342.943 cv
110.129 343.416 109.908 344.014 109.488 345.023 cv
108.563 347.187 108.018 348.794 108.774 351.368 cv
108.995 352.113 109.289 352.67 109.646 353.017 cv
109.729 353.153 li
109.52 353.101 109.299 353.174 109.173 353.353 cv
109.058 353.511 109.047 353.71 109.131 353.889 cv
108.942 353.794 li
108.428 353.363 107.986 352.943 107.587 352.492 cv
102.702 347.029 102.944 338.447 108.175 331.619 cv
108.27 331.493 108.428 331.42 108.596 331.42 cv
108.784 331.451 li
108.995 331.535 109.131 331.755 109.11 331.986 cv
109.089 332.302 109.1 332.596 109.152 332.901 cv
109.226 333.384 109.446 333.773 109.656 334.14 cv
cp
f
109.729 353.153 mo
109.846 353.342 109.814 353.584 109.667 353.752 cv
109.562 353.857 109.415 353.921 109.278 353.921 cv
109.142 353.9 li
109.131 353.889 li
109.047 353.71 109.058 353.511 109.173 353.353 cv
109.299 353.174 109.52 353.101 109.729 353.153 cv
cp
f
368.831 44.961 mo
369.442 47.4674 li
369.208 47.6788 369.005 47.7843 368.854 47.7696 cv
368.604 47.7545 368.348 47.4068 368.076 47.0372 cv
367.827 46.7052 367.54 46.3277 367.17 46.0782 cv
366.672 45.754 366.257 45.671 365.902 45.8292 cv
365.306 46.086 365.178 46.8937 365.049 47.6715 cv
364.988 48.0563 364.921 48.5016 364.8 48.6676 cv
364.589 48.9698 364.445 49.0377 364.399 49.0299 cv
364.098 48.9923 363.683 47.8375 363.524 47.4068 cv
363.396 47.0523 363.29 46.7652 363.185 46.5919 cv
362.853 46.0934 362.521 45.9049 362.233 45.8673 cv
362.271 45.5426 li
362.437 45.5577 362.618 45.5729 362.8 45.5802 cv
363.191 45.5953 363.577 45.5426 363.863 45.4898 cv
365.947 45.1197 367.412 43.6705 367.722 43.338 cv
368.272 43.7457 368.68 44.3346 368.831 44.961 cv
cp
.494118 .780392 .27451 rgb
f
363.275 41.6398 mo
364.415 41.4356 365.517 41.753 366.121 41.9869 cv
365.63 42.4171 364.709 43.0816 363.569 43.2853 cv
362.43 43.4815 361.327 43.172 360.724 42.9381 cv
361.214 42.5079 362.135 41.8434 363.275 41.6398 cv
cp
f
363.033 34.9513 mo
363.215 35.7438 363.479 37.5104 362.762 39.0577 cv
362.045 40.6129 360.52 41.5489 359.803 41.9264 cv
359.621 41.1339 359.357 39.3673 360.074 37.8121 cv
360.791 36.2648 362.316 35.3287 363.033 34.9513 cv
cp
f
362.271 45.5426 mo
362.233 45.8673 li
362.104 45.8522 361.984 45.8673 361.878 45.8898 cv
360.791 46.169 360.188 48.358 360.143 49.0148 cv
360.104 49.5133 360.149 49.9586 360.188 50.3966 cv
360.248 51.1363 360.309 51.7779 360.006 52.5177 cv
359.372 54.0353 358.64 53.9444 358.142 53.7481 cv
356.858 53.2501 356.239 50.7589 355.869 49.2716 cv
355.786 48.962 li
355.741 48.7584 355.703 48.4713 355.673 48.1617 cv
355.575 47.2862 355.432 46.0558 354.661 45.5426 cv
356.194 45.5426 357.628 44.9762 358.67 43.9723 cv
359.153 44.4703 360.24 45.3312 362.271 45.5426 cv
cp
f
353.317 45.3917 mo
352.382 45.6935 352.027 46.8409 351.785 47.6485 cv
351.694 47.9356 351.619 48.2071 351.528 48.3883 cv
351.287 48.8941 350.773 49.3775 350.374 49.2945 cv
350.012 49.2189 349.86 48.8565 349.664 48.3053 cv
349.626 48.1998 349.596 48.1017 349.559 48.0035 cv
349.46 47.7467 349.407 47.2335 349.362 46.7428 cv
349.241 45.5045 349.105 44.108 348.094 43.9269 cv
347.867 43.9117 li
347.369 43.9117 346.901 44.191 346.479 44.4405 cv
345.829 44.8253 345.505 44.9689 345.188 44.7423 cv
345.55 43.6778 346.637 42.8175 347.671 42.8175 cv
349.763 42.8175 li
350.494 44.108 351.801 45.044 353.317 45.3917 cv
cp
f
372.069 62.5304 mo
372.273 62.1148 372.312 61.6847 372.198 61.2242 cv
369.299 49.297 li
368.975 49.4552 368.649 49.5382 368.311 49.5382 cv
367.2 49.5382 366.566 48.693 366.151 48.1266 cv
366.061 48.6852 365.947 49.2516 365.63 49.712 cv
365.124 50.4293 364.521 50.7989 363.841 50.7989 cv
362.497 50.7989 361.878 49.4479 361.479 48.3834 cv
361.365 48.6852 361.289 48.9874 361.274 49.191 cv
361.252 49.5611 361.282 49.9234 361.319 50.3082 cv
361.388 51.1163 361.479 52.1124 361.01 53.2301 cv
360.188 55.2076 358.965 55.6227 358.081 55.6227 cv
357.711 55.6227 357.334 55.5475 356.949 55.3966 cv
354.851 54.5733 354.126 51.6671 353.65 49.7496 cv
353.574 49.44 li
353.491 49.131 353.454 48.7911 353.416 48.4361 cv
353.333 47.7418 353.265 47.3795 353.204 47.1983 cv
353.084 47.4396 352.918 47.9757 352.85 48.2096 cv
352.752 48.5343 352.646 48.8815 352.495 49.191 cv
352.05 50.1271 351.076 51.0709 349.898 51.0709 cv
349.755 51.0709 349.604 51.0558 349.46 51.0255 cv
348.132 50.754 347.717 49.5685 347.49 48.9269 cv
347.452 48.8063 347.43 48.7457 347.407 48.6852 cv
347.218 48.2096 347.165 47.6358 347.098 46.9718 cv
347.075 46.7149 347.029 46.2242 346.962 45.8619 cv
346.803 45.9527 li
346.297 46.2545 345.686 46.6168 344.938 46.6168 cv
344.742 46.6168 344.485 46.5943 344.206 46.4884 cv
340.628 61.2242 li
340.515 61.6847 340.553 62.1148 340.733 62.462 cv
341.231 64.0777 347.634 65.7311 356.413 65.7311 cv
365.185 65.7311 371.594 64.0777 372.069 62.5304 cv
cp
372.93 61.0504 mo
372.983 61.2848 373.013 61.5108 373.013 61.7374 cv
373.013 62.1227 372.93 62.485 372.764 62.8097 cv
372.032 65.2027 363.977 66.4859 356.413 66.4859 cv
348.841 66.4859 340.794 65.2027 340.039 62.7491 cv
339.798 62.296 339.737 61.6847 339.896 61.0504 cv
343.58 45.8546 li
343.609 45.7413 343.692 45.6432 343.806 45.5978 cv
343.919 45.5523 344.048 45.5602 344.146 45.628 cv
344.455 45.8243 344.75 45.8619 344.938 45.8619 cv
345.475 45.8619 345.942 45.5826 346.396 45.3185 cv
346.63 45.1749 346.886 45.024 347.09 44.9562 cv
347.271 44.8956 347.475 44.9864 347.551 45.1676 cv
347.709 45.5221 347.784 46.2169 347.853 46.8961 cv
347.905 47.5079 347.958 48.0284 348.109 48.4059 cv
348.185 48.6251 li
348.403 49.2438 348.705 50.1046 349.611 50.2857 cv
349.709 50.3082 349.8 50.316 349.898 50.316 cv
350.743 50.316 351.483 49.5611 351.815 48.8663 cv
351.937 48.61 352.034 48.2926 352.125 47.9908 cv
352.374 47.1754 352.631 46.3302 353.258 46.3302 cv
353.348 46.3375 li
353.854 46.3829 354.02 47.047 354.163 48.3307 cv
354.201 48.6852 354.239 48.9947 354.307 49.2589 cv
354.382 49.5685 li
354.82 51.3351 355.484 54.0148 357.229 54.6944 cv
358.526 55.2076 359.637 54.5733 360.315 52.943 cv
360.708 51.9918 360.633 51.169 360.564 50.3761 cv
360.527 49.9762 360.489 49.5685 360.52 49.1383 cv
360.558 48.5719 360.912 47.651 361.206 47.2135 cv
361.282 47.1002 361.418 47.0323 361.554 47.047 cv
361.689 47.0548 361.811 47.1451 361.863 47.2662 cv
361.908 47.3717 361.977 47.5528 362.037 47.7189 cv
362.067 47.7945 li
362.513 49.025 362.95 50.044 363.841 50.044 cv
364.264 50.044 364.656 49.7877 365.011 49.274 cv
365.253 48.9269 365.336 48.421 365.419 47.8854 cv
365.457 47.6891 365.502 47.4098 365.547 47.1905 cv
365.577 47.0699 365.668 46.964 365.789 46.9264 cv
365.909 46.881 366.045 46.9039 366.144 46.9791 cv
366.354 47.1378 366.566 47.4249 366.747 47.6661 cv
367.117 48.1647 367.578 48.7833 368.311 48.7833 cv
368.643 48.7833 368.975 48.6554 369.314 48.3985 cv
369.42 48.3155 369.556 48.3004 369.669 48.338 cv
369.79 48.3834 369.88 48.4815 369.91 48.61 cv
372.93 61.0504 li
cp
0 0 0 rgb
f
369.487 59.8653 mo
369.487 59.7901 li
369.487 59.586 369.307 59.4127 369.11 59.4127 cv
368.906 59.4127 368.732 59.586 368.732 59.7901 cv
368.732 59.8653 li
368.732 60.0694 368.906 60.2428 369.11 60.2428 cv
369.314 60.2428 369.487 60.0694 369.487 59.8653 cv
cp
370.242 59.7901 mo
370.242 59.8653 li
370.242 60.4918 369.737 60.9977 369.11 60.9977 cv
368.483 60.9977 367.978 60.4918 367.978 59.8653 cv
367.978 59.7901 li
367.978 59.1632 368.483 58.6573 369.11 58.6573 cv
369.737 58.6573 370.242 59.1632 370.242 59.7901 cv
cp
f
351.219 47.1451 mo
351.461 46.3375 351.815 45.19 352.752 44.8883 cv
351.234 44.5411 349.929 43.6051 349.196 42.3141 cv
347.105 42.3141 li
346.07 42.3141 344.983 43.1744 344.621 44.2389 cv
344.938 44.4654 345.263 44.3219 345.912 43.9371 cv
346.335 43.6881 346.803 43.4088 347.301 43.4088 cv
347.527 43.4239 li
348.539 43.6051 348.675 45.0016 348.796 46.2394 cv
348.841 46.7301 348.895 47.2433 348.992 47.5001 cv
349.03 47.5982 349.061 47.6964 349.098 47.8023 cv
349.294 48.3531 349.445 48.7154 349.808 48.7911 cv
350.208 48.8741 350.721 48.3907 350.963 47.8854 cv
351.053 47.7042 351.129 47.4322 351.219 47.1451 cv
cp
369.661 47.0021 mo
369.691 47.1227 369.654 47.2584 369.563 47.3565 cv
369.088 47.8321 368.665 48.0587 368.234 48.0211 cv
367.646 47.9835 367.269 47.4776 366.906 46.9869 cv
366.68 46.6847 366.453 46.3756 366.188 46.2091 cv
365.819 45.9679 365.676 45.9977 365.638 46.0128 cv
365.419 46.1109 365.306 46.8209 365.23 47.2887 cv
365.147 47.8023 365.071 48.2926 364.853 48.6022 cv
364.498 49.1007 364.12 49.3273 363.735 49.274 cv
362.98 49.1759 362.573 48.0587 362.248 47.1603 cv
362.15 46.881 362.045 46.6017 361.984 46.4962 cv
361.878 46.3375 361.682 46.0733 361.501 46.1188 cv
361.003 46.2472 360.376 47.7945 360.331 48.5572 cv
360.301 48.9947 360.338 49.4176 360.368 49.8253 cv
360.437 50.5953 360.512 51.3956 360.135 52.3014 cv
359.554 53.6979 358.791 54.1129 358.089 54.1129 cv
357.81 54.1129 357.538 54.045 357.296 53.9469 cv
355.65 53.3053 354.971 50.5802 354.571 48.9571 cv
354.495 48.6402 li
354.428 48.3907 354.39 48.0738 354.352 47.7418 cv
354.224 46.6017 354.065 45.6432 353.378 45.5753 cv
352.563 45.4923 352.276 46.2696 351.944 47.3644 cv
351.846 47.6813 351.755 47.9757 351.642 48.2096 cv
351.34 48.8439 350.563 49.712 349.656 49.5309 cv
348.849 49.3648 348.585 48.6022 348.389 48.0514 cv
348.351 47.9532 348.32 47.8624 348.29 47.7721 cv
348.146 47.4171 348.102 46.9039 348.041 46.3072 cv
347.966 45.4845 347.845 44.2467 347.399 44.171 cv
347.09 44.1105 346.705 44.3448 346.297 44.586 cv
345.641 44.9713 344.742 45.5074 343.919 44.6163 cv
343.829 44.526 343.799 44.3976 343.829 44.2691 cv
344.191 42.7745 345.663 41.5592 347.105 41.5592 cv
349.423 41.5592 li
349.566 41.5592 349.694 41.6344 349.763 41.7628 cv
350.532 43.2955 352.23 44.2843 354.096 44.2843 cv
355.567 44.2843 356.926 43.6881 357.84 42.6539 cv
357.923 42.5631 358.036 42.5104 358.156 42.5255 cv
358.277 42.5328 358.383 42.6007 358.443 42.6988 cv
358.481 42.7594 359.433 44.2013 362.264 44.3219 cv
362.58 44.3297 362.897 44.2916 363.169 44.2389 cv
365.215 43.8766 366.634 42.2838 366.649 42.2687 cv
366.808 42.0875 li
366.929 41.9591 367.133 41.9215 367.283 42.0196 cv
368.137 42.5255 368.778 43.3707 368.997 44.277 cv
369.661 47.0021 li
cp
354.096 45.0392 mo
354.865 45.5523 355.009 46.7828 355.106 47.6588 cv
355.137 47.9684 355.175 48.255 355.22 48.4591 cv
355.303 48.7682 li
355.673 50.2555 356.292 52.7467 357.575 53.2447 cv
358.073 53.441 358.806 53.5318 359.44 52.0143 cv
359.742 51.2745 359.682 50.6329 359.621 49.8932 cv
359.583 49.4552 359.538 49.0099 359.576 48.5118 cv
359.621 47.8551 360.226 45.6656 361.313 45.3863 cv
361.418 45.3639 361.539 45.3487 361.667 45.3639 cv
361.954 45.4015 362.286 45.5904 362.618 46.0885 cv
362.724 46.2623 362.829 46.5489 362.958 46.9039 cv
363.116 47.3341 363.531 48.4889 363.834 48.527 cv
363.879 48.5343 364.022 48.4664 364.233 48.1647 cv
364.354 47.9981 364.423 47.5528 364.482 47.1681 cv
364.611 46.3902 364.739 45.5826 365.336 45.3263 cv
365.69 45.1676 366.105 45.2506 366.604 45.5753 cv
366.974 45.8243 367.261 46.2018 367.51 46.5338 cv
367.781 46.9039 368.038 47.2511 368.287 47.2662 cv
368.438 47.2814 368.643 47.1754 368.876 46.964 cv
368.265 44.4581 li
368.114 43.8312 367.706 43.2423 367.155 42.8351 cv
366.846 43.1671 365.381 44.6163 363.298 44.9864 cv
363.011 45.0392 362.626 45.0919 362.233 45.0768 cv
362.052 45.0694 361.871 45.0543 361.705 45.0392 cv
359.674 44.8277 358.587 43.9674 358.104 43.4689 cv
357.063 44.4732 355.628 45.0392 354.096 45.0392 cv
cp
f
366.099 54.1959 mo
366.099 54.1129 li
366.099 53.9093 365.925 53.7355 365.721 53.7355 cv
365.517 53.7355 365.344 53.9093 365.344 54.1129 cv
365.344 54.1959 li
365.344 54.4 365.517 54.5733 365.721 54.5733 cv
365.925 54.5733 366.099 54.4 366.099 54.1959 cv
cp
366.854 54.1129 mo
366.854 54.1959 li
366.854 54.815 366.348 55.3282 365.721 55.3282 cv
365.094 55.3282 364.589 54.815 364.589 54.1959 cv
364.589 54.1129 li
364.589 53.4942 365.094 52.9806 365.721 52.9806 cv
366.348 52.9806 366.854 53.4942 366.854 54.1129 cv
cp
f
357.644 27.7897 mo
357.674 27.6612 357.674 27.6163 357.658 27.586 cv
357.591 27.4273 357.575 27.2989 357.568 27.1856 cv
357.53 27.1329 li
357.447 27.1481 li
357.19 27.2008 li
357.251 27.3141 357.304 27.4352 357.304 27.5934 cv
357.304 27.6915 li
357.356 27.8956 li
357.379 28.0314 357.349 28.152 357.326 28.2276 cv
357.342 28.2428 357.409 28.3258 357.432 28.4391 cv
357.455 28.6051 li
357.478 28.8541 li
357.613 28.839 li
357.704 28.7486 357.651 28.3482 357.636 28.2125 cv
357.621 28.0841 357.613 27.9938 357.628 27.9107 cv
357.644 27.7897 li
cp
357.907 39.5284 mo
357.907 39.4981 li
357.907 39.4679 li
357.893 37.8072 357.002 36.7203 355.462 36.4859 cv
355.205 36.4483 355.106 36.4786 354.934 36.5392 cv
354.798 36.5841 354.639 36.6373 354.397 36.6676 cv
354.292 36.6749 354.186 36.6446 354.11 36.5768 cv
354.096 36.5694 li
354.027 36.6295 353.944 36.6598 353.854 36.6598 cv
353.786 36.6524 li
353.582 36.607 li
353.378 36.5694 353.151 36.5162 352.94 36.5162 cv
352.842 36.5162 352.744 36.5314 352.653 36.5543 cv
351.038 36.9767 350.291 37.9127 350.291 39.506 cv
350.291 41.3326 351.997 42.8121 354.096 42.8121 cv
356.187 42.8121 357.893 41.3399 357.907 39.5284 cv
cp
362.195 38.5548 mo
362.912 37.0069 362.648 35.2408 362.467 34.4479 cv
361.75 34.8253 360.226 35.7613 359.508 37.3092 cv
358.791 38.8639 359.055 40.6305 359.236 41.4234 cv
359.953 41.046 361.479 40.1095 362.195 38.5548 cv
cp
365.555 41.4835 mo
364.951 41.2496 363.849 40.9327 362.709 41.1363 cv
361.569 41.3399 360.647 42.0045 360.157 42.4347 cv
360.761 42.6686 361.863 42.9781 363.003 42.7818 cv
364.143 42.5782 365.064 41.9137 365.555 41.4835 cv
cp
366.597 41.3023 mo
366.619 41.4156 366.581 41.5289 366.506 41.6119 cv
366.453 41.6798 365.102 43.1744 363.132 43.5221 cv
362.829 43.5821 362.527 43.6051 362.24 43.6051 cv
360.655 43.6051 359.372 42.9181 359.312 42.8878 cv
359.206 42.8273 359.138 42.7291 359.115 42.6158 cv
359.093 42.5025 359.131 42.3893 359.206 42.2989 cv
359.244 42.2613 li
359.131 42.3063 li
359.032 42.3517 358.919 42.3443 358.828 42.2989 cv
358.73 42.2613 358.662 42.1783 358.625 42.0802 cv
358.617 42.0348 358.474 41.5895 358.376 40.9249 cv
357.719 42.4649 356.051 43.567 354.096 43.567 cv
351.581 43.567 349.536 41.7477 349.536 39.506 cv
349.536 37.5733 350.518 36.3351 352.465 35.8219 cv
352.819 35.7237 353.182 35.7613 353.483 35.8219 cv
353.521 34.984 353.695 33.8287 354.239 32.4776 cv
354.269 32.4098 li
354.76 31.2545 355.537 30.0694 356.707 28.6881 cv
356.707 28.6578 li
356.662 28.5973 356.594 28.5069 356.571 28.3785 cv
356.541 28.2428 356.579 28.1144 356.594 28.0387 cv
356.587 27.9332 356.571 27.8878 356.563 27.8424 cv
356.549 27.6388 li
356.496 27.503 356.45 27.4049 356.436 27.2838 cv
356.421 27.1705 356.436 27.0577 356.466 26.9215 cv
356.496 26.8082 356.541 26.6725 356.729 26.5821 cv
356.926 26.4762 357.146 26.4386 357.318 26.4083 cv
357.401 26.3932 li
357.553 26.3629 357.688 26.3404 357.832 26.3629 cv
358.104 26.4234 358.247 26.6119 358.225 26.8688 cv
358.255 26.8839 358.308 26.9894 358.315 27.1329 cv
358.346 27.2765 li
358.459 27.5255 358.421 27.7442 358.391 27.9254 cv
358.368 28.0235 li
358.391 28.1295 li
358.429 28.4615 358.489 29.0201 358.149 29.3673 cv
358.036 29.4732 357.862 29.5939 357.575 29.609 cv
356.692 30.6734 355.968 31.7833 355.416 32.9005 cv
354.934 34.108 354.774 35.1275 354.744 35.8067 cv
354.94 35.7462 355.167 35.6861 355.575 35.7389 cv
357.002 35.9576 358.021 36.8258 358.443 38.1017 cv
358.534 37.7315 358.655 37.3619 358.821 36.9918 cv
359.908 34.6593 362.467 33.6026 362.573 33.5572 cv
362.671 33.5196 362.784 33.527 362.875 33.5646 cv
362.973 33.61 363.041 33.693 363.079 33.7911 cv
363.116 33.9044 363.962 36.5465 362.883 38.879 cv
362.55 39.5963 362.067 40.2003 361.569 40.6832 cv
361.878 40.5553 362.218 40.4571 362.58 40.3966 cv
364.551 40.0416 366.332 40.9928 366.408 41.0309 cv
366.506 41.0909 366.574 41.1891 366.597 41.3023 cv
cp
f
362.157 62.4698 mo
362.157 62.2662 361.984 62.0924 361.78 62.0924 cv
361.705 62.0924 li
361.501 62.0924 361.327 62.2662 361.327 62.4698 cv
361.327 62.6734 361.501 62.8473 361.705 62.8473 cv
361.78 62.8473 li
361.984 62.8473 362.157 62.6734 362.157 62.4698 cv
cp
361.78 61.3375 mo
362.407 61.3375 362.912 61.8434 362.912 62.4698 cv
362.912 63.089 362.407 63.6022 361.78 63.6022 cv
361.705 63.6022 li
361.078 63.6022 360.572 63.089 360.572 62.4698 cv
360.572 61.8434 361.078 61.3375 361.705 61.3375 cv
361.78 61.3375 li
cp
f
361.267 57.027 mo
361.267 56.9664 361.252 56.6568 360.912 56.6568 cv
360.58 56.6568 360.564 56.9664 360.564 57.027 cv
360.564 57.0948 360.58 57.4044 360.912 57.4044 cv
361.252 57.4044 361.267 57.0948 361.267 57.027 cv
cp
362.021 57.027 mo
362.021 57.3214 361.924 57.5934 361.75 57.797 cv
361.546 58.0309 361.252 58.1593 360.912 58.1593 cv
360.188 58.1593 359.81 57.5934 359.81 57.027 cv
359.81 56.7403 359.908 56.4684 360.082 56.2648 cv
360.285 56.0304 360.58 55.902 360.912 55.902 cv
361.645 55.902 362.021 56.4684 362.021 57.027 cv
cp
f
355.379 60.5748 mo
355.379 60.3712 355.205 60.1974 355.001 60.1974 cv
354.926 60.1974 li
354.722 60.1974 354.548 60.3712 354.548 60.5748 cv
354.548 60.7789 354.722 60.9523 354.926 60.9523 cv
355.001 60.9523 li
355.205 60.9523 355.379 60.7789 355.379 60.5748 cv
cp
355.001 59.4425 mo
355.628 59.4425 356.134 59.9562 356.134 60.5748 cv
356.134 61.2018 355.628 61.7071 355.001 61.7071 cv
354.926 61.7071 li
354.299 61.7071 353.793 61.2018 353.793 60.5748 cv
353.793 59.9562 354.299 59.4425 354.926 59.4425 cv
355.001 59.4425 li
cp
f
351.491 56.4005 mo
351.491 56.3399 351.476 56.0231 351.144 56.0231 cv
350.812 56.0231 350.789 56.3399 350.789 56.4005 cv
350.789 56.461 350.812 56.7779 351.144 56.7779 cv
351.476 56.7779 351.491 56.461 351.491 56.4005 cv
cp
351.144 55.2682 mo
351.868 55.2682 352.246 55.8419 352.246 56.4005 cv
352.246 56.9591 351.868 57.5328 351.144 57.5328 cv
350.419 57.5328 350.034 56.9591 350.034 56.4005 cv
350.034 55.8419 350.419 55.2682 351.144 55.2682 cv
cp
f
346.713 52.9356 mo
346.713 52.8522 li
346.713 52.6485 346.539 52.4747 346.335 52.4747 cv
346.131 52.4747 345.958 52.6485 345.958 52.8522 cv
345.958 52.9356 li
345.958 53.1393 346.131 53.3131 346.335 53.3131 cv
346.539 53.3131 346.713 53.1393 346.713 52.9356 cv
cp
347.468 52.8522 mo
347.468 52.9356 li
347.468 53.5543 346.962 54.068 346.335 54.068 cv
345.708 54.068 345.203 53.5543 345.203 52.9356 cv
345.203 52.8522 li
345.203 52.2335 345.708 51.7198 346.335 51.7198 cv
346.962 51.7198 347.468 52.2335 347.468 52.8522 cv
cp
f
346.003 59.4728 mo
346.003 59.3976 li
346.003 59.1935 345.829 59.0201 345.625 59.0201 cv
345.422 59.0201 345.248 59.1935 345.248 59.3976 cv
345.248 59.4728 li
345.248 59.6769 345.422 59.8502 345.625 59.8502 cv
345.829 59.8502 346.003 59.6769 346.003 59.4728 cv
cp
346.758 59.3976 mo
346.758 59.4728 li
346.758 60.0992 346.252 60.6051 345.625 60.6051 cv
344.999 60.6051 344.493 60.0992 344.493 59.4728 cv
344.493 59.3976 li
344.493 58.7706 344.999 58.2652 345.625 58.2652 cv
346.252 58.2652 346.758 58.7706 346.758 59.3976 cv
cp
f
161.053 165.489 mo
161.205 165.839 161.331 166.244 161.331 166.587 cv
161.331 167.063 161.124 167.396 161.07 167.432 cv
160.98 167.396 160.773 167.063 160.773 166.587 cv
160.773 166.244 160.899 165.839 161.053 165.489 cv
cp
.494118 .780392 .27451 rgb
f
169.627 155.682 mo
169.87 156.194 170.112 156.86 170.112 157.409 cv
170.112 158.138 169.762 158.624 169.627 158.624 cv
169.483 158.624 169.132 158.138 169.132 157.409 cv
169.132 156.833 169.384 156.168 169.627 155.682 cv
cp
f
165.542 161.314 mo
165.687 161.665 165.821 162.079 165.821 162.421 cv
165.821 162.898 165.614 163.221 165.551 163.257 cv
165.47 163.231 165.254 162.898 165.254 162.421 cv
165.254 162.079 165.389 161.665 165.542 161.314 cv
cp
f
161.781 155.655 mo
162.024 156.168 162.276 156.833 162.276 157.382 cv
162.276 158.111 161.925 158.597 161.781 158.597 cv
161.646 158.597 161.295 158.111 161.295 157.382 cv
161.295 156.816 161.547 156.15 161.781 155.655 cv
cp
f
157.696 161.341 mo
157.85 161.692 157.976 162.097 157.976 162.439 cv
157.976 162.924 157.769 163.248 157.715 163.284 cv
157.624 163.248 157.408 162.924 157.408 162.439 cv
157.408 162.097 157.544 161.692 157.696 161.341 cv
cp
f
153.639 165.489 mo
153.792 165.839 153.918 166.244 153.918 166.587 cv
153.918 167.036 153.737 167.36 153.639 167.423 cv
153.54 167.36 153.359 167.036 153.359 166.587 cv
153.359 166.244 153.485 165.839 153.639 165.489 cv
cp
f
176.96 153.432 mo
177.823 153.432 li
177.58 164.832 168.224 174.036 156.77 174.036 cv
145.308 174.036 135.95 164.832 135.716 153.432 cv
136.571 153.432 li
136.805 164.364 145.775 173.181 156.77 173.181 cv
167.756 173.181 176.726 164.364 176.96 153.432 cv
cp
f
153.432 155.682 mo
153.666 156.168 153.918 156.833 153.918 157.409 cv
153.918 158.138 153.566 158.624 153.432 158.624 cv
153.288 158.624 152.937 158.138 152.937 157.409 cv
152.937 156.833 153.198 156.168 153.432 155.682 cv
cp
f
148.601 161.341 mo
148.753 161.692 148.879 162.097 148.879 162.439 cv
148.879 162.924 148.672 163.248 148.618 163.284 cv
148.528 163.248 148.321 162.924 148.321 162.439 cv
148.321 162.097 148.447 161.692 148.601 161.341 cv
cp
f
144.102 155.682 mo
144.345 156.168 144.597 156.833 144.597 157.409 cv
144.597 158.138 144.245 158.624 144.11 158.624 cv
143.967 158.624 143.615 158.138 143.615 157.409 cv
143.615 156.833 143.867 156.168 144.102 155.682 cv
cp
f
177.688 153.108 mo
176.825 153.108 li
176.591 164.04 167.621 172.858 156.635 172.858 cv
145.641 172.858 136.67 164.04 136.437 153.108 cv
135.581 153.108 li
135.815 164.508 145.173 173.712 156.635 173.712 cv
168.089 173.712 177.446 164.508 177.688 153.108 cv
cp
178.139 152.209 mo
178.391 152.209 178.589 152.407 178.589 152.659 cv
178.589 164.76 168.736 174.612 156.635 174.612 cv
144.524 174.612 134.673 164.76 134.673 152.659 cv
134.673 152.407 134.87 152.209 135.122 152.209 cv
136.877 152.209 li
137.129 152.209 137.327 152.407 137.327 152.659 cv
137.327 163.302 145.991 171.958 156.635 171.958 cv
167.279 171.958 175.935 163.302 175.935 152.659 cv
175.935 152.407 176.132 152.209 176.384 152.209 cv
178.139 152.209 li
cp
0 0 0 rgb
f
173.433 153.108 mo
139.828 153.108 li
140.071 162.169 147.512 169.465 156.626 169.465 cv
165.749 169.465 173.19 162.169 173.433 153.108 cv
cp
173.892 152.209 mo
174.135 152.209 174.342 152.407 174.342 152.659 cv
174.342 162.421 166.397 170.365 156.635 170.365 cv
156.626 170.365 li
146.864 170.365 138.919 162.421 138.919 152.659 cv
138.919 152.407 139.126 152.209 139.369 152.209 cv
173.892 152.209 li
cp
f
169.979 157.085 mo
169.979 156.536 169.735 155.871 169.492 155.358 cv
169.249 155.843 168.997 156.509 168.997 157.085 cv
168.997 157.814 169.349 158.3 169.492 158.3 cv
169.627 158.3 169.979 157.814 169.979 157.085 cv
cp
170.878 157.085 mo
170.878 158.102 170.347 159.2 169.492 159.2 cv
168.629 159.2 168.098 158.102 168.098 157.085 cv
168.098 155.772 169.069 154.233 169.105 154.17 cv
169.195 154.044 169.339 153.963 169.492 153.963 cv
169.646 153.963 169.789 154.044 169.87 154.17 cv
169.906 154.233 170.878 155.772 170.878 157.085 cv
cp
f
165.687 162.097 mo
165.687 161.755 165.552 161.341 165.407 160.99 cv
165.255 161.341 165.119 161.755 165.119 162.097 cv
165.119 162.573 165.335 162.906 165.416 162.934 cv
165.479 162.898 165.687 162.573 165.687 162.097 cv
cp
166.586 162.097 mo
166.586 162.934 166.136 163.833 165.407 163.833 cv
164.67 163.833 164.22 162.934 164.22 162.097 cv
164.22 161.044 164.993 159.829 165.021 159.775 cv
165.11 159.64 165.255 159.568 165.407 159.568 cv
165.561 159.568 165.704 159.65 165.785 159.775 cv
165.813 159.829 166.586 161.044 166.586 162.097 cv
cp
f
162.142 157.058 mo
162.142 156.509 161.89 155.843 161.646 155.331 cv
161.413 155.826 161.161 156.491 161.161 157.058 cv
161.161 157.787 161.512 158.273 161.646 158.273 cv
161.79 158.273 162.142 157.787 162.142 157.058 cv
cp
163.041 157.058 mo
163.041 158.075 162.511 159.172 161.646 159.172 cv
160.792 159.172 160.261 158.075 160.261 157.058 cv
160.261 155.745 161.232 154.215 161.269 154.143 cv
161.439 153.891 161.862 153.891 162.024 154.143 cv
162.069 154.215 163.041 155.745 163.041 157.058 cv
cp
f
161.196 166.262 mo
161.196 165.921 161.07 165.516 160.918 165.165 cv
160.765 165.516 160.639 165.921 160.639 166.262 cv
160.639 166.739 160.846 167.072 160.936 167.108 cv
160.99 167.072 161.196 166.739 161.196 166.262 cv
cp
162.097 166.262 mo
162.097 167.099 161.646 168.008 160.918 168.008 cv
160.189 168.008 159.739 167.099 159.739 166.262 cv
159.739 165.21 160.504 163.995 160.54 163.941 cv
160.621 163.815 160.765 163.734 160.918 163.734 cv
161.07 163.734 161.215 163.815 161.296 163.941 cv
161.332 163.995 162.097 165.21 162.097 166.262 cv
cp
f
157.841 162.115 mo
157.841 161.773 157.715 161.368 157.562 161.017 cv
157.409 161.368 157.273 161.773 157.273 162.115 cv
157.273 162.601 157.49 162.924 157.58 162.961 cv
157.634 162.924 157.841 162.601 157.841 162.115 cv
cp
158.74 162.115 mo
158.74 162.951 158.291 163.86 157.562 163.86 cv
156.833 163.86 156.374 162.951 156.374 162.115 cv
156.374 161.071 157.147 159.847 157.184 159.802 cv
157.265 159.668 157.409 159.595 157.562 159.595 cv
157.715 159.595 157.858 159.668 157.939 159.802 cv
157.976 159.847 158.74 161.071 158.74 162.115 cv
cp
f
153.783 166.262 mo
153.783 165.921 153.657 165.516 153.504 165.165 cv
153.351 165.516 153.225 165.921 153.225 166.262 cv
153.225 166.712 153.405 167.036 153.504 167.099 cv
153.603 167.036 153.783 166.712 153.783 166.262 cv
cp
154.683 166.262 mo
154.683 167.099 154.232 168.008 153.504 168.008 cv
152.775 168.008 152.325 167.099 152.325 166.262 cv
152.325 165.21 153.09 163.995 153.126 163.941 cv
153.288 163.68 153.72 163.68 153.882 163.941 cv
153.918 163.995 154.683 165.21 154.683 166.262 cv
cp
f
153.783 157.085 mo
153.783 156.509 153.531 155.843 153.297 155.358 cv
153.063 155.843 152.802 156.509 152.802 157.085 cv
152.802 157.814 153.153 158.3 153.297 158.3 cv
153.432 158.3 153.783 157.814 153.783 157.085 cv
cp
154.683 157.085 mo
154.683 158.102 154.151 159.2 153.297 159.2 cv
152.434 159.2 151.902 158.102 151.902 157.085 cv
151.902 155.772 152.874 154.233 152.919 154.17 cv
153 154.044 153.145 153.963 153.297 153.963 cv
153.45 153.963 153.594 154.044 153.675 154.17 cv
153.711 154.233 154.683 155.772 154.683 157.085 cv
cp
f
148.744 162.115 mo
148.744 161.773 148.618 161.368 148.466 161.017 cv
148.313 161.368 148.187 161.773 148.187 162.115 cv
148.187 162.601 148.394 162.924 148.483 162.961 cv
148.537 162.924 148.744 162.601 148.744 162.115 cv
cp
149.645 162.115 mo
149.645 162.951 149.194 163.86 148.466 163.86 cv
147.736 163.86 147.287 162.951 147.287 162.115 cv
147.287 161.071 148.052 159.847 148.088 159.802 cv
148.25 159.542 148.682 159.542 148.844 159.802 cv
148.879 159.847 149.645 161.071 149.645 162.115 cv
cp
f
144.462 157.085 mo
144.462 156.509 144.21 155.843 143.967 155.358 cv
143.733 155.843 143.481 156.509 143.481 157.085 cv
143.481 157.814 143.832 158.3 143.976 158.3 cv
144.11 158.3 144.462 157.814 144.462 157.085 cv
cp
145.361 157.085 mo
145.361 158.102 144.831 159.2 143.976 159.2 cv
143.112 159.2 142.581 158.102 142.581 157.085 cv
142.581 155.772 143.553 154.233 143.589 154.17 cv
143.679 154.044 143.813 153.963 143.976 153.963 cv
144.129 153.963 144.272 154.044 144.354 154.17 cv
144.39 154.233 145.361 155.772 145.361 157.085 cv
cp
f
65.9219 211.193 mo
66.4346 211.877 66.4346 212.884 65.9307 214.18 cv
64.833 217.014 61.1533 217.491 58.4902 217.608 cv
56.7178 217.689 55.458 218.562 54.7383 219.236 cv
54.6934 218.283 54.7744 216.825 55.6104 215.763 cv
56.2852 214.9 57.374 214.441 58.832 214.405 cv
62.4668 214.297 63.9238 212.713 64.0596 211.382 cv
64.1133 210.905 64.0049 210.455 63.7627 210.086 cv
64.5723 210.23 65.4541 210.554 65.9219 211.193 cv
cp
.494118 .780392 .27451 rgb
f
60.0371 238.5 mo
60.1719 238.5 60.2803 238.608 60.2803 238.743 cv
60.2803 238.869 60.1719 238.977 60.0371 238.977 cv
28.4121 238.977 li
28.2861 238.977 28.1777 238.869 28.1777 238.743 cv
28.1777 238.608 28.2773 238.5 28.4121 238.5 cv
60.0371 238.5 li
cp
f
57.1943 210.518 mo
57.3115 211.157 56.7441 212.399 54.7646 213.82 cv
53.5234 214.711 52.9023 215.62 52.6504 216.465 cv
52.6504 216.366 52.6504 216.258 52.6592 216.159 cv
52.75 215.224 53.3789 214.324 54.54 213.496 cv
56.2139 212.299 56.915 211.256 57.1855 210.491 cv
57.1943 210.518 li
cp
f
65.2559 213.58 mo
65.7598 212.285 65.7598 211.277 65.2471 210.593 cv
64.7793 209.954 63.8975 209.63 63.0879 209.486 cv
63.3301 209.855 63.4385 210.305 63.3848 210.782 cv
63.249 212.113 61.792 213.697 58.1572 213.805 cv
56.6992 213.841 55.6104 214.3 54.9355 215.164 cv
54.0996 216.225 54.0186 217.683 54.0635 218.637 cv
54.7832 217.962 56.043 217.089 57.8154 217.008 cv
60.4785 216.891 64.1582 216.414 65.2559 213.58 cv
cp
65.9756 210.062 mo
66.6777 211.007 66.7129 212.302 66.0928 213.913 cv
64.6533 217.611 59.5332 217.836 57.8506 217.908 cv
55.458 218.016 54.1172 219.914 54.1084 219.932 cv
54.0273 220.049 53.8828 220.121 53.7393 220.121 cv
53.6494 220.112 li
53.4785 220.085 53.334 219.95 53.2988 219.77 cv
53.2715 219.644 52.6416 216.63 54.2256 214.615 cv
55.0801 213.526 56.3936 212.95 58.1299 212.905 cv
60.9912 212.824 62.3857 211.727 62.4932 210.683 cv
62.5566 210.062 62.1338 209.549 61.4141 209.369 cv
61.1982 209.324 61.0537 209.117 61.0723 208.893 cv
61.0898 208.677 61.2695 208.505 61.4863 208.488 cv
61.6211 208.479 64.6797 208.299 65.9756 210.062 cv
cp
0 0 0 rgb
f
62.6377 223.792 mo
62.7549 223.531 62.8174 223.036 62.4482 222.146 cv
61.7646 220.526 61.0361 220.769 60.793 220.85 cv
60.5859 220.922 60.3887 221.039 60.1719 221.201 cv
58.3281 222.623 56.1504 224.143 53.874 224.683 cv
53.7305 224.719 53.5859 224.674 53.4785 224.584 cv
52.9111 224.314 49.043 222.631 44.4717 224.386 cv
44.3555 224.422 li
44.2471 224.467 li
44.2021 224.485 li
43.4551 224.818 42.8076 225.286 42.2676 225.898 cv
42.1328 226.05 41.8896 226.095 41.71 225.987 cv
41.5205 225.879 41.4404 225.664 41.5029 225.457 cv
42.0967 223.648 43.8418 221.624 46.9102 221.138 cv
46.3252 220.886 45.7139 220.661 45.0928 220.472 cv
32.7666 231.071 li
34.6113 235.713 38.6602 236.037 45.0029 236.028 cv
50.041 236.02 52.9473 234.742 53.9736 232.034 cv
50.9951 234.733 46.9014 234.715 46.6943 234.715 cv
46.5322 234.706 46.3887 234.625 46.3076 234.481 cv
46.2266 234.337 46.2354 234.166 46.3164 234.031 cv
46.3887 233.914 46.5322 233.779 46.667 233.761 cv
47.1084 233.698 47.5225 233.59 47.9004 233.446 cv
47.9902 233.419 li
48.0264 233.41 li
48.1973 233.338 48.3682 233.257 48.5303 233.167 cv
52.8301 231.08 54.2607 227.265 54.4229 226.815 cv
54.4414 226.689 54.5127 226.572 54.6211 226.5 cv
56.6094 225.25 59.2275 224.755 61.5215 224.431 cv
61.6934 224.404 61.8369 224.359 61.9717 224.314 cv
62.3135 224.206 62.5293 224.035 62.6377 223.792 cv
cp
63.627 223.315 mo
63.627 223.63 63.5732 223.909 63.4561 224.161 cv
63.2402 224.638 62.8359 224.98 62.251 225.169 cv
62.0703 225.232 61.8906 225.286 61.6475 225.322 cv
59.4971 225.619 57.0771 226.077 55.251 227.175 cv
54.999 227.859 53.7842 230.873 50.5273 233.059 cv
51.8945 232.538 53.3701 231.656 54.4414 230.171 cv
54.5576 230.009 54.7744 229.946 54.9629 230.018 cv
55.1611 230.09 55.2773 230.279 55.251 230.486 cv
54.7832 234.814 51.4355 236.919 45.0117 236.928 cv
44.9131 236.928 44.8232 236.928 44.7334 236.928 cv
38.2012 236.928 33.7744 236.469 31.8125 231.089 cv
31.7412 230.918 31.7949 230.72 31.9385 230.594 cv
44.6875 219.627 li
44.8047 219.527 44.9668 219.491 45.1113 219.536 cv
46.4424 219.932 47.7109 220.454 48.8721 221.093 cv
49.0518 221.192 49.1416 221.408 49.0879 221.606 cv
49.0332 221.804 48.8535 221.957 48.6377 221.939 cv
46.2627 221.858 44.5889 222.703 43.5361 223.81 cv
43.7705 223.693 li
43.9229 223.63 li
44.0225 223.576 44.0674 223.567 44.1211 223.549 cv
49.0244 221.669 53.0645 223.387 53.8379 223.765 cv
55.8896 223.225 57.9053 221.813 59.6143 220.49 cv
59.9111 220.265 60.208 220.094 60.5049 219.995 cv
61.1621 219.779 62.4033 219.716 63.2764 221.795 cv
63.5107 222.361 63.627 222.865 63.627 223.315 cv
cp
f
59.6055 238.143 mo
59.6055 238.008 59.4971 237.9 59.3623 237.9 cv
27.7373 237.9 li
27.6025 237.9 27.5029 238.008 27.5029 238.143 cv
27.5029 238.269 27.6113 238.377 27.7373 238.377 cv
59.3623 238.377 li
59.4971 238.377 59.6055 238.269 59.6055 238.143 cv
cp
59.3623 237 mo
59.9922 237 60.5049 237.513 60.5049 238.143 cv
60.5049 238.764 59.9922 239.276 59.3623 239.276 cv
27.7373 239.276 li
27.1074 239.276 26.6035 238.764 26.6035 238.143 cv
26.6035 237.513 27.1074 237 27.7373 237 cv
59.3623 237 li
cp
f
54.0898 213.22 mo
56.0693 211.799 56.6367 210.557 56.5195 209.918 cv
56.5107 209.891 li
56.2402 210.656 55.5391 211.7 53.8652 212.897 cv
52.7041 213.724 52.0752 214.624 51.9844 215.56 cv
51.9756 215.658 51.9756 215.767 51.9756 215.865 cv
52.2275 215.02 52.8486 214.111 54.0898 213.22 cv
cp
57.4014 209.765 mo
57.626 210.971 56.582 212.536 54.6211 213.949 cv
53.3613 214.849 52.7227 215.82 52.7227 216.846 cv
52.7227 217.305 52.8486 217.764 53.1006 218.241 cv
53.208 218.439 53.1543 218.691 52.9658 218.816 cv
52.8848 218.879 52.7949 218.906 52.7041 218.906 cv
52.5879 218.906 52.4619 218.853 52.3809 218.763 cv
51.9395 218.295 50.9414 217.044 51.0938 215.47 cv
51.2109 214.264 51.9668 213.148 53.3438 212.168 cv
55.6016 210.548 55.7725 209.36 55.7725 209.037 cv
55.7725 208.893 55.8359 208.757 55.9521 208.677 cv
56.0605 208.596 56.2041 208.56 56.3398 208.596 cv
56.8975 208.749 57.3018 209.18 57.4014 209.765 cv
cp
f
26.9092 233.041 mo
49.3486 213.733 li
46.5508 210.665 42.5918 208.92 38.417 208.92 cv
35.8887 208.92 33.3965 209.567 31.2012 210.8 cv
30.9941 210.908 30.7422 210.854 30.6162 210.665 cv
30.4453 210.458 li
29.9141 209.837 29.1406 209.478 28.3398 209.478 cv
27.7188 209.478 27.1523 209.684 26.6934 210.08 cv
26.1807 210.521 25.8652 211.142 25.8203 211.826 cv
25.7578 212.564 26.001 213.283 26.4951 213.859 cv
26.6758 214.048 li
26.8467 214.21 26.8555 214.471 26.7207 214.651 cv
22.5098 220.067 22.6084 227.724 26.9092 233.041 cv
cp
50.3291 213.481 mo
50.4102 213.571 50.4463 213.688 50.4375 213.805 cv
50.4287 213.931 50.374 214.039 50.2842 214.12 cv
27.1436 234.022 li
27.0625 234.094 26.9541 234.13 26.8555 234.13 cv
26.7295 234.13 26.6035 234.076 26.5137 233.968 cv
21.7363 228.426 21.457 220.256 25.7754 214.399 cv
25.1553 213.652 24.8486 212.716 24.9209 211.763 cv
24.9932 210.836 25.4072 209.999 26.0996 209.405 cv
26.7207 208.866 27.5117 208.578 28.3398 208.578 cv
29.3926 208.578 30.3916 209.027 31.0928 209.828 cv
33.3428 208.641 35.8613 208.02 38.417 208.02 cv
43.0059 208.02 47.3516 210.008 50.3291 213.481 cv
cp
f
28.1777 211.816 mo
28.5918 211.466 29.0234 211.124 29.4912 210.809 cv
29.168 210.548 28.7813 210.413 28.3848 210.413 cv
27.9893 210.413 27.6113 210.557 27.3145 210.809 cv
26.6934 211.34 26.5762 212.249 26.9814 212.968 cv
27.3682 212.554 27.7637 212.168 28.1777 211.816 cv
cp
30.5264 210.584 mo
30.5889 210.692 30.625 210.836 30.6074 210.953 cv
30.5801 211.07 30.5264 211.196 30.4277 211.268 cv
29.833 211.646 29.2754 212.06 28.7627 212.501 cv
28.2588 212.941 27.7637 213.427 27.2959 213.958 cv
27.2148 214.048 27.0986 214.102 26.9727 214.111 cv
26.9629 214.111 li
26.8369 214.111 26.7207 214.057 26.6396 213.976 cv
26.5049 213.841 li
25.5508 212.725 25.6406 211.061 26.7295 210.125 cv
27.7734 209.226 29.5098 209.387 30.4365 210.467 cv
30.5264 210.584 li
cp
f
228.537 337.038 mo
228.429 337.146 li
226.467 339.107 li
226.575 338.918 226.639 338.693 226.639 338.468 cv
226.639 338.117 226.494 337.794 226.251 337.55 cv
226.009 337.298 225.676 337.164 225.334 337.164 cv
225.1 337.164 224.884 337.227 224.686 337.335 cv
226.755 335.274 li
226.647 335.463 226.584 335.688 226.584 335.913 cv
226.584 336.264 226.719 336.588 226.962 336.831 cv
227.394 337.263 228.042 337.326 228.537 337.038 cv
cp
.494118 .780392 .27451 rgb
f
225.973 339.602 mo
223.912 341.672 li
224.191 341.168 224.119 340.528 223.696 340.106 cv
223.444 339.845 223.111 339.719 222.778 339.719 cv
222.554 339.719 222.328 339.782 222.131 339.89 cv
224.2 337.83 li
224.083 338.027 224.029 338.253 224.029 338.468 cv
224.029 338.801 224.155 339.134 224.407 339.386 cv
224.83 339.809 225.478 339.881 225.973 339.602 cv
cp
f
223.417 342.157 mo
221.348 344.227 li
220.862 344.713 220.07 344.713 219.575 344.227 cv
219.09 343.732 219.09 342.94 219.575 342.445 cv
221.645 340.385 li
221.356 340.88 221.429 341.518 221.852 341.95 cv
222.274 342.373 222.922 342.436 223.417 342.157 cv
cp
f
247.691 318.224 mo
247.691 317.838 247.548 317.486 247.278 317.217 cv
246.738 316.677 245.803 316.677 245.263 317.217 cv
244.705 317.766 244.705 318.674 245.263 319.232 cv
245.542 319.511 245.901 319.646 246.271 319.646 cv
246.63 319.646 246.999 319.511 247.278 319.232 cv
247.548 318.962 247.691 318.602 247.691 318.224 cv
cp
249.455 318.134 mo
250.931 319.619 251.75 321.589 251.75 323.677 cv
251.75 325.773 250.931 327.734 249.455 329.219 cv
237.363 341.312 li
233.206 337.146 li
232.567 336.507 231.722 336.156 230.813 336.156 cv
230.103 336.156 229.428 336.381 228.852 336.786 cv
229.319 336.273 229.302 335.481 228.807 334.995 cv
228.384 334.564 227.745 334.501 227.241 334.779 cv
246.666 315.354 li
249.455 318.134 li
cp
f
222.607 340.937 mo
222.77 340.775 222.77 340.523 222.607 340.361 cv
222.535 340.289 222.428 340.244 222.328 340.244 cv
222.221 340.244 222.121 340.289 222.041 340.361 cv
221.888 340.523 221.888 340.775 222.041 340.937 cv
222.193 341.089 222.454 341.089 222.607 340.937 cv
cp
220.897 343.852 mo
222.968 341.782 li
222.473 342.061 221.824 341.998 221.401 341.575 cv
220.979 341.144 220.907 340.505 221.195 340.01 cv
219.125 342.07 li
218.64 342.565 218.64 343.357 219.125 343.852 cv
219.62 344.338 220.412 344.338 220.897 343.852 cv
cp
225.163 338.381 mo
225.324 338.219 225.324 337.967 225.163 337.805 cv
225.01 337.652 224.758 337.652 224.596 337.805 cv
224.523 337.886 224.479 337.985 224.479 338.093 cv
224.479 338.201 224.523 338.3 224.596 338.381 cv
224.758 338.534 225.01 338.534 225.163 338.381 cv
cp
223.462 341.297 mo
225.522 339.227 li
225.027 339.506 224.38 339.434 223.957 339.011 cv
223.705 338.759 223.579 338.426 223.579 338.093 cv
223.579 337.878 223.633 337.652 223.75 337.455 cv
221.681 339.515 li
221.879 339.407 222.104 339.344 222.328 339.344 cv
222.661 339.344 222.994 339.47 223.246 339.731 cv
223.669 340.154 223.741 340.793 223.462 341.297 cv
cp
227.727 335.826 mo
227.88 335.664 227.88 335.412 227.727 335.25 cv
227.564 335.097 227.313 335.097 227.151 335.25 cv
227.079 335.331 227.034 335.43 227.034 335.538 cv
227.034 335.646 227.079 335.745 227.151 335.826 cv
227.313 335.979 227.564 335.979 227.727 335.826 cv
cp
227.979 336.771 mo
228.087 336.663 li
227.592 336.951 226.944 336.888 226.513 336.456 cv
226.27 336.213 226.135 335.889 226.135 335.538 cv
226.135 335.313 226.197 335.089 226.306 334.9 cv
224.236 336.96 li
224.434 336.852 224.649 336.789 224.884 336.789 cv
225.226 336.789 225.559 336.924 225.802 337.176 cv
226.044 337.419 226.188 337.742 226.188 338.093 cv
226.188 338.318 226.125 338.543 226.018 338.732 cv
227.979 336.771 li
cp
251.3 323.302 mo
251.3 321.214 250.481 319.244 249.006 317.759 cv
246.217 314.979 li
226.791 334.404 li
227.295 334.126 227.934 334.189 228.356 334.62 cv
228.852 335.106 228.869 335.898 228.401 336.411 cv
228.978 336.006 229.652 335.781 230.363 335.781 cv
231.271 335.781 232.117 336.132 232.757 336.771 cv
236.913 340.937 li
249.006 328.844 li
250.481 327.359 251.3 325.398 251.3 323.302 cv
cp
249.636 317.13 mo
251.291 318.776 252.199 320.971 252.199 323.302 cv
252.199 325.641 251.291 327.827 249.636 329.483 cv
237.237 341.89 li
237.066 342.052 236.77 342.052 236.599 341.89 cv
232.117 337.41 li
231.155 336.438 229.58 336.438 228.617 337.41 cv
221.537 344.482 li
221.114 344.904 220.565 345.12 220.017 345.12 cv
219.458 345.12 218.909 344.904 218.486 344.482 cv
218.063 344.059 217.856 343.51 217.856 342.961 cv
217.856 342.412 218.063 341.863 218.486 341.441 cv
245.901 314.026 li
246.072 313.855 246.369 313.855 246.54 314.026 cv
249.636 317.13 li
cp
0 0 0 rgb
f
249.824 323.554 mo
235.717 337.662 li
236.913 338.867 li
247.971 327.81 li
249.113 326.667 249.771 325.146 249.824 323.554 cv
cp
250.679 322.456 mo
250.939 324.688 250.185 326.874 248.609 328.448 cv
237.237 339.821 li
237.147 339.902 237.03 339.947 236.913 339.947 cv
236.796 339.947 236.679 339.902 236.599 339.821 cv
234.763 337.985 li
234.583 337.805 234.583 337.518 234.763 337.347 cv
249.914 322.186 li
250.031 322.069 250.22 322.024 250.382 322.087 cv
250.544 322.141 250.661 322.285 250.679 322.456 cv
cp
f
246.343 317.85 mo
246.343 317.706 246.288 317.57 246.189 317.472 cv
246.091 317.373 245.955 317.318 245.82 317.318 cv
245.677 317.318 245.542 317.373 245.442 317.472 cv
245.244 317.678 245.244 318.011 245.442 318.218 cv
245.649 318.425 245.982 318.425 246.189 318.218 cv
246.288 318.119 246.343 317.984 246.343 317.85 cv
cp
246.828 316.842 mo
247.098 317.112 247.242 317.463 247.242 317.85 cv
247.242 318.227 247.098 318.587 246.828 318.857 cv
246.549 319.136 246.181 319.271 245.82 319.271 cv
245.451 319.271 245.092 319.136 244.813 318.857 cv
244.255 318.299 244.255 317.391 244.813 316.842 cv
245.353 316.302 246.288 316.302 246.828 316.842 cv
cp
f
301.101 352.306 mo
301.101 355.862 li
301.101 356.006 300.717 358.153 299.845 358.153 cv
299.691 358.153 299.471 358.086 299.279 357.779 cv
298.982 357.271 299.059 356.399 299.136 355.642 cv
299.164 355.383 299.184 355.134 299.193 354.942 cv
299.193 354.683 299.098 354.453 298.887 354.243 cv
298.302 353.649 296.902 353.246 295.417 353.246 cv
294.056 353.246 292.954 353.581 292.724 354.07 cv
292.666 354.194 292.676 354.424 292.695 354.664 cv
292.743 355.326 292.819 356.313 291.439 357.061 cv
290.691 357.463 290.759 357.904 290.94 358.651 cv
291.056 359.14 291.199 359.706 290.787 360.147 cv
290.404 360.559 289.771 360.837 289.216 360.837 cv
288.804 360.837 288.459 360.683 288.219 360.405 cv
287.902 360.041 287.797 359.476 287.902 358.738 cv
288.161 356.993 288.056 356.658 287.902 356.102 cv
287.854 355.958 287.816 355.805 287.769 355.623 cv
287.653 355.134 287.683 354.635 287.701 354.194 cv
287.721 353.754 287.739 353.332 287.596 353.15 cv
287.433 352.939 286.896 352.699 286.11 352.699 cv
285.401 352.699 284.51 352.91 284.136 353.495 cv
283.762 354.099 283.628 354.914 283.503 355.632 cv
283.379 356.399 283.273 357.003 282.919 357.329 cv
282.718 357.511 282.43 357.597 282.027 357.597 cv
281.759 357.597 281.48 357.568 281.213 357.53 cv
280.992 357.501 280.781 357.482 280.628 357.482 cv
280.522 357.482 li
280.465 357.971 280.551 358.69 280.638 359.447 cv
280.801 360.741 280.964 362.083 280.484 362.869 cv
280.273 363.223 279.832 363.463 279.382 363.463 cv
278.97 363.463 277.992 363.252 277.686 361.354 cv
277.312 359.025 277.666 352.364 277.686 352.086 cv
277.686 352.038 li
277.695 352 li
277.743 351.846 278.864 348.147 281.759 347.85 cv
284.424 347.572 285.746 346.901 285.909 346.699 cv
286.168 346.23 287.739 345.291 289.264 345.243 cv
289.437 345.243 289.801 345.166 290.222 345.08 cv
291.181 344.888 292.628 344.601 294.151 344.601 cv
298.694 344.601 301.101 347.265 301.101 352.306 cv
cp
.494118 .780392 .27451 rgb
f
298.704 382.133 mo
298.704 382.488 li
298.35 382.488 li
281.376 382.488 li
281.021 382.488 li
281.021 382.133 li
281.021 379.268 li
281.021 378.913 li
281.376 378.913 li
298.35 378.913 li
298.704 378.913 li
298.704 379.268 li
298.704 382.133 li
cp
f
297.985 377.297 mo
297.985 376.942 li
297.985 358.099 li
297.985 357.974 li
297.899 357.879 li
297.852 357.821 li
297.717 357.648 li
297.247 356.853 297.353 355.818 297.439 354.907 cv
297.449 354.792 li
297.458 354.687 297.468 354.591 297.478 354.495 cv
297.497 354.294 li
297.324 354.179 li
296.902 353.881 295.925 353.594 294.698 353.594 cv
293.95 353.594 293.452 353.709 293.222 353.776 cv
292.954 353.853 li
292.973 354.131 li
293.03 355.012 292.915 356.297 291.305 357.217 cv
291.075 357.351 li
291.133 357.61 li
291.161 357.715 li
291.171 357.773 li
291.305 358.329 291.563 359.354 290.787 360.179 cv
290.203 360.801 289.331 361.175 288.497 361.175 cv
287.807 361.175 287.184 360.907 286.762 360.409 cv
286.244 359.824 286.063 358.99 286.216 357.955 cv
286.427 356.488 286.379 356.211 286.235 355.732 cv
286.187 355.578 286.139 355.405 286.101 355.214 cv
285.947 354.591 285.977 353.997 285.995 353.469 cv
286.005 353.431 li
286.005 353.422 li
286.015 353.096 li
285.688 353.057 li
285.603 353.047 285.497 353.047 285.392 353.047 cv
284.922 353.047 284.49 353.172 284.337 353.287 cv
284.289 353.326 li
284.251 353.383 li
283.982 353.815 283.858 354.533 283.753 355.156 cv
283.608 356.038 283.465 356.862 282.861 357.418 cv
282.478 357.773 281.96 357.945 281.309 357.945 cv
281.213 357.945 li
280.81 357.936 li
280.858 358.339 li
280.887 358.568 li
280.896 358.693 li
281.078 360.15 281.261 361.664 280.608 362.747 cv
280.455 362.929 li
280.389 363.006 li
280.302 363.102 li
280.302 363.236 li
280.302 376.942 li
280.302 377.297 li
280.656 377.297 li
297.631 377.297 li
297.985 377.297 li
cp
297.985 381.849 mo
297.985 381.495 li
297.985 378.629 li
297.985 378.274 li
297.631 378.274 li
280.656 378.274 li
280.302 378.274 li
280.302 378.629 li
280.302 381.495 li
280.302 381.849 li
280.656 381.849 li
297.631 381.849 li
297.985 381.849 li
cp
300.382 355.223 mo
300.382 351.668 li
300.382 346.626 297.976 343.962 293.433 343.962 cv
291.909 343.962 290.462 344.249 289.503 344.441 cv
289.081 344.527 288.718 344.604 288.545 344.604 cv
287.021 344.651 285.449 345.591 285.19 346.061 cv
285.027 346.262 283.704 346.933 281.04 347.211 cv
278.146 347.508 277.024 351.208 276.977 351.361 cv
276.967 351.399 li
276.967 351.447 li
276.947 351.725 276.593 358.386 276.967 360.715 cv
277.273 362.613 278.251 362.824 278.663 362.824 cv
279.113 362.824 279.555 362.584 279.766 362.23 cv
280.244 361.444 280.082 360.102 279.919 358.808 cv
279.832 358.051 279.746 357.332 279.804 356.843 cv
279.909 356.843 li
280.063 356.843 280.273 356.862 280.494 356.891 cv
280.762 356.929 281.04 356.958 281.309 356.958 cv
281.711 356.958 281.998 356.872 282.2 356.69 cv
282.555 356.364 282.66 355.76 282.784 354.993 cv
282.909 354.275 283.043 353.46 283.417 352.856 cv
283.791 352.271 284.683 352.061 285.392 352.061 cv
286.178 352.061 286.714 352.3 286.877 352.511 cv
287.021 352.693 287.002 353.115 286.982 353.556 cv
286.963 353.997 286.935 354.495 287.05 354.984 cv
287.098 355.166 287.136 355.319 287.184 355.463 cv
287.337 356.019 287.442 356.354 287.184 358.099 cv
287.078 358.837 287.184 359.402 287.5 359.766 cv
287.739 360.045 288.085 360.198 288.497 360.198 cv
289.053 360.198 289.686 359.92 290.068 359.507 cv
290.48 359.067 290.337 358.501 290.222 358.012 cv
290.04 357.265 289.973 356.824 290.721 356.422 cv
292.101 355.674 292.024 354.687 291.976 354.026 cv
291.957 353.786 291.947 353.556 292.005 353.431 cv
292.234 352.943 293.337 352.607 294.698 352.607 cv
296.184 352.607 297.583 353.009 298.168 353.604 cv
298.379 353.815 298.475 354.045 298.475 354.303 cv
298.465 354.495 298.445 354.744 298.417 355.003 cv
298.34 355.76 298.264 356.632 298.561 357.14 cv
298.752 357.447 298.973 357.514 299.126 357.514 cv
299.998 357.514 300.382 355.367 300.382 355.223 cv
cp
305.759 370.214 mo
305.759 363.178 li
305.759 361.242 304.302 359.661 302.5 359.661 cv
299.317 359.661 li
298.963 359.661 li
298.963 360.016 li
298.963 373.386 li
298.963 373.741 li
299.317 373.741 li
302.5 373.741 li
304.302 373.741 305.759 372.159 305.759 370.214 cv
cp
307.628 362 mo
307.628 371.728 li
307.628 373.942 305.826 375.754 303.603 375.754 cv
299.317 375.754 li
298.963 375.754 li
298.963 376.108 li
298.963 378.629 li
298.963 382.827 li
279.324 382.827 li
279.324 378.629 li
279.324 364.118 li
279.324 363.715 li
278.922 363.763 li
278.797 363.782 li
278.663 363.801 li
277.6 363.801 276.344 363.035 275.999 360.869 cv
275.615 358.473 275.941 352.109 275.979 351.39 cv
275.989 351.236 li
276.037 351.083 li
276.525 349.415 278.107 346.521 280.944 346.233 cv
283.226 345.993 284.299 345.457 284.414 345.399 cv
284.48 345.37 li
284.52 345.322 li
285.209 344.527 286.887 343.674 288.516 343.626 cv
288.621 343.616 288.88 343.568 289.312 343.483 cv
290.309 343.281 291.813 342.984 293.433 342.984 cv
298.551 342.984 301.359 346.07 301.359 351.668 cv
301.369 355.204 li
301.359 355.214 301.244 356.469 300.688 357.438 cv
300.392 357.974 li
300.995 357.974 li
303.603 357.974 li
305.826 357.974 307.628 359.776 307.628 362 cv
cp
0 0 0 rgb
f
292.714 368.613 mo
293.174 368.613 293.558 368.987 293.558 369.457 cv
293.558 369.926 293.174 370.3 292.714 370.3 cv
292.244 370.3 291.861 369.926 291.861 369.457 cv
291.861 368.987 292.244 368.613 292.714 368.613 cv
cp
f
290.404 363.898 mo
290.73 363.898 290.989 364.156 290.989 364.482 cv
290.989 364.798 290.73 365.067 290.404 365.067 cv
290.088 365.067 289.829 364.798 289.829 364.482 cv
289.829 364.156 290.088 363.898 290.404 363.898 cv
cp
f
289.724 372.38 mo
290.098 372.38 290.404 372.687 290.404 373.06 cv
290.404 373.443 290.098 373.75 289.724 373.75 cv
289.34 373.75 289.033 373.443 289.033 373.06 cv
289.033 372.687 289.34 372.38 289.724 372.38 cv
cp
f
285.603 363.898 mo
285.919 363.898 286.178 364.156 286.178 364.482 cv
286.178 364.798 285.919 365.067 285.603 365.067 cv
285.276 365.067 285.018 364.798 285.018 364.482 cv
285.018 364.156 285.276 363.898 285.603 363.898 cv
cp
f
285.497 369.792 mo
285.813 369.792 286.072 370.051 286.072 370.367 cv
286.072 370.693 285.813 370.952 285.497 370.952 cv
285.171 370.952 284.912 370.693 284.912 370.367 cv
284.912 370.051 285.171 369.792 285.497 369.792 cv
cp
f
230.511 260.017 mo
225.707 264.489 225.396 269.604 225.446 271.289 cv
222.778 271.289 li
223.13 269.453 224.684 263.477 230.511 260.017 cv
cp
.494118 .780392 .27451 rgb
f
256.925 275.31 mo
254.699 276.544 li
216.862 276.544 li
214.626 275.31 li
256.925 275.31 li
cp
f
253.946 275.875 mo
256.173 274.641 li
213.873 274.641 li
216.109 275.875 li
253.946 275.875 li
cp
258.62 274.02 mo
258.67 274.24 258.569 274.471 258.369 274.581 cv
254.308 276.808 li
254.067 276.878 li
215.979 276.878 li
215.738 276.808 li
211.677 274.581 li
211.477 274.471 211.376 274.24 211.437 274.02 cv
211.486 273.799 211.688 273.638 211.918 273.638 cv
258.129 273.638 li
258.359 273.638 258.56 273.799 258.62 274.02 cv
cp
0 0 0 rgb
f
218.867 272.104 mo
251.179 272.104 li
250.948 264.663 245.593 258.255 238.272 256.761 cv
238.021 256.711 237.852 256.48 237.871 256.229 cv
237.881 256.129 237.881 256.039 237.881 255.939 cv
237.881 254.204 236.598 252.799 235.023 252.799 cv
233.448 252.799 232.165 254.204 232.165 255.939 cv
232.165 256.039 232.175 256.129 232.175 256.229 cv
232.205 256.48 232.024 256.711 231.784 256.761 cv
224.463 258.255 219.099 264.663 218.867 272.104 cv
cp
252.191 272.606 mo
252.191 272.877 251.971 273.107 251.69 273.107 cv
218.366 273.107 li
218.085 273.107 217.864 272.877 217.864 272.606 cv
217.864 264.623 223.431 257.653 231.162 255.868 cv
231.192 253.622 232.917 251.797 235.023 251.797 cv
237.139 251.797 238.854 253.622 238.884 255.868 cv
246.626 257.653 252.191 264.623 252.191 272.606 cv
cp
f
235.023 255.437 mo
235.575 255.437 236.146 255.467 236.728 255.527 cv
236.567 254.605 235.865 253.913 235.023 253.913 cv
234.19 253.913 233.489 254.605 233.318 255.527 cv
233.9 255.467 234.472 255.437 235.023 255.437 cv
cp
237.771 255.939 mo
237.761 256.089 li
237.741 256.219 237.671 256.37 237.561 256.45 cv
237.46 256.53 237.319 256.61 237.189 256.59 cv
235.715 256.39 234.341 256.39 232.867 256.59 cv
232.797 256.59 li
232.687 256.59 232.566 256.55 232.476 256.48 cv
232.376 256.39 232.306 256.259 232.296 256.119 cv
232.285 255.939 li
232.285 254.274 233.509 252.91 235.023 252.91 cv
236.537 252.91 237.771 254.274 237.771 255.939 cv
cp
f
224.694 270.62 mo
224.644 268.935 224.955 263.821 229.758 259.348 cv
223.932 262.808 222.377 268.785 222.026 270.62 cv
224.694 270.62 li
cp
233.94 256.991 mo
234.051 257.232 233.96 257.503 233.739 257.623 cv
224.744 262.999 225.707 270.981 225.717 271.061 cv
225.737 271.202 225.697 271.342 225.597 271.452 cv
225.506 271.563 225.366 271.623 225.226 271.623 cv
221.444 271.623 li
221.305 271.623 221.164 271.563 221.074 271.463 cv
220.974 271.352 220.934 271.212 220.943 271.071 cv
220.953 270.961 222.227 259.99 233.339 256.721 cv
233.589 256.641 233.84 256.761 233.94 256.991 cv
cp
f
112.927 206.758 mo
114.087 207.919 114.924 209.421 114.178 210.169 cv
113.871 210.474 113.412 210.528 112.828 210.33 cv
112.198 210.114 111.469 209.61 110.768 208.918 cv
109.948 208.09 107.924 205.697 106.134 203.573 cv
104.775 201.963 103.605 200.577 103.228 200.199 cv
103.012 199.975 102.598 199.525 102.094 198.967 cv
99.1064 195.656 98.1982 194.801 97.6494 194.801 cv
97.1182 194.801 96.4707 194.828 96.2188 194.837 cv
95.4268 194.405 91.126 190.131 87.1943 185.867 cv
87.0322 185.696 li
85.3145 183.833 80.7793 178.921 82.3447 177.13 cv
82.5693 177.175 83.2803 177.553 84.6211 178.894 cv
98.3242 192.597 li
98.8281 193.757 li
98.9541 194.324 99.917 195.314 102.984 198.085 cv
103.533 198.589 103.992 198.994 104.208 199.21 cv
104.586 199.587 105.98 200.766 107.591 202.125 cv
109.706 203.906 112.108 205.931 112.927 206.758 cv
cp
.494118 .780392 .27451 rgb
f
112.495 185.924 mo
118.604 179.77 li
118.514 179.796 li
113.305 185.015 li
113.125 185.195 112.882 185.294 112.63 185.294 cv
112.621 185.294 li
112.369 185.294 112.126 185.195 111.946 185.015 cv
111.613 184.673 111.577 184.151 111.856 183.774 cv
111.479 184.043 110.956 184.016 110.614 183.674 cv
110.281 183.341 110.245 182.819 110.516 182.441 cv
110.146 182.712 109.615 182.676 109.283 182.343 cv
108.914 181.974 108.914 181.362 109.283 180.993 cv
114.528 175.694 li
114.447 175.721 li
108.374 181.794 li
107.34 182.829 106.728 184.151 106.089 185.555 cv
105.324 187.237 104.451 189.136 102.679 190.908 cv
102.193 191.403 101.68 191.853 101.015 192.465 cv
100.52 192.905 li
100.735 193.14 101.015 193.419 101.356 193.742 cv
102.184 192.842 102.76 192.24 103.39 191.61 cv
105.153 189.846 107.061 188.974 108.734 188.209 cv
110.138 187.561 111.46 186.959 112.495 185.924 cv
cp
119.647 178.717 mo
119.773 178.843 119.81 179.023 119.756 179.185 cv
119.387 180.246 li
119.278 180.418 li
113.134 186.563 li
111.982 187.705 110.587 188.344 109.112 189.019 cv
107.42 189.793 105.675 190.593 104.02 192.249 cv
103.326 192.941 102.706 193.598 101.716 194.687 cv
101.635 194.777 101.519 194.831 101.401 194.84 cv
101.383 194.84 li
101.267 194.84 101.158 194.795 101.068 194.714 cv
100.349 194.03 99.8359 193.517 99.5391 193.175 cv
99.3857 192.986 99.3945 192.708 99.5742 192.546 cv
100.411 191.79 li
101.068 191.196 101.563 190.755 102.049 190.27 cv
103.704 188.614 104.496 186.868 105.27 185.186 cv
105.944 183.701 106.584 182.307 107.735 181.155 cv
113.881 175.01 li
114.052 174.911 li
115.113 174.542 li
115.275 174.479 115.455 174.524 115.572 174.641 cv
115.698 174.767 115.743 174.947 115.68 175.109 cv
115.311 176.171 li
115.203 176.341 li
109.922 181.632 li
109.993 181.704 li
115.284 176.422 li
115.437 176.315 li
116.463 175.919 li
116.625 175.847 116.822 175.883 116.948 176.018 cv
117.074 176.144 117.11 176.333 117.048 176.495 cv
116.643 177.52 li
116.544 177.673 li
111.253 182.963 li
111.334 183.045 li
116.615 177.754 li
116.769 177.655 li
117.794 177.25 li
117.965 177.178 118.154 177.223 118.28 177.349 cv
118.406 177.475 118.442 177.664 118.379 177.835 cv
117.975 178.852 li
117.875 179.005 li
112.585 184.295 li
112.63 184.394 li
117.956 179.086 li
118.127 178.978 li
119.18 178.609 li
119.342 178.555 119.53 178.6 119.647 178.717 cv
cp
0 0 0 rgb
f
113.503 209.568 mo
114.249 208.822 113.412 207.319 112.252 206.159 cv
111.434 205.331 109.031 203.306 106.916 201.525 cv
105.306 200.167 103.911 198.988 103.533 198.61 cv
103.317 198.394 102.858 197.989 102.31 197.485 cv
99.2422 194.714 98.2793 193.724 98.1533 193.157 cv
97.6494 191.997 li
83.9463 178.294 li
82.6055 176.953 81.8945 176.575 81.6699 176.53 cv
80.1045 178.321 84.6396 183.233 86.3574 185.096 cv
86.5195 185.267 li
90.4512 189.532 94.752 193.805 95.5439 194.237 cv
95.7959 194.228 96.4434 194.201 96.9746 194.201 cv
97.5234 194.201 98.4316 195.056 101.419 198.367 cv
101.923 198.925 102.337 199.375 102.553 199.6 cv
102.931 199.978 104.101 201.363 105.459 202.974 cv
107.249 205.097 109.273 207.49 110.093 208.318 cv
110.794 209.011 111.523 209.515 112.153 209.731 cv
112.737 209.928 113.196 209.875 113.503 209.568 cv
cp
112.891 205.52 mo
114.69 207.319 115.185 209.164 114.142 210.208 cv
113.781 210.567 113.322 210.747 112.801 210.747 cv
111.82 210.747 110.633 210.127 109.463 208.948 cv
108.608 208.102 106.574 205.691 104.775 203.558 cv
103.488 202.029 102.265 200.58 101.914 200.23 cv
101.689 200.013 101.267 199.537 100.753 198.97 cv
99.6738 197.773 97.4248 195.281 96.9111 195.092 cv
96.3174 195.101 95.4805 195.137 95.4805 195.137 cv
95.3457 195.128 li
94.1221 194.795 85.9346 185.969 85.8535 185.879 cv
85.7012 185.708 li
83.4424 183.26 78.7461 178.177 81.0947 175.829 cv
81.4453 175.469 82.2012 175.271 84.585 177.664 cv
98.3418 191.421 li
98.4414 191.556 li
99.0078 192.852 li
99.0352 192.986 li
99.2598 193.526 101.725 195.749 102.913 196.819 cv
103.479 197.332 103.947 197.755 104.172 197.98 cv
104.523 198.331 105.972 199.546 107.501 200.841 cv
109.625 202.631 112.045 204.674 112.891 205.52 cv
cp
f
97.6943 197.647 mo
97.1992 197.125 96.8037 196.738 96.5244 196.478 cv
95.9844 196.954 li
92.5117 200.049 88.9131 203.243 87.5098 204.656 cv
86.2949 205.862 85.251 206.941 84.6748 207.85 cv
83.9824 208.957 84.2168 209.434 84.54 209.757 cv
85.5303 210.747 87.2754 209.155 89.6416 206.788 cv
90.5322 205.898 92.0889 204.089 93.8975 202.002 cv
95.085 200.625 96.3809 199.123 97.6943 197.647 cv
cp
98.6299 197.332 mo
98.792 197.494 98.792 197.764 98.6387 197.935 cv
97.2441 199.509 95.8408 201.12 94.5811 202.587 cv
92.7637 204.692 91.1895 206.509 90.2715 207.427 cv
88.5264 209.173 86.7266 210.972 85.2148 210.972 cv
84.7471 210.972 84.3066 210.801 83.9014 210.397 cv
83.1279 209.623 83.1367 208.606 83.9189 207.364 cv
84.54 206.375 85.5752 205.313 86.8701 204.017 cv
88.3008 202.587 91.7383 199.527 95.3818 196.289 cv
96.2188 195.542 li
96.3809 195.398 96.624 195.389 96.7949 195.524 cv
97.1455 195.803 97.748 196.388 98.6299 197.332 cv
cp
f
336.317 399.377 mo
336.317 398.316 335.453 397.452 334.392 397.452 cv
333.339 397.452 332.476 398.316 332.476 399.377 cv
332.476 400.439 333.339 401.294 334.392 401.294 cv
335.453 401.294 336.317 400.439 336.317 399.377 cv
cp
369.814 395.094 mo
369.094 396.795 367.402 400.826 367.105 401.771 cv
367.079 401.879 367.079 401.986 367.105 402.094 cv
367.402 403.039 369.094 407.07 369.814 408.77 cv
366.242 408.581 361.689 406.08 359.188 404.532 cv
358.973 404.406 358.702 404.434 358.522 404.605 cv
355.535 407.484 351.604 410.417 345.135 410.453 cv
344.559 410.219 340.285 408.42 337.945 404.344 cv
337.847 404.172 337.667 404.074 337.478 404.074 cv
337.315 404.092 li
337.073 404.172 336.92 404.406 336.947 404.658 cv
336.956 404.784 337.189 407.295 338.836 409.67 cv
333.689 408.095 329.767 404.443 329.767 402.076 cv
329.767 400.322 333.753 396.291 339.043 394.519 cv
339.25 394.456 339.376 394.276 339.395 394.068 cv
339.673 393.412 341.347 390.065 346.601 389.795 cv
346.367 390.956 346.178 393.205 347.86 394.339 cv
348.05 394.438 li
351.819 395.598 355.635 397.911 357.946 399.692 cv
358.127 399.827 358.379 399.845 358.567 399.719 cv
360.7 398.351 365.864 395.31 369.814 395.094 cv
cp
.494118 .780392 .27451 rgb
f
366.431 401.171 mo
366.728 400.226 368.42 396.195 369.14 394.495 cv
365.189 394.711 360.025 397.752 357.893 399.119 cv
357.704 399.245 357.452 399.227 357.271 399.092 cv
354.96 397.311 351.145 394.999 347.375 393.838 cv
347.186 393.739 li
345.503 392.605 345.692 390.356 345.926 389.195 cv
340.672 389.465 338.998 392.812 338.72 393.469 cv
338.701 393.676 338.575 393.856 338.368 393.919 cv
333.078 395.691 329.092 399.722 329.092 401.477 cv
329.092 403.843 333.015 407.496 338.161 409.07 cv
336.515 406.695 336.281 404.185 336.272 404.059 cv
336.245 403.807 336.398 403.573 336.641 403.492 cv
336.803 403.474 li
336.992 403.474 337.172 403.573 337.271 403.744 cv
339.61 407.819 343.884 409.619 344.46 409.853 cv
350.929 409.817 354.86 406.884 357.848 404.005 cv
358.027 403.834 358.298 403.807 358.514 403.933 cv
361.015 405.48 365.567 407.982 369.14 408.171 cv
368.42 406.47 366.728 402.439 366.431 401.494 cv
366.404 401.386 366.404 401.278 366.431 401.171 cv
cp
370.408 393.658 mo
370.507 393.811 370.516 394 370.453 394.162 cv
370.426 394.215 368.023 399.875 367.52 401.333 cv
368.023 402.79 370.426 408.449 370.453 408.504 cv
370.516 408.665 370.507 408.854 370.408 408.998 cv
370.317 409.151 370.156 409.25 369.976 409.259 cv
366.179 409.448 361.168 406.812 358.298 405.067 cv
355.176 408.018 351.055 410.933 344.37 410.933 cv
344.145 410.933 340.789 409.655 338.09 406.677 cv
338.494 407.63 339.106 408.701 340.033 409.628 cv
340.195 409.799 340.24 410.06 340.123 410.267 cv
340.006 410.483 339.772 410.591 339.538 410.537 cv
333.501 409.268 328.013 404.949 328.013 401.477 cv
328.013 399.146 332.331 394.89 337.748 392.992 cv
338.197 391.957 340.294 388.097 346.619 388.097 cv
346.79 388.097 346.961 388.178 347.06 388.322 cv
347.159 388.458 347.186 388.637 347.132 388.808 cv
347.123 388.835 346.188 391.751 347.779 392.83 cv
352.296 394.243 356.165 396.915 357.632 398.012 cv
360.178 396.402 365.847 393.199 369.976 393.406 cv
370.156 393.415 370.317 393.514 370.408 393.658 cv
cp
0 0 0 rgb
f
351.766 383.878 mo
352.71 381.61 352.89 379.946 352.27 379.181 cv
352.08 378.947 351.828 378.812 351.576 378.732 cv
352.197 380.189 351.55 382.42 351.01 384.292 cv
350.775 385.084 351.055 385.785 351.46 386.334 cv
351.369 385.605 351.405 384.751 351.766 383.878 cv
cp
353.106 378.497 mo
354.015 379.622 353.897 381.566 352.764 384.292 cv
352.044 386.001 352.989 387.747 352.998 387.765 cv
353.124 387.971 353.079 388.241 352.908 388.403 cv
352.81 388.511 352.665 388.566 352.53 388.566 cv
352.261 388.493 li
352.135 388.422 349.192 386.685 349.966 384.022 cv
350.568 381.916 351.315 379.334 350.101 378.596 cv
349.903 378.48 349.804 378.263 349.849 378.039 cv
349.885 377.822 350.056 377.643 350.281 377.607 cv
350.353 377.589 352.116 377.274 353.106 378.497 cv
cp
f
344.522 380.864 mo
345.458 378.596 345.639 376.932 345.026 376.167 cv
344.838 375.933 344.586 375.798 344.334 375.726 cv
344.945 377.175 344.307 379.406 343.758 381.277 cv
343.533 382.078 343.812 382.78 344.217 383.329 cv
344.118 382.6 344.153 381.736 344.522 380.864 cv
cp
345.863 375.492 mo
346.771 376.608 346.655 378.551 345.513 381.277 cv
344.802 382.987 345.746 384.733 345.755 384.751 cv
345.872 384.958 345.836 385.227 345.665 385.389 cv
345.558 385.497 345.422 385.551 345.287 385.551 cv
345.188 385.551 345.099 385.524 345.018 385.479 cv
344.892 385.407 341.94 383.671 342.714 381.007 cv
343.326 378.902 344.073 376.32 342.85 375.582 cv
342.66 375.465 342.562 375.249 342.598 375.025 cv
342.643 374.809 342.813 374.629 343.029 374.592 cv
343.101 374.574 344.873 374.26 345.863 375.492 cv
cp
f
337.783 383.878 mo
338.729 381.61 338.908 379.946 338.287 379.181 cv
338.107 378.947 337.847 378.812 337.595 378.732 cv
338.216 380.189 337.567 382.411 337.028 384.292 cv
336.794 385.084 337.073 385.785 337.478 386.334 cv
337.388 385.605 337.424 384.751 337.783 383.878 cv
cp
339.124 378.497 mo
340.033 379.622 339.916 381.566 338.782 384.292 cv
338.063 386.001 339.007 387.747 339.017 387.765 cv
339.133 387.971 339.098 388.241 338.927 388.403 cv
338.818 388.511 338.684 388.566 338.549 388.566 cv
338.458 388.566 338.359 388.538 338.278 388.493 cv
338.152 388.422 335.21 386.685 335.984 384.022 cv
336.587 381.916 337.334 379.325 336.119 378.596 cv
335.921 378.48 335.822 378.263 335.858 378.039 cv
335.903 377.822 336.074 377.643 336.29 377.607 cv
336.371 377.589 338.135 377.274 339.124 378.497 cv
cp
f
334.563 398.777 mo
334.563 398.309 334.185 397.932 333.717 397.932 cv
333.258 397.932 332.88 398.309 332.88 398.777 cv
332.88 399.245 333.258 399.614 333.717 399.614 cv
334.185 399.614 334.563 399.245 334.563 398.777 cv
cp
333.717 396.852 mo
334.778 396.852 335.643 397.715 335.643 398.777 cv
335.643 399.839 334.778 400.694 333.717 400.694 cv
332.664 400.694 331.801 399.839 331.801 398.777 cv
331.801 397.715 332.664 396.852 333.717 396.852 cv
cp
f
236.723 390.304 mo
236.723 413.292 li
236.723 414.03 236.291 414.786 236.057 415.128 cv
228.445 415.128 li
228.211 414.776 227.779 414.03 227.779 413.292 cv
227.779 390.304 li
227.779 388.838 228.437 387.479 229.579 386.561 cv
230.164 386.093 li
230.73 385.643 231.055 384.978 231.055 384.249 cv
231.055 375.278 li
231.343 375.053 231.666 374.982 232.251 374.982 cv
232.836 374.982 233.16 375.053 233.447 375.278 cv
233.447 384.249 li
233.447 384.978 233.771 385.643 234.339 386.093 cv
234.923 386.57 li
236.066 387.479 236.723 388.838 236.723 390.304 cv
cp
.494118 .780392 .27451 rgb
f
241.5 398.609 mo
247.646 398.609 li
247.537 399.859 247.043 402.828 244.577 402.828 cv
242.104 402.828 241.608 399.859 241.5 398.609 cv
cp
f
248.438 397.046 mo
248.438 395.498 247.942 392.412 247.456 390.91 cv
247.088 390.748 245.711 390.496 243.902 390.496 cv
242.085 390.496 240.709 390.748 240.34 390.91 cv
239.854 392.412 239.359 395.498 239.359 397.046 cv
239.359 400.834 241.348 403.29 243.309 403.758 cv
243.552 403.812 243.723 404.037 243.723 404.28 cv
243.723 412 li
243.723 412.287 243.507 412.521 243.219 412.539 cv
241.104 412.674 240.195 413.331 240.195 413.529 cv
240.195 413.781 241.474 414.527 243.902 414.527 cv
246.332 414.527 247.601 413.781 247.601 413.529 cv
247.601 413.331 246.691 412.674 244.577 412.539 cv
244.289 412.521 244.073 412.287 244.073 412 cv
244.073 404.289 li
244.073 404.037 244.244 403.821 244.487 403.758 cv
246.449 403.299 248.438 400.843 248.438 397.046 cv
cp
248.438 390.433 mo
248.968 391.989 249.517 395.327 249.517 397.046 cv
249.517 401.149 247.385 403.911 245.153 404.685 cv
245.153 411.505 li
246.881 411.693 248.68 412.305 248.68 413.529 cv
248.68 414.96 246.197 415.608 243.902 415.608 cv
241.6 415.608 239.116 414.96 239.116 413.529 cv
239.116 412.305 240.915 411.693 242.643 411.505 cv
242.643 404.685 li
240.412 403.911 238.279 401.14 238.279 397.046 cv
238.279 395.327 238.828 391.989 239.359 390.433 cv
239.691 389.488 242.913 389.416 243.902 389.416 cv
244.884 389.416 248.104 389.488 248.438 390.433 cv
cp
0 0 0 rgb
f
246.971 398.008 mo
240.825 398.008 li
240.934 399.259 241.429 402.228 243.902 402.228 cv
246.368 402.228 246.862 399.259 246.971 398.008 cv
cp
247.537 396.929 mo
247.834 396.929 248.077 397.172 248.077 397.469 cv
248.077 399.637 247.195 403.308 243.902 403.308 cv
240.601 403.308 239.728 399.637 239.728 397.469 cv
239.728 397.172 239.962 396.929 240.268 396.929 cv
247.537 396.929 li
cp
f
236.048 412.692 mo
236.048 389.704 li
236.048 388.237 235.392 386.879 234.248 385.97 cv
233.664 385.493 li
233.097 385.044 232.772 384.378 232.772 383.649 cv
232.772 374.679 li
232.485 374.454 232.161 374.381 231.576 374.381 cv
230.991 374.381 230.668 374.454 230.38 374.679 cv
230.38 383.649 li
230.38 384.378 230.056 385.044 229.489 385.493 cv
228.904 385.961 li
227.762 386.879 227.104 388.237 227.104 389.704 cv
227.104 412.692 li
227.104 413.43 227.536 414.177 227.771 414.527 cv
235.382 414.527 li
235.616 414.186 236.048 413.43 236.048 412.692 cv
cp
237.128 389.704 mo
237.128 412.692 li
237.128 414.087 236.129 415.356 236.084 415.409 cv
235.985 415.535 235.823 415.608 235.661 415.608 cv
227.491 415.608 li
227.329 415.608 227.168 415.535 227.068 415.409 cv
227.023 415.356 226.025 414.087 226.025 412.692 cv
226.025 389.704 li
226.025 387.914 226.826 386.24 228.229 385.125 cv
228.814 384.657 li
229.12 384.405 229.3 384.045 229.3 383.649 cv
229.3 374.436 li
229.3 374.292 229.354 374.157 229.453 374.058 cv
230.083 373.428 230.758 373.302 231.576 373.302 cv
232.396 373.302 233.07 373.428 233.69 374.058 cv
233.799 374.157 233.853 374.292 233.853 374.436 cv
233.853 383.649 li
233.853 384.045 234.032 384.405 234.339 384.657 cv
234.923 385.125 li
236.327 386.24 237.128 387.914 237.128 389.704 cv
cp
f
426.081 347.38 mo
414.355 359.256 li
414.179 359.433 414.162 359.711 414.313 359.913 cv
416.03 362.228 416.89 365.089 416.737 367.977 cv
416.376 374.828 410.501 380.114 403.648 379.752 cv
396.797 379.399 391.512 373.524 391.873 366.672 cv
392.219 360.031 397.731 354.871 404.297 354.871 cv
404.516 354.871 404.734 354.88 404.953 354.888 cv
407.353 355.014 409.642 355.822 411.586 357.219 cv
411.788 357.371 412.066 357.346 412.234 357.169 cv
423.968 345.292 li
423.521 345.881 423.564 346.723 424.111 347.262 cv
424.397 347.54 424.784 347.691 425.172 347.691 cv
425.509 347.691 425.82 347.582 426.081 347.38 cv
cp
.494118 .780392 .27451 rgb
f
413.725 358.695 mo
425.449 346.818 li
425.188 347.021 424.877 347.13 424.54 347.13 cv
424.153 347.13 423.766 346.978 423.479 346.701 cv
422.933 346.162 422.891 345.32 423.337 344.731 cv
411.604 356.608 li
411.435 356.784 411.157 356.81 410.955 356.658 cv
409.011 355.261 406.721 354.453 404.322 354.327 cv
404.104 354.318 403.885 354.31 403.666 354.31 cv
397.101 354.31 391.587 359.469 391.242 366.111 cv
390.88 372.963 396.166 378.838 403.018 379.191 cv
409.869 379.553 415.744 374.267 416.106 367.416 cv
416.258 364.528 415.399 361.667 413.683 359.352 cv
413.53 359.15 413.548 358.872 413.725 358.695 cv
cp
426.442 344.394 mo
426.637 344.201 426.637 343.889 426.442 343.695 cv
426.358 343.611 426.241 343.561 426.123 343.552 cv
426.098 343.552 li
425.963 343.552 425.837 343.603 425.744 343.704 cv
424.187 345.287 li
423.993 345.48 423.993 345.792 424.187 345.985 cv
424.279 346.078 424.406 346.12 424.532 346.12 cv
424.667 346.12 424.793 346.069 424.886 345.977 cv
426.442 344.394 li
cp
428.598 344.032 mo
428.598 344.697 428.345 345.329 427.874 345.8 cv
414.743 359.099 li
416.435 361.54 417.268 364.495 417.116 367.466 cv
416.737 374.637 410.787 380.218 403.683 380.218 cv
403.447 380.218 403.211 380.218 402.967 380.201 cv
399.381 380.016 396.073 378.442 393.666 375.765 cv
391.268 373.097 390.047 369.646 390.231 366.052 cv
390.619 358.645 396.957 352.921 404.381 353.317 cv
406.822 353.443 409.171 354.234 411.19 355.589 cv
424.321 342.29 li
424.818 341.785 425.517 341.516 426.224 341.549 cv
426.838 341.583 427.419 341.836 427.849 342.273 cv
428.328 342.736 428.589 343.367 428.598 344.032 cv
cp
0 0 0 rgb
f
410.004 373.787 mo
411.183 372.735 412.049 371.43 412.571 369.983 cv
410.585 373.03 407.074 374.932 403.253 374.73 cv
399.44 374.528 396.149 372.28 394.491 369.048 cv
395.476 372.979 398.927 375.984 403.178 376.212 cv
405.703 376.338 408.127 375.479 410.004 373.787 cv
cp
414.111 365.993 mo
414.146 366.489 414.153 366.91 414.128 367.306 cv
413.985 370.101 412.756 372.668 410.678 374.545 cv
408.741 376.287 406.275 377.23 403.683 377.23 cv
403.497 377.23 403.313 377.23 403.127 377.213 cv
397.361 376.91 392.917 371.978 393.22 366.212 cv
393.236 365.808 393.287 365.395 393.371 364.907 cv
393.422 364.663 393.649 364.478 393.901 364.495 cv
394.154 364.511 394.356 364.705 394.373 364.966 cv
394.718 369.705 398.557 373.467 403.313 373.72 cv
408.068 373.972 412.269 370.622 413.109 365.943 cv
413.152 365.69 413.388 365.522 413.632 365.53 cv
413.884 365.538 414.086 365.74 414.111 365.993 cv
cp
f
306.495 85.109 mo
306.243 85.4059 305.946 85.6578 305.614 85.8556 cv
304.903 86.2696 303.418 86.8004 301.367 85.6759 cv
299.234 84.4972 297.408 83.9122 295.924 83.9122 cv
295.573 83.9122 295.249 83.9391 294.934 84.0113 cv
295.843 82.1217 298.056 80.8263 300.53 80.8263 cv
303.509 80.8263 306.027 82.6525 306.495 85.109 cv
cp
.494118 .780392 .27451 rgb
f
303.076 60.5016 mo
303.985 61.5899 304.939 63.2633 304.939 65.504 cv
304.939 66.9615 304.408 67.7711 303.851 68.6261 cv
303.167 69.6876 302.456 70.7672 303.031 72.8995 cv
302.294 72.1529 301.493 71.1002 301.367 69.9757 cv
301.277 69.1656 301.556 68.4371 302.204 67.7442 cv
304.318 65.4767 303.796 62.4806 303.076 60.5016 cv
cp
f
297.777 60.5104 mo
298.686 61.5992 299.631 63.2726 299.631 65.504 cv
299.631 66.9615 299.1 67.7711 298.542 68.6261 cv
297.858 69.6788 297.156 70.7672 297.732 72.8995 cv
296.994 72.1529 296.185 71.1002 296.059 69.9757 cv
295.978 69.1656 296.248 68.4371 296.896 67.7442 cv
299.01 65.4767 298.497 62.4986 297.777 60.5104 cv
cp
f
299.879 91.089 mo
302.38 91.089 304.549 89.8199 305.457 87.9488 cv
304.27 88.4977 302.264 88.9205 299.753 87.5348 cv
297.944 86.5362 296.388 86.0143 295.264 86.0143 cv
294.805 86.0143 294.418 86.1041 294.121 86.275 cv
294.03 86.3292 293.95 86.3922 293.878 86.4733 cv
294.147 89.0733 296.739 91.089 299.879 91.089 cv
cp
306.51 86.545 mo
306.672 86.6441 306.753 86.8331 306.717 87.0221 cv
306.15 89.901 303.271 91.9884 299.879 91.9884 cv
296.19 91.9884 293.158 89.5055 292.96 86.338 cv
292.951 86.2213 292.987 86.1134 293.059 86.0231 cv
293.239 85.8165 293.437 85.6363 293.662 85.5016 cv
295.012 84.7096 297.27 85.1324 300.185 86.7433 cv
301.292 87.3551 302.272 87.5616 303.1 87.5616 cv
304.18 87.5616 305.008 87.211 305.521 86.9049 cv
305.683 86.8063 305.844 86.6979 305.997 86.5812 cv
306.141 86.464 306.348 86.4464 306.51 86.545 cv
cp
f
318.363 83.4205 mo
318.426 81.9449 317.913 80.5953 316.914 79.6236 cv
316.023 78.7511 314.791 78.2648 313.486 78.2648 cv
313.352 78.2648 313.226 78.274 313.091 78.2828 cv
312.91 78.2648 li
287.124 78.2648 li
287.305 87.5231 292.937 94.9908 299.838 94.9908 cv
303.526 94.9552 306.981 92.8229 309.384 89.1246 cv
309.51 88.9357 309.753 88.8639 309.96 88.963 cv
312.173 90.0065 314.791 89.3136 316.546 87.5143 cv
317.652 86.3805 318.291 84.923 318.363 83.4205 cv
cp
319.271 83.1866 mo
319.271 83.2853 319.263 83.3756 319.263 83.4654 cv
319.182 85.1837 318.444 86.8483 317.185 88.1441 cv
315.268 90.1144 312.397 90.9151 309.933 89.9254 cv
307.368 93.6954 303.733 95.8546 299.909 95.8819 cv
299.9 95.8819 li
292.325 95.8819 286.225 87.775 286.225 77.815 cv
286.225 77.5631 286.423 77.3653 286.675 77.3653 cv
313.01 77.3653 li
313.117 77.3741 li
313.243 77.3653 313.352 77.3653 313.459 77.3653 cv
315.025 77.3653 316.474 77.9322 317.544 78.9757 cv
318.66 80.0646 319.271 81.5489 319.271 83.1866 cv
cp
0 0 0 rgb
f
316.042 83.5284 mo
316.087 82.6734 315.799 81.9 315.231 81.3512 cv
314.729 80.8561 314.035 80.5865 313.279 80.5865 cv
313.019 82.8805 312.434 85.0401 311.543 87.0191 cv
312.722 87.3522 314.035 86.9025 314.953 85.9669 cv
315.619 85.2828 316.006 84.4191 316.042 83.5284 cv
cp
315.861 80.712 mo
316.608 81.4322 316.995 82.4576 316.941 83.5733 cv
316.896 84.6803 316.42 85.7506 315.592 86.5963 cv
314.701 87.505 313.505 88.027 312.308 88.027 cv
311.777 88.027 311.246 87.9103 310.751 87.6852 cv
310.635 87.6402 310.554 87.5504 310.509 87.4332 cv
310.473 87.3165 310.473 87.1905 310.526 87.0821 cv
311.534 84.9679 312.173 82.6285 312.425 80.1275 cv
312.442 79.9205 312.613 79.7496 312.83 79.7316 cv
312.946 79.7135 li
313.055 79.6954 313.162 79.6866 313.271 79.6866 cv
314.27 79.6866 315.187 80.0465 315.861 80.712 cv
cp
f
312.119 96.7906 mo
287.529 96.7906 li
288.825 97.6451 292.721 99.1749 299.838 99.1749 cv
306.918 99.1656 310.796 97.672 312.119 96.7906 cv
cp
313.091 95.8907 mo
313.333 95.8907 313.54 96.0978 313.54 96.3404 cv
313.54 97.8609 308.223 100.066 299.909 100.074 cv
291.479 100.074 286.144 97.8609 286.144 96.3404 cv
286.144 96.0978 286.342 95.8907 286.594 95.8907 cv
313.091 95.8907 li
cp
f
304.939 85.256 mo
305.271 85.0577 305.568 84.8063 305.82 84.5089 cv
305.353 82.0528 302.834 80.2262 299.855 80.2262 cv
297.381 80.2262 295.168 81.5221 294.259 83.4112 cv
294.574 83.3395 294.898 83.3126 295.249 83.3126 cv
296.733 83.3126 298.56 83.8971 300.692 85.0758 cv
302.744 86.2008 304.229 85.6695 304.939 85.256 cv
cp
306.738 84.5631 mo
306.757 84.6803 306.729 84.797 306.657 84.8961 cv
306.315 85.3551 305.893 85.7325 305.397 86.0299 cv
304.903 86.3175 304.111 86.6593 303.086 86.6593 cv
302.275 86.6593 301.331 86.4527 300.261 85.8678 cv
297.354 84.2662 295.159 83.8253 293.72 84.5362 cv
293.566 84.6173 293.378 84.59 293.233 84.482 cv
293.099 84.3741 293.045 84.1944 293.08 84.0231 cv
293.773 81.3063 296.616 79.3268 299.855 79.3268 cv
303.355 79.3268 306.307 81.5851 306.738 84.5631 cv
cp
f
304.265 64.9039 mo
304.265 62.6637 303.311 60.9903 302.401 59.9015 cv
303.121 61.881 303.644 64.8771 301.529 67.1441 cv
300.881 67.837 300.603 68.566 300.692 69.3756 cv
300.818 70.5001 301.619 71.5528 302.356 72.2999 cv
301.781 70.1676 302.492 69.088 303.176 68.026 cv
303.733 67.1715 304.265 66.3614 304.265 64.9039 cv
cp
305.164 64.9039 mo
305.164 66.6315 304.507 67.6393 303.932 68.5211 cv
303.121 69.7623 302.482 70.7433 303.796 73.5865 cv
303.877 73.7755 303.832 73.9913 303.68 74.1173 cv
303.599 74.1891 303.49 74.2252 303.392 74.2252 cv
303.131 74.1441 li
303.005 74.0631 300.08 72.0211 299.802 69.4747 cv
299.685 68.4039 300.045 67.4142 300.872 66.5235 cv
303.787 63.4015 300.665 58.2999 300.639 58.2462 cv
300.521 58.0753 300.548 57.8409 300.701 57.6974 cv
300.846 57.544 301.079 57.5172 301.259 57.6344 cv
301.421 57.733 305.164 60.1446 305.164 64.9039 cv
cp
f
298.956 64.9039 mo
298.956 62.6725 298.011 60.9991 297.103 59.9107 cv
297.822 61.899 298.335 64.8771 296.221 67.1441 cv
295.573 67.837 295.303 68.566 295.384 69.3756 cv
295.51 70.5001 296.319 71.5528 297.058 72.2999 cv
296.481 70.1676 297.184 69.0787 297.867 68.026 cv
298.425 67.1715 298.956 66.3614 298.956 64.9039 cv
cp
299.855 64.9039 mo
299.855 66.6315 299.198 67.6393 298.623 68.5211 cv
297.813 69.7623 297.175 70.7433 298.488 73.5865 cv
298.578 73.7755 298.533 73.9913 298.371 74.1173 cv
298.29 74.1891 298.191 74.2252 298.083 74.2252 cv
297.831 74.1441 li
297.705 74.0631 294.772 72.0211 294.493 69.4747 cv
294.376 68.4039 294.736 67.4142 295.563 66.5235 cv
298.488 63.3927 295.356 58.2999 295.33 58.2462 cv
295.213 58.0753 295.24 57.8409 295.393 57.6974 cv
295.537 57.544 295.771 57.5172 295.951 57.6344 cv
296.112 57.733 299.855 60.1446 299.855 64.9039 cv
cp
f
179.023 198.245 mo
179.023 204.045 li
188.132 204.045 li
188.132 208.871 li
179.023 208.871 li
179.023 220.666 li
174.041 220.666 li
174.041 193.418 li
190.818 193.418 li
190.818 198.245 li
179.023 198.245 li
cp
f
174.541 220.166 mo
178.523 220.166 li
178.523 208.371 li
187.632 208.371 li
187.632 204.545 li
178.523 204.545 li
178.523 197.745 li
190.318 197.745 li
190.318 193.918 li
174.541 193.918 li
174.541 220.166 li
cp
179.523 221.166 mo
173.541 221.166 li
173.541 192.918 li
191.318 192.918 li
191.318 198.745 li
179.523 198.745 li
179.523 203.545 li
188.632 203.545 li
188.632 209.371 li
179.523 209.371 li
179.523 221.166 li
cp
f
199.071 207.042 mo
199.071 212.491 201.758 216.423 207.052 216.423 cv
212.345 216.423 215.031 212.491 215.031 207.042 cv
215.031 201.592 212.345 197.661 207.052 197.661 cv
201.758 197.661 199.071 201.592 199.071 207.042 cv
cp
193.622 207.042 mo
193.622 198.478 199.267 192.873 207.052 192.873 cv
214.836 192.873 220.48 198.478 220.48 207.042 cv
220.48 215.606 214.836 221.211 207.052 221.211 cv
199.267 221.211 193.622 215.606 193.622 207.042 cv
cp
f
207.052 198.161 mo
202.368 198.161 199.571 201.481 199.571 207.042 cv
199.571 212.603 202.368 215.923 207.052 215.923 cv
211.735 215.923 214.531 212.603 214.531 207.042 cv
214.531 201.481 211.735 198.161 207.052 198.161 cv
cp
207.052 216.923 mo
201.821 216.923 198.571 213.137 198.571 207.042 cv
198.571 200.947 201.821 197.161 207.052 197.161 cv
212.282 197.161 215.531 200.947 215.531 207.042 cv
215.531 213.137 212.282 216.923 207.052 216.923 cv
cp
207.052 193.373 mo
199.318 193.373 194.122 198.866 194.122 207.042 cv
194.122 215.217 199.318 220.711 207.052 220.711 cv
214.785 220.711 219.98 215.217 219.98 207.042 cv
219.98 198.866 214.785 193.373 207.052 193.373 cv
cp
207.052 221.711 mo
198.851 221.711 193.122 215.678 193.122 207.042 cv
193.122 198.405 198.851 192.373 207.052 192.373 cv
215.253 192.373 220.98 198.405 220.98 207.042 cv
220.98 215.678 215.253 221.711 207.052 221.711 cv
cp
f
229.628 207.042 mo
229.628 212.491 232.314 216.423 237.608 216.423 cv
242.901 216.423 245.588 212.491 245.588 207.042 cv
245.588 201.592 242.901 197.661 237.608 197.661 cv
232.314 197.661 229.628 201.592 229.628 207.042 cv
cp
224.179 207.042 mo
224.179 198.478 229.823 192.873 237.608 192.873 cv
245.393 192.873 251.037 198.478 251.037 207.042 cv
251.037 215.606 245.393 221.211 237.608 221.211 cv
229.823 221.211 224.179 215.606 224.179 207.042 cv
cp
f
237.608 198.161 mo
232.925 198.161 230.128 201.481 230.128 207.042 cv
230.128 212.603 232.925 215.923 237.608 215.923 cv
242.292 215.923 245.088 212.603 245.088 207.042 cv
245.088 201.481 242.292 198.161 237.608 198.161 cv
cp
237.608 216.923 mo
232.378 216.923 229.128 213.137 229.128 207.042 cv
229.128 200.947 232.378 197.161 237.608 197.161 cv
242.839 197.161 246.088 200.947 246.088 207.042 cv
246.088 213.137 242.839 216.923 237.608 216.923 cv
cp
237.608 193.373 mo
229.875 193.373 224.679 198.866 224.679 207.042 cv
224.679 215.217 229.875 220.711 237.608 220.711 cv
245.342 220.711 250.537 215.217 250.537 207.042 cv
250.537 198.866 245.342 193.373 237.608 193.373 cv
cp
237.608 221.711 mo
229.407 221.711 223.679 215.678 223.679 207.042 cv
223.679 198.405 229.407 192.373 237.608 192.373 cv
245.81 192.373 251.537 198.405 251.537 207.042 cv
251.537 215.678 245.81 221.711 237.608 221.711 cv
cp
f
261.354 198.206 mo
261.354 215.878 li
266.569 215.878 li
271.863 215.878 274.549 212.491 274.549 207.042 cv
274.549 201.592 271.863 198.206 266.569 198.206 cv
261.354 198.206 li
cp
256.371 220.666 mo
256.371 193.418 li
266.569 193.418 li
274.354 193.418 279.999 198.478 279.999 207.042 cv
279.999 215.606 274.354 220.666 266.569 220.666 cv
256.371 220.666 li
cp
f
261.854 215.378 mo
266.569 215.378 li
271.393 215.378 274.049 212.418 274.049 207.042 cv
274.049 201.666 271.393 198.706 266.569 198.706 cv
261.854 198.706 li
261.854 215.378 li
cp
266.569 216.378 mo
260.854 216.378 li
260.854 197.706 li
266.569 197.706 li
271.958 197.706 275.049 201.108 275.049 207.042 cv
275.049 212.975 271.958 216.378 266.569 216.378 cv
cp
256.871 220.166 mo
266.569 220.166 li
274.424 220.166 279.499 215.014 279.499 207.042 cv
279.499 199.069 274.424 193.918 266.569 193.918 cv
256.871 193.918 li
256.871 220.166 li
cp
266.569 221.166 mo
255.871 221.166 li
255.871 192.918 li
266.569 192.918 li
274.901 192.918 280.499 198.594 280.499 207.042 cv
280.499 215.49 274.901 221.166 266.569 221.166 cv
cp
f
173.248 236.734 mo
173.248 227.452 li
174.945 227.452 li
174.945 236.734 li
173.248 236.734 li
cp
.960784 .466667 .345098 rgb
f
177.227 232.093 mo
177.227 229.176 179.149 227.266 181.802 227.266 cv
182.77 227.266 183.764 227.479 184.44 227.81 cv
184.255 229.428 li
183.485 229.123 182.77 228.898 181.802 228.898 cv
179.998 228.898 179.083 230.236 179.083 232.093 cv
179.083 233.949 179.998 235.289 181.802 235.289 cv
182.77 235.289 183.485 235.063 184.255 234.758 cv
184.44 236.376 li
183.764 236.708 182.77 236.92 181.802 236.92 cv
179.149 236.92 177.227 235.01 177.227 232.093 cv
cp
f
187.836 232.093 mo
187.836 233.949 188.751 235.289 190.555 235.289 cv
192.357 235.289 193.272 233.949 193.272 232.093 cv
193.272 230.236 192.357 228.898 190.555 228.898 cv
188.751 228.898 187.836 230.236 187.836 232.093 cv
cp
185.979 232.093 mo
185.979 229.176 187.902 227.266 190.555 227.266 cv
193.206 227.266 195.129 229.176 195.129 232.093 cv
195.129 235.01 193.206 236.92 190.555 236.92 cv
187.902 236.92 185.979 235.01 185.979 232.093 cv
cp
f
203.352 236.734 mo
199.108 230.369 li
199.108 236.734 li
197.411 236.734 li
197.411 227.452 li
199.081 227.452 li
203.046 233.445 li
203.046 227.452 li
204.743 227.452 li
204.743 236.734 li
203.352 236.734 li
cp
f
207.198 236.243 mo
207.396 234.307 li
207.9 234.798 208.922 235.289 210.314 235.289 cv
211.309 235.289 211.972 235.037 211.972 234.281 cv
211.972 233.339 210.938 233.008 209.811 232.624 cv
208.497 232.172 207.065 231.709 207.065 230.051 cv
207.065 228.818 207.914 227.266 210.42 227.266 cv
211.693 227.266 212.899 227.664 213.377 227.983 cv
213.205 229.719 li
212.21 229.176 211.375 228.884 210.486 228.884 cv
209.771 228.884 208.789 229.07 208.789 229.865 cv
208.789 230.608 209.651 230.9 210.659 231.205 cv
212.104 231.642 213.868 232.172 213.868 234.214 cv
213.868 235.275 213.403 236.92 210.274 236.92 cv
208.869 236.92 207.729 236.588 207.198 236.243 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.2
%%For: (Lisa Taiga) ()
%%Title: (1__9 copy.eps)
%%CreationDate: 1/30/2018 11:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2OuY42>a4O<p1B<jf'VlTQ(8['o\&s<eKqa-7tJ:k=UR7tn]qqGIL[C-n,S-e4%^?6OI&Sb=F8lA6\.b3@eq*qi"Y11eh
%NPAON2Y4QiF"K=\qj*j_U$)CET=]<><"@r3+(EfA,"C3f-aY,r7)D9O_sl\QUXZEbp!,k(;2X,qX[]_GC9M6XIMV7;kJ_N;9/6$%
%Y#ZK+1AP[iF:$jcp:QT[8i>I>ZtdQT`m7fkFAD&[f5:9i#iP.S%o2h5!'6!!*U"Tl7eF<J]6U_SJC8o_4s%`,Q$0'*lr4nrc\mUJ
%g[dGiUUXIfIfNrY);ldH!.W3,ij3+'g>Qm\1`$#C=j/"FV9I+06JD's%h18iO!XeCs2@;.OT/Hlq#;87s#9l3c8Z].[rZLb^c$"h
%i*.)NK0S,M"4l'(65HM`1kMi!ZW:mJ[]_KBpu-3tCK?@aQqtI1>$6p5HooQ,oP$N`IL9#q5I2P<:q(:')u'n"k_BFq^U_Sd8;g4?
%=!djNRX#M^bAg0G8$:B&Wr*[/_"DXH/-.s$<o_csHDL`1q#lWN`'/+(j!kJ,rd:VI,Z-9cNID4nj'q=:mXWqKWa2.HeP'Yu^V/j^
%p5;.FP[YsXH.e/Ba,N%-;;fBHiUaqqb=;!=Z(4S,&4A*0%,$t!P)K[X8-DLTiW2gL!D)q-<optl?X7)kQW`ip:ItG%X&@M8+5!!C
%rug%Kd.hN)s!tYgb]c*f?1soD-X4n+os(gKO0J$=H?lPg_c^[55P(O-FjR+&j';L^s+C:T,e?^d$is+01uO!Y*=;c9T,7EDiQ4Bn
%$\-rK27h&GqH;j>s"*6RNRKkn?`D'`rl5HGFYU3fY[X[)UX?Z+J*rT^U,EJ6@\pUpK':TngaQP$Oql>n6MO8[l82ZeL#pP%dr4^d
%Uk4=LF5/72J7JA`_F[*+Au-gLLMuFLnpf,9%os#uY6f13G5\VSg1VCX3F3V]#M!:sfM[>KBB_)E9+bc9P=3@!o.CbPOR4A'$W0Jj
%b")Zq:T9d4FtR0"M<j93U<`e<H]Hm#==RbU=Z^J"/+&e"B0m(nS1:@MI.Xc$M,OlQ<j>i1S@=C#Mb5F^DfseNRH$c3Wi-I']BZs&
%2u42:R;uCjENB)EcGuit<IrNO+BVA;blkMQ^)GK6r,J0/3@`Ft$u.$_-e44W:LG\nP./UL0Si(1s%8fV+%<Edqj#VBMMf<!<iL_T
%O?)T,3jI847]hM2D!'rUfSiC--0C=:l(,W$B!,>g.jJ+PB(8),^"J)cUk<!r6hPe<(&mmoq>Lb@60S&0V1]mYZ1W1VT@Pb*J(L]C
%pu;^?9WN3fmDNDRQ2r_lC)))88f*b-\J<^&_p1C"!s>\)Ld*pbO_smR6A*i>_kUS_4?S32lK?8Br[Ls\ifc0-L4$$FaRs#%j$K@N
%fZRda1:MIjX#;Vg-YtVdQ#[57&8>Cn=Ed7k0l.b&*r_aI(4N,giTKu<?re0m0&k%L74/6d&ok51q,&Sb/lHX5n<VPrGg^D;]lDQ$
%^^;lD4PGID;/I4MR(sc4l=DPc1h3H&G.c:]^N\^a.?,PFi/`dVHSfC.DXD#7;uA/rN1%cIii1CDSW7<_'t:g*1knIDNg$"d6s6@2
%1fO=QOXqs@s.n95Wa:b[M;mPmHl5)]HL/[-/a1K@@^=C?>=J&%;bW$;*LE9:27fnf]ZYre'OKZNrY&UFIF?A*V*<*+-MamdXtLKA
%[4*RuTe8:R$]7YJGMlmQ50L%P6b/$\jkP,02\5$4U"o[jc9.>,9ReIW,+UTfO^&7Z5*+dE)p+YYMD1dT(QD%6*m79@d@80so2olO
%b>!+1#>n5[r[Y,m>nkJA+#C0=[:7HI[$-N,8WS)NfnsuOZ1E=\4+*m#"N_(RP:;*6G,JT$s/OE`gf/9_M*<Q+:932Z/(Him"NK[0
%lk[5#G,8<e&*Ii9rT4gR<_ftbQ,gC"V;WTBnl-[jqNO`<-Jj&+cHb-`k6c'n@U4IT]M55gV`=Y%m^CDuV>-ugXJX*B,gjXYDH6>G
%n<@C=0"Lni(`n_af$BuQGiX*jPOOXc^a&.u]>O8Q)O#]q8g.][FgkOjD?&F.eDkin[e`3+)h[DNgM56mS`7'Pe"9<J^]=Hjr86]m
%qJV6Wq<o0\H7p!LPFe=Qkp@X'IU\g2`^-@tn*HrF67h#!2i`QkmYga\.\30!gCd&jP"rYcE6XWlFnPqbHY0-,k.0>$a.ujg'[+AT
%0OMkj$q)##BVjZr=99baK0.K[jCK5M^Ds#+Vr>H`_h0a/*f@'lkFr`9dVL=-e]KjeS)r7(kpLpsXB%B(?%0LIrhI<%['fQfRGR8n
%gGgSQH/(HAE?qI1gI\S^ZT0*dg5GbUTD=J+l^_V@C,Dsd<ZM,u`K%mt+(Xs1:4K,peX;j$3Mq:k*B$.&,fcWa_$Y6>)4AaliN*_U
%9[,2%Re`?CAVjts<'P%2bEZr`cTrb8gZr^`RMT(/0Z?pHJRQVnR^$!L?F+_a/'V(W\ac+-YNsKUb"S<OSHWMg@_ZK#XOSu<b;;rt
%TAieRWMX+P'k>7%pSV++Vt>.^MDNm`GJ!l3N<_6k<r-Fsp.t&Q9Zt:/jTQ!GSII:_G1sPEj1TOh'?b&=c'\FH'rNM!C2+/r)J1<[
%W]s1^:UYCCXOlLt;-]q&1=C!.omJSJrc0Hrd&t]%s!M;_D$lPOZW\p!q#&>,@WO#c*;p4BVXITPpiZ5!d][B?;MdB\7V(L[V\EjD
%WA3_H,*5H;b[W[rl<deJF.>.K^C>A:lqFj99/RNLY3K`h>#&YBNthDMWA.gqR/,995AAi;6;Z!3NEVbaHA"2Z\Z@aT.FL;s;Q3md
%?Eo]211VSiM_/_3F(T#Zj7?7D:uI=kPn`r;S13.d$fYRdA0pcd`FQASO,GI4cBjF='#*7kJhrBI/uDO6a\F(?O4P3n%k/3lS>P!R
%`u5a5`TiNDcP3Irdb6.Y;D,g+F'L9(@LC4UR"TLjK!/^^Ym(PX>[3hr4<o;UWE.IgJ$4kmZ7+9S[8[OsnkJdb"q%]=K_(BU'+pn&
%B'CR5)J5imI5/\g;,U-+UasHDT1#++-Nhg30UoY[.&H`BP_m\UVjX/k=aHtC/4p9$E_=WObeui:8i%go/4sWBcD%+CAptM,IMV&&
%=D_[@/.27`cD%*i+qq^Pc-N+XW^f3:M_[$\/_+*"\uO*A=d7>cSOH,fbd;'^YM>tB`\TKOk40EkA"7U#h8St`Sa`)o`:T>KR%B/E
%d9_d<#;]Ap0Xl7(TF*V*^GnS;NU,1if(tfB@a\u=ZEmhJAo?5'A(UXh?(9TV.BmS:jE,:kk&tV1A@i#,\\%R-Kbt&(DUg)fWm/5b
%\Q-7r<LZ'cF/q2&<c.9*c)k/!X(Lc*SW%!,Hd[Wo`=Vsr/_R,W!1^+;p!kIXX&4`tR&eV>N=n#,=W&m3Bgg8=@B'Ed#4Au`Z/=^B
%Xb4dREV5u.r-:&P4-,RPbE[B65-*1g^K$[]$.XumSO0=h#6sV+VKuRpAL'KMY3.R_6;E"bQZa%c\Vt-=Wf"?k1a4o_KJK`ao'<fc
%226;I+&kQEO7m,:RVcW'#=#=!r-&U!L]:Y45@eZoNm%2AOR#knR5EN/[U(B[(BWF_SBjq&d.l*1i_RV?ms'e@9]=BXm2r0hY=Z38
%fA6_$r(HU?>-lV23;d?3R%=)/p2$7R?qYN!Pu]"rZL;g90$0Ul6lK:`+9`:np661P\79WO;t,l<d4`P=k@o/XG17nUK/:N_\Q.m!
%eDa4AdlUR1j7SB#PcU%I,FGH6,B'OUi_1nde$p!0c+0D&oUFb1S+$C&pOBBiARb[`%#"p69pXu>^[qE]Z*?(]qnFr_R)aUSpPM4F
%^AiNn>g:Xp06rVg")M1W.6YfKT'q>E9I;n%1Z.epn+k9'I';qoUi:3$B4p%D][`suH='Gm@sq^C9A"^5eS=-bBGRY6o8=)$XH]ph
%B*o,q58]l6Ras56V6"4"^`JusOM[6+>A)mkV.D0652iqgdT9VGhD;MeV<2H_+e*,cjr(HDb9*Q_L$*0Ua\7oC+,lbgal[<CIh\f^
%S[[Ug^'7nQ]ESa`jh.kl=/AcR4):t.][ga2lU1ESkP;H(fXrn,3j\V=9!-hcp,lkPV^1E7UsMoR:0`L&V9GPL\78:_'Io?'fLH0V
%XCkH=4OD^sT$C;m4W'qscD\sN%hkL]BK+raKNtVu]/_RU;C=H]rjrK1CoTm>s!M;d0ZD`iH[C`GF8mWZ`61:51/GR,'/'I@S0qY*
%M3iMIAY+-$QX*:knAL7+_GL5CSp6[]#]uY_\PD-qHnND)SF`/9"O`D<Gc!NS1in?tY*G6=p_:oQh5%aSPgMHBdrZCq85gX=?>O(+
%GaS,4'5;]Y(Rl9-RPHs#H)*YZ3;MlM[F.&`<efbkkDS@')moG#3#PK6Ub@c"8k]o232SXM'>H/+1D6:J[;fN(BsoKF?"74(eX,FK
%Qc:>K^J18nUPiTlnRMPhc)faD:Jl7LIOfnW>_8ricCX$haRV#(RQ(ZGp\7-,%1amo>:$)e<f`*H?B):tG2,B#BZ9(t-@+<er[%+0
%42q:#bO!Md0JI2sF+_(.dk`HE#]1WV9jWMHMp'2%Kprh>h&Xa0)F&5#DIPXRdQ!+ooFmX&V-r:,:3Z,$+c_O&2[qi5.cjXm;?bo>
%O"gZtJ3V@i9MnJ>om)L8#4`UFGaRYK-8s;C2P$K'1$3b?8Xl,n*b1e^R--1N/<A1-VE."$lheo&?[VKW9XQ1,3gEHS=>ZS)c4KHS
%;GD:&2h=+Ek,`BVW\C?iG.c:]^N\^a.?-:BK0Qe<8W&/:oks/.WDi^FeVop;j'o$Q+uq\A-&KoN72XA9Maf#;2$a-:8>[*sM4L8A
%2u>C9BIK.Z4DQfhBtP0I)rIqZP9lF@XB"jI6N]:eJ!hH1S)Sje:*\!rckmi@o3+`'SW.osUmp<-AniWO0DT[[Z9^F7pc7cN::jM.
%6`)Xg3-3VG;Rt>ASk6H.U*ntpeR%^-f/unk>#9[;7&`)N-c9g+:Xc#@1ad>kr5_qX(+0!qQShtP^/D6-HQ;gLnQ`^a]?0g^-Zu:=
%(Z0eoCPK.bSP_,f5KLg)dm'DDEg%6]V,Nk/1cHImR7D>iB^VK_F"&)sGr.Gt/Bjm"a^\s)br)@_RS-Lg@7l0_'V*F#\QM+"2%Sm4
%iS6PcRtl(VE,LEJ\[RPfq7K^$A$@:DQ<RcR&C%%]@aa9sDmnZ9<:'N(n_C3/^lTbaR29BNJ#JS%!r\?G"#omq-0FkTkB/)JYcbn]
%R@>5WokOnFN$i%7KlDg^:;2$X/XA$@1*"eW(/'q<cdbu$h0.so2,,Dli/LCt;Ehr]20tLMT4q/t*>H/ce=rASDPi]#=^4Foi9d&&
%p(#eU%WuQqCtj'HQ^=G>M0QIKX&5eh][K7T]jH^ki-nq,]!G`Y%th&jAK4DKHTr>`J#Qf-3[tkC\T%rBEH.9'XAume3\-NUZtq&9
%k5jp6@O(P%Y#DYZV14kU`XA=k-\^t's')IF;e>tDk-ubh:JihqY/7qOVRm;mENqo)cPUEfgm%\8W0!(ET5K!lq'J0i7UTRSm8N8o
%c+:YGpC&D&1Uu"'[Su3,Ua`o'3T'hJfr2rjJu&BA-9-mES\7K(f`0(K.@N=e2s:t#IA1**OX$R;;sb:D>RLM"n&8)4dr9s&PUCs(
%VX;3UR88!5%`:"K"-LSL?7?ZYb@1;E#p.mDjro_U?]J".e*o&m"B9sXB7)fU>F!K&/P]="J#ZPj=Za-_5!_@-lXR?N3@Ip_L62#G
%EInYRHuYYb-Y:^Ba##p&(WV@k^_=I8?8E4cYDq#G2GR`dH2cISUcLXt@gf2I5&R_D;^i<bo`Y"_=!X6ro!1(If%\8<2q*"6?s]46
%67k4@=Q2PtIT)?UF%3pAd4pJ;%JhsP9@keDh7hk_f/23==qSiPW38!O<e@LG4MQcYaYjg=jm^N0M3".@&N<H*Redp?/$i%t@jOQ'
%1%A7!DD'*h(3X$`9D;l8WVob#A7F]Hem62ZS4VP)JkZm58jK86DlgbE9Pfqe_;%_s#-g"gUJI^ND,+&fgP"%Q78rYOcdFk-ZM*];
%DXCD,2jDOS`_Bl'P9S!'.@sT#2ehlE$1)ZV2K`K;;Hu<>HKfAubt'b6=IH^e9ok\/:8aJa\M9R#.EdeFE!V.WGieb2<NN[Ud_)A0
%JMKH2WK6AUBbTrX?Mb5R<$XXe=6&tLkGaM.ZU77>En0G;_YIR#Fah:"Ar^!M:_0`)#h%Pa*j\VMlXf`+'#?[5S\/Xc%tG#;(g7O@
%I!f8"Rt(7o5;/Jt[ugXWT\>*l0Br9VkYSG;3/o`i<k!L>H![Qgcf8'gAZH5f*;.>\s6E^j>-4=d"[eq(2]C5%n?Z?1)"?^DMj^[1
%&2975c4.!9UjpJ%YT>ESF&9<7@?s@^`W+TgnC+T0I`28PCNYZA+F"jTnQEQqUJChUSQs7d)taUIIGY:WGl_A@3dXi*264"!Z8+)l
%8(RF)aR_2gedF&K=FacV&Ghu@I,FPZ(Q1^G)t;%_,#XQD^#&_+Im&MC^&dR*N'l`Qk2U));uQmuGfWb>Q(]FE)B?^r5Me8R!Sb#7
%dJ^O@a7DXa<9X0r`4M4mX=1H;);g9eL?pW)\bSFE,Q!GU$@LG7l'KK!6@NZ%lZuu1;rH;jbNp2:Ch1)O#M=+2^kqibHCj<soW&??
%AB7"I=tmnaM]K=ac-&LcV&Nc+oE(K]JDj$smsQ\l&a"[Sp]1l2l[`$jFJ!u:c;9Q=k.l`>;9sZnJ%fR-%LoWOr?M[blIYpV%JN*V
%S^DUKSc-M,giS;QB;55)L;uo[8%rOr30.t8>*_t!=;GXPQJ#-nfOOtY*ddq]k.:R)i'hU75Q<CsGt;E17Y/go+_),93"',)K,L$d
%g$@G$G[SF7TG8#=9k4,@]oX9LX)Y$NF%-X7YLE)sO,#uoh.b8S,)d4qmsf?LP(38e56n#N,IR$,.Ro:[V]W/fSMVg^0)rCV%l^T6
%0)RZC@;,fCbfBcYgBXJB,7d!Q=[-pIL\g*4)3eglAsOI!<rpK#rlJ4@'pJ^0Ma-e%6W<hoh?]2P![%k8o'f#/oqER:M!MmOjWMI4
%"VCUN[SZitf@59R-/\boiQjXceARa#p_Ss-\ZYad'mOU]mE!TGrZZ(2+ju+;H2OXT4-guI1tXDg6_Af6Jq,MbJL&eCMkh4Y8/$I7
%nY`)fP2Z^'\'Tn\m#C0i\2qL1U&(s_?uV9Pl";&e.Op_t=S/k0]=o:(^S(50O_+:cYGCCA39&7HrY-%WnlfssG$`Mdh$<%7(pSPM
%^et)$7iOcDqW#uLg1d=>V#Hu(@eE!A[3.M9BU$*9\DAYK4"r40:EE+.g0"8c,%1HO,F^CFcbj765ZZ;.^I@9$[5':h^3am3''/K&
%_S(9mjKE$n]f%VJ!m(.lOh2j<2soZjVgbS[@i:gb!k`9CF;^,jk"%XtW65jji+]$JO"?@+F9K)r1IlHJ"`]`X;%rn0$H54OPUl?!
%G>HWr70Rnp;JAUhR3&s_>i-s2rfu=k+RWbG4RuY?[QBK&"IQqC("(QT&RuJZ6U;739Bs9c2b0X(QiGh=R4VEVTDb,Wq47X\hQBmO
%ZX_!V*+jn-f7ga*iF,um?8_?=Apm#42KLH/CHE(\NoFj8I44C"cO&RRocV+nI:jg0(NGo'gXHmn3Y;es/-rPDmu<pK+-lE\HM,c$
%JN4>?!FPXlj!qc<)]eE+p>`L)b?!_PoU[g\VZ3EJE@f1?nnn#HUK]BIL1^MphF."2(3bXIE4LE`B;0n2RG2;82b><:"u_#`d=,to
%Z&Hi@J?.1:B(h/Uo5=(\c5\[0h59t__]:o5;3WN<3i@sHX.5kbH89[+<;4Y#H@q$u@P_n5g6GjNWir*AE1dHAGF?W8K[>]r-Ze-Z
%W4$Q<h$tLdCDL,V0aEdiAK^qYAWT%#nV27NAQgQE+3DiS.oru6&m<[(f`blU7cKkb?pbO&NTdd2b'^UdNDArHf8Arg!HWX&^RN2_
%\JMMQX[jrVaGD<(.p9F(#nZa)V8Y$qQcXA3NQbh9h2,?^JqhKqV;2.1Lgb+/8m+\&s7e]/=1Yf`@13EIZ0e3[I?<g`!1cki#DkNU
%`U11!0lduPZQu;*LsP,TL$Be;VU:DD)Ct@"bAO3aZ8pnhQ=,mPdJ>B=*63PQ1>Cn_Vg)CE<]\Z%@D3C9C2P=Z>K-GG`V,E8\O!9g
%8u9Cs*obX4/NQ4gCBNVaBCX:KrNS+jC4r%]B8s[c<YL\)C8/+8-GF.*j"#VuV%1T0BsCj;nh4(Q;Q<cd+K$'ZrXF0o%Qq,+2"7cp
%=6$f<gh=DN-B*cNa$XrqbWgIFcb%^3FQ>,nG,t#HEtDlB\kQ_DSY7(&bY-&rNst%_$NWQpHds_-4D"6H^Z+Ma0#;'u/+kmNm^*n!
%HJ._E+d20d;-\NIm(bGEo5SQLd&'#<?Lnp"I\TlDU0&eI9oNSH!c2'*&Tb9ZeiYd=RG6K\<i],KhS^uc48A+A4nT7BMtKgk"/Ab1
%%mV*k*ZYgg4p/gkP9VbQ]U2?eXJRgRF++*0C4_[Mrebp9`h/p1[/G1rZ$mS=OXH2>+WeO8OXOL$%,3O/Xl3V[NE/%l&"(nk_\\;-
%o'b1:>A[_pYn-\r'=N=m0L-LYB)CLWfUmq;\/OKCC1q)2)6h"[+gW6FQbA+rC!*[I/QCmbU!AG,l>-_8,3Md-E[WQoW1-o%;'@F0
%#uTr$<[&P1oZJ/12hW#*R$n1``<L98H<HtSY$-_2XDGu'Q-5T[A^qaRMJ"D]1:Z=gF72e\J\#Tr'D$6$gnYAjIa,eu*Q:/=ei:o4
%nJig1IrC\Mn??!5C3;819tb3lYfa(kgn8_R=/32W/'V"Sqo]Rri5;3,dcZ8Wi^rn13o%epN&7#C%rfO[2GX#3B8qjYZkM:'T97r1
%Z!9S!;QQ4=qf8ON_S=gF8Hc(\?]c#Mn$+.liW=/f`qX0q=rSbSK8-[W?G"FQU3UXHSRoG#)!i_TCH8!/L[Fu=<bu'MnLGZ)pY,Q(
%Xn:WIFfJEa8ft(\\PQ`p=E)ubC:;eHf3l:m)R7s1a=%pGX.I]5^-3ZORIC$2&!Vo*c85uF"/S/XM0P/sM.V$D^\J@u`a!1!mcH<P
%gKQk"I"0,\Z=+cjiG>#aWj4GSi%[_S[IZ;Ta+..<I`:6r5^hC]YG:WFom4MhY[;DV9=d@Tp(]p30t[,,-le'$5nqLDN5a]!Cg2.m
%oGDMAWTO3&je[`e+^p!a!uR#0\N:.ne/3ne*mk<UQc8#`4(rX8Zdbq+naCF0HNYfLp&ZI\=Z.7up<?VrO][UKK?X_\<GJasAZO`6
%8ud&rp$Aa,':-QE]i!ip7UH?<WY4<[WR<<$)PZ6?#eZ(%]RHtL1s3R<8ZYq;U+9+n2R=3$:rC8W*4IH]FYbU+8BfU>H7DgU_g;Z+
%[nFt\l0!kWq5W46X`S<sAf=q'/.H7(Fe8Qt8n3JF7]9Ojg+nZ>0GNX9S^PX$X2j90Pi/:`qX4]Y;QV'")`>ct(A\6tb]uQ0aULu*
%rItiSPS[p@7ADmikn3q6_+1D$9nXk2Pf'j<"'6IWYuGXKV*O*J,gH/e/CNH2Pr#=&1PHTtW3%4d)LIU2S?#ZY.`SG0D*/R^D-5B&
%g)tOfdP@VB8.gNe;s@8b??QX=0=us2%9^WGG?([A<$IpA]qMSJGUXK8oGGRuS4P0AOd@)'_Ga=Li2-Psr$X["fU`j_=6UMkCc/@N
%9SCkMNa8Q,CQ5_P"np$6.#G)1AY9hM_^R^ioPV:gh\=^+r>jOEK\)QBB'7=933.8=%6JE6AKDD\>TI8(3E!2+eu2qiJ",hA4[(N.
%6;%MlK<_Gu`8r,+dgCh<=#U?,6ANiY?B%o/7l2BH"$=I5[<UdQ[BneJTJp`_d`u6!O16"FEnlQLP1Mjg?nu"^j9D<c=p+?k"5E5-
%+9g/F.%^01*.fTi?R'2EbU;A09-;u#;B[F&1"-K)K("DSHduktX@f7Qq-QJ06,JGk3[j?bCsga6OrGNFi+$?(6K:S,+*W'4WCr/o
%##:fglj2)qmd,JZ*hmY=^8:"RBF<W63D/X=%77N9rH13!;*ODf+GS;\WOu_Ns"_h!@.LMRM2s=$[F9H,;Dn"c=0f-.p!FVb+WVPf
%iZHn&!Db^<#>9?43&`R6gaMF%7=pPJ4(qSDC*3_L@bDGK0Y5_Je8h\:O%/GU?`siiV,K9$DC>C10e2K55:FJ;:5+HL,>o`g^.<3b
%FZXt4&I,##n;rEM3-$.%>Ep*:pfl2pFU&g,q8r4t]qNti%pcd%C#cB/S1um.K2p8;BTU\\X^35BdA'%tGFf7&-Kck$&0a&(*sUKd
%_:E8G54>.?;f7%j9/Q@b&8bFm.Or&S4]OK^&\SSl.Brt)mAE*\AK<m8I59rF&C8c.F>k6r935:>*[9[\@6Q8dp5;/qes/8STn@Hg
%]Y(9_mEp_R:=Dlfme>9o#<^b/d`)RZ]m:"9k?^N>65BfE;%Jfh&UV&i0;UKl4_s<Tjs"^jbXOSu6NqXhbBU.Q*%?Pa\91Iq6YRJd
%3B6:<lfDU!=OMs8XP2%8R]];!R+P8-iV\3>dqk&]e;WO4]R/1bp)_De$C<PL\T1>=/K6CcDr];*Q2$,>H]BbpC1P*fbB,ArN!N!2
%+G4oGZ(:]1&_Ai+ia8Y'`Hh_Oi^N]=qSfChR:7-8aNLDF46ee(2?V5J&r*#qr`t-FcUKkBKNKK%+r@#&LK:VuSEP7';U8>-r4@pH
%N%\h:@7?h!r+A&",ZKXW(#&:3Au\<!h+p."#BL"`Jr=dk9=@*@pZ_q)\S>TdA^MR?;&=Q737AnJZnpP7-!lqa%UYg('3&^HR\R/#
%M()-513"<>qiG:,_;dlnl,l,2U)Woj>D!7Sj!tcEC2&9R@INKO:p3Z]7SVs$B8FPcQ_LTkPFjG->TF5[j&FXg0_m1;GV*,XA2R%3
%D%P1u.ei_H<59s#fmH5CZFQa4]tMcC5WDuF!Y0G1a"Qn0>ZuWhEIY+cDY^8Qn)[/jZaF#L=?WkFHFe05H/\a'V3l,WnR"N6p2@-P
%^>=;1gjQiHs69OSbuV:fltkG&_n4-8Dd-8Sn?$ZDCu*cLqiZB3\\?j8Dml:k&##E9[Ja;]M=n6>5C`6=IrjG*O1$MWO%P+BpAT>E
%>PmOVcsT]&\[rc-f^0BeIEoGH<gIg7`dU"YGLX0*HK<uOmM+G<DtDkdpYS:nKer&Zks0!-K'4b1oBPA6h!nG=c1"b.][b>tl^']*
%2cnbeg/;ATDKf`%[sSD)d!4r*KrHMkI=<-rX..X`X(V6dcIPGRJL*eHlb,WAm=4"uIsh8J-NouXDgaYGdX^6CI4srPpMT(o_JaX=
%7k;(7]G'akjXrA'I9Tf'D3qn:$X4G8akD(/Y&eM1s'kfidcT-Zf/m2VpVEU`:N'UAPtK"gr2m93IC=XARqC6h@aM.1q79c*o!Fpj
%hL0d$V7#rpS(g0=pDk,Rgg#2PiBT3ug7-EX\U*LhD/&&+g;BTWBql:D&)1_lY#X1c9:)\QOXq6=[bnmA"o%'8X^dVt.pEOB0Zi\W
%`kol=S?E,%29s,:rO\P'HgA/uDD+L$f%hb@IIqGB$FUj[QIarX5H`_<[m(P^8+jL0dNee.D4HoQr`fD&*J`oWrc6Cn&H_g+]Pk($
%\"=HX(>&$BgfjR$_Ie2n_\]%6.+!oqqWFGCs&aTSZS$]2J%PZ<j)6MfJ*#2Hp\#Y!n2kFMdA-)?]C>TC6P+RUZ+a9<p>QJ)VWon_
%H^XV=1Ota?Wk.\&GC_>^*$SGM'$RtQ0:^C.KB[mPqB,WRV;-(LgJ["siNr"-`T$hXH2mO0X7[ioP=N1DMc(pHE2W=jGAK>h!kI7\
%qqLU;q8;p<YE-;1Pdp30V"Mp-VA<4=XXA/;hDYdS8)%Sn;P76!>^CL=m4FqVU^YLaT<P.NH2$.DS]t4$ijHDpr9\!_V9l9MI$h_T
%b=hY#oVHagPH:6@08GE\/s:fues85*$Tj%lb?IcU<VWh7<B-[Brb5k`mC;b#meCLogHV,iZY9i]SGdZ6>6m;[S+]!Lan6-DpFqJK
%(@F$r[k@Tr&)4#5qL_,iC+WZ[_8_r/#p0a:*;d@YPGa@MDLLX4%]\m%Cgld::_Zr\cY@^s^%O#Onk8uXcIU[tcsk<rb<&qig3^-$
%"6O#N?hHA7C>s\TJ)`oqamnbXSk_O,d#[s5@JB>1$uN[]7q:R]B<,qirVc-&/&?/IS_`G#Vbsh.k.^$sPI8)Ij(tdEY4uNg=$@\X
%MmrGPBYN'WeU'1#l,,q(ZKFk":Hpt,Xe("DS*%Lnn*WEmm@9DV\YH?($P+a,$Tjlog&3:ImeD(fI.PVQ??'U>I.[u<=^SJC5H,6/
%DD*qTfK8j*eTW_;h.XEBq>Hn$JJ=qajC\8Fa8>aA.lZnZ%]dhZ-Jkf_'/5.7h;Ie^5rSK(rD=T(0eBn(38$D(m_.E0s*i0)9?;a4
%KsTS508V"6E+e?En^[ju!X?.UK5,\04b&_@J-_KuQ,i[t!A(:`NU>ifdKU-@X1+b]n*V_ig@--ZC[Pk]ZbBG=]IG.I[h.Z2nEehl
%Q(@SbDit#kgmgU-F8Y(]Rs4JSVcFSrl_@M1+FIF>i,67hI2EqdH%*h0^V%iPpMSg?[MSC[fj_Qtqj[B8,ER#U@E#.FO4j*@emel1
%"O/2Vii!!tJ*,-FDUFgC:]G+cIYE:-T[-UG>6rDn;RuIcS\SGY*82b^RbNY(NYWQ'&Q2GBjUpg4-H)Ci#*Ul%<VIT70@gC4]5p5c
%U.ugi5UaZ7K:HtRZ!01Q`s>loC:Y:Wd5stQks;H"5NSO]aeRpIdRS*J=(:6q*_hZR^#K2t5@8c6#2tAm<&M""Ehd::d?X<mH89eY
%!h/AA%/pj!QR5Idcql#YA:s[*s!1LBl!<*OBI5a5Ns5pIQ.*T39tr-kGcU\56IH'q7gdp7jF,"6QBtq"(#03<Y78c-Boj<s%F$aS
%^Do)54XpiaW+"KFiD^90C6HTsA9YKS\+J:D<or+M"Z59e0t!(Ln.IJd7W*b!XJmfn-o8_/<H,93@nCdk%_'iB.tr^I*CTtK;A"C8
%a;P\48k6'4N&2nkd+22)eB:3DA;`,*2a.D&f>)m"4Tfd)bn1=lPcNsWcd&/6_tgCeZ[Utqh`Rt.Cbg/?c0X<C4b7&3(4=#0l+Xa@
%^2q^_I^$@p*Sf(o$@Q5??Whd#4faoRq#f`0e:utVfD5!MZp,hq>.LEaQDhCD39/9pXPQT>ON6o>EUL'F\@#=S4o,;>s5=X)Ad<)n
%p/07Y/i9p2Je]c>HG8''1h5@uHujdGGC/RCU\s3HiPo'I?h;f_1$?=Mpj'::FQ:rCShMd!/%n-j"eV*Qd-<W9ARC%FjS4'4Y=A$$
%nu(Z)pqc[_YdGJWPR\5pmTY$4"Wi_P+!TUcm*aVPl:(3C?#"C?&mk6j\CAl!O&mo=C1<3Y`+p1i?\8;Z]=7_r=La>6DB4."GI:\f
%r6"1'"&Rqsmlu'*;ckS8e)Q+,!D2[.#kl\9H8mk`+P9=+ks7*TfNZc&@bSUB0iUq4'qXOcq]I2CV^25,rHS'#8O&(t@NIH''RV=d
%?JITVfPV)Ms'WV/kt,t75P%Qq+D0\"M#6MMQU23*OMHZ[=Nk2qp#&F7N=I0UVTi2N/j=/=M!7/(g/#2!Yd8RN?/$fQ+7,go]3eX8
%Ufm'^cO4Ra=lJ>O-]d5)YEk`+0AaDUIr3uIK$3THJ[POEZjB3<`?)$dCY%ORYPDr3c'EJfD=)$Lke7;>f$$A#]A:-=Q=%+>8O`HF
%Kt7$S,o<[H>>]lH1B6QR&0*oj@B(qc,G=B[Z`fZ9^F=Vu</q&QF?P!N-YU?8/L=c)R!a1I45)99"0[0KAT,;s'iA&aQg['7\?XDg
%@u1*OSaep,^1__)Qmmj3KeT5%pY,;X4>i*YRfTYklDAQ(;lr^7o^b?3;c^:;m!SX,i:bH>^&-?o)q@8L4:FjZ:\1b"2IX.D?[ErZ
%/iX0@?6$X%_4s6a0M8L%p<%,[CTgQ_#;Yjb-$R#pqXo%%lhSuWp7$8%V"rp8m!a3S[B[(-Cq##&s3uA+rI#'cj(MXK@d9`RB;qJg
%mH<mP:>P\YOPE5SO3TYI3?+/c8i=VqSR*&7e7;tJa\(N+lbV3#C2EMFeJKM4#R/CE@"TOiL&CqlKsgMddn,_@/Aq9RX`6C)\,+T\
%=m2PpWq"6P6Q/i7ijrMO%bo`2&,\5sB!!mcnm=<4h!&pj#];adra'iZj#kPk-Z>:_jVYuaq_4/mHQG\Rm__8'W;+O8nBZ6a!_IUS
%gF4]N9<0VVojVS(rB\J/_VUS#)JalRIfD<MGeEZ_qlAW@i,@LH;VZ`m(`i9=,nou;Wm4f1H7i$\[S*e>2_b2,KTAl0/SFJ7?=E$R
%_\WI!=2Xon7f/G8fe+g:+KCpOKr=<>QrRKTHZFGH\bc"C`;>8[#J&daq4ci`n--g=?eB1s6s]:IWc&L2@/KTkrdt7-IgDXg5#D(I
%r2?jsIe0Z1m+F,2eBl?Qgf.U@ceXN>HZtKn:2\td!cse$qHJC%/S#C8/"<Rm^0MZC*R:#Ok>$Fu,_uU4:$9[nUU=qM[o_D&es"j4
%p"rdglN^*XpV'sSBb"Qd(XKS9cd,C.:?U1/$pC["rQK7Do[=)rNRmD_YrIWMqr-i@PUKmeGj?Na+`G.lrp7I7DL91gp7HW^>Q$1V
%J2T=aZ@r)k9;MtFchdA"_[jum!Wm6daRAtgjWEPiY&6JY>g#&8[o'7dChn<9F7&Sb"/**Nkb!WD!Mni8bN?Bclf6]:kSu)X=\N@.
%aVVG$Y+/R%d<V&6r_bj>^aR#1,j>f5/DVN'$bb-F>M?[Y+8bMM[pEma@G3:L,("e5&nE6`'.gNf)!!T"?T:,oAIfVUB6/L_<g.o^
%Q^;X;hF:)!q5!6Vro6/lrI'ggP+oh<;nnQIhRn,]\[h^<=b(,"S?7M"+%iFQN;hQ1m6<n'iq(EfA%g^C>s*=TDCo1D*/G56XM*@t
%YA8!?XQ6,o?08SVF$Xo(Op:7$m^LuX\,#2M1dGShJ&L#iT!,hTjJCm:pjYjb?ZFGaDV1ZEH0_\J*ir\jWHtkUq<$ABMU%pTm`q+i
%j3dT>W8%-Mc0p]dEMD"\h->3Y4P)VA7,U%<4^SJ=mqt@/N%*D(k1mB<545S3c\4=(7qD:H<BYVLmqAK(^ANG.3P,!-]30CPo^).j
%`[BC+&K4h9?S,5t#9P%9arPVc]>B?p?Wl-[dNb']IOed*=UfFBe]il[QdL)gofW*`QDoQO[pK;&/>J4XP@6nS/rDnlPJC\lgtuAo
%\3'sIGT?R(rd8rLqY%UILo]lD%")MV<H!*LmG3qI^IGc#YFk1B%N??73H&j'P]jNXN!R\lEPS-3r;,ED]-VD7XaC&<gS`?B<poST
%cIV#5hbZr0*VkHIK`o2+m_^"Kep6niFoU9ZAe;#gpOG/FlE:F@g\kArFRNr&/@Q)V`S&@&s*3A6b]uuJn)4c(bJNGbqqD4BH+oA%
%E_gk6d(%]L*SoRuR]AYun9nqtVpnJ:Z7,Z4.(iFYR.^G?Rbrqi9U+BtI^<d=h-Vftqg@bs/2UZf'044c5`jjZ&cTn=Ve',a^hJ3+
%0#t$\8q$M;"a6./DQacJp>4WA8>B@Ef>%6OHhH=U)mG5:\']D/?@D'H61SdQ.]ftnVRs0[^@@6CquMsm0'0:_TWOd(j@gf?<t>1;
%%K)SP,,"S#gs1U(m!cg&\oh`R'WUh\2cICq=F(h$Jp@':H,'Kf!iiKo-a$r$Y`&M+p@C6%<F3KcAtTM$2nM.^cBY0pI1c3Q?Jd1o
%ICU+&`rl/6%!^&$9M<:gg%t,RI<Y#!T7u$8L4e>UX^!8G"mk=c(RXRKlLQ=bA+'-emOPtAPO<dahmZp.^H0\J5$tmRU&073YH92=
%mEl%"jmi:S\@f;)lYR@q;3icr_8;p+V9jM^$0KbGo)@(ODVCq#Xl$<&khHMdHAip-a6)gGS`==r>&/d_j*^Ri,6%/@7kHPV#PXNB
%E\Hm2hHo`)#2eOa*StPYfH^Ubl"cJM1:p>B&%>jZg)k:9aKIb=;ts>Eak_<T\c-+igXFBI:Uac/cA,d0<skm3&,PJOWs^9BXI2/O
%5J4JqWNb))m$1q#$;VHRG%`87&Dq4TUId)]o*9J8%"[8;KC5pq?hOEkbFnR>Gb"JKqK?L[YP<"A^%h"k=Ds_U@#skQ;].l.Up6&%
%_nh,dpnV+ae$W%4p\[8-Qb/k>rhJom[X0To11JCTab<rdXL<pA@61'LNQpD-!hE2=c@"IUNlm@Sh<(7].ls00=tZ/%=7,""K7%fq
%*Ug`>n?-(WHe$7(PU8nGn`@-ioC[2!!`*soVlU2-0JR7Ts.)SKi8YgEltfjr,$9ikT4#cAhSN+&?HCYmcaDMj+Sj!Zm;/=VG)WaI
%gbK52DfSA)QS,a]n*c^B;]n=FniAb]_\ZTrIbP+QCMsl;2%K60\)8u!X`hunJ'g)N\g5#cqs1c0??f:l=9>tj=WZ*'8`$N/)Ab%K
%BJg\dqJq1@0<u&4C;,pZq<UZb*MW9f&iTCh6X8$@=+>+ShT$_iMJjHk$4jV\!Llr]ZMin@`G5a'<o,3Ki5f:(f.T@;j"&(<rm%D_
%iYi[>D6^FufIluX?N0c[@O7uA]is\sHumJ\+*@P.L[CB$iHa:.l`:pI;#.DE%T]q7_#OD8p_^@f?@^R6Sb6ut#X-gB4'fPTcqAWp
%U#8Xf+&o:AA'%Ir!m[jKMp4".M:J`;\OQ"'+aMR0Rt?8'b7.qe'#D#;ac-,OV='rj*B35bs$Y<X687%fE07#r7cn_U7%8+%/`!0H
%6-1,B.`C#tQ?2`>[gp1[r+r-+Hn%7lF_2N)'?!\\XR3]KEp0^@H[Q7V`4/;;MsBK/]-qX8F?HtVd>M1](-\i;]_\\<5GpQaj@(Fh
%gWu31d(Z>fd%t5oTXILS^b&o?IBRoDHG0:I:3?KD"ataW@PI;*T?DdlrnjJ8e.j_X/(.s7dTOk=VEd!lj^C>Z-)e;Qeko^YU^r&*
%;-:sdAXj$5cmNK%iBFn>gu*FjjciFO"-1RbM=-s%>KpV_h0ht$Yff/&=K,Y.gRW/[d8f@ljmBXmqIKl'4#*qh)24iGMLWUk]@BZQ
%=cIJc<I`6h;P*=I607RF$6sj4Qhm^_iP<1@^r,f@@Pq"#UZ_*l)gG]bU`H'Pc+^JY]m.e2k@-DKTiM"FY\'5=?.j(#q^b*QL6aXn
%OiIm]H-6Vt8N:\%En0GPN(6&.:722qk40Es=Dt.e:t78M2"f2!nQ],@q_NHd"WN\n5E&Z_kS=JSI#Eij]'s>DAalN?g[j>F*^]Ts
%s7jo,'sSQ2qfS&Z?sumnnCN!jO?JHD7EIRkjO^EY)g:cT+3pT._VY7dj$-i0s&g]#r0JIO[+u:c>]YF5i7V6`o"@^K$$O1e*<pE$
%G5Wh)H]\[i3ri5"+4p,R`AZJ$Q1/j]AUTmk0HHhM!dU!(L<7I"CCTu#@+>W?#/q\b?7dPP[Y3&[\sjU<Z_JuCEt4h7%@u0Y^d><3
%]"2/Nl"lhBW??:)9]aYjYo0aJ4t5(+e[T0mZ9CV?&@t/HFnMuTCMr4ukGi]W#NB+pmQg[tM7OFfCGS.6K5e;/]ZU%&"kC)7$I9tO
%%P%!G#P?I2Vc*>$X8$;PO%R$fYXL3.I*='3NQaZiD6I9^&jie57BFb2WWq,"Ja%<i/(f<SD1'Z7*>D_s>'n>_PF?96<fhHP)e:e4
%n0(U^(psK+#^uJ"6pZb/XR1ckNugJ&C8:.Ko^\s^j.[KEO@Oa$eH:^(St&AL_,TIe\HZO]cnJiFK4JWtaUi9BdCOqWkH^]ue)4,$
%*5MA$l&?YQZ2)**L4NJ9Cn'7nhDfE(a&hrLl8i(?J[F!k?mj*OQ5>+FfhU+0Ne=A<#VcEg!/*!,4MJ*,(`-KAIcQoaDMSuYf;*)q
%AE3<i#5]OtpcP?<0gLV)QtT^@n8"eg)HF,=-k>0_QLk@i((JRXV)L<=d4pPs?>mXSLJ\cZlAZ!`]n*-g/2*t]4p*p^=)U4*G#mfs
%#uh.$g'P_Q@&Dp#?nLN0UfI`VH9u[p7l@;Y8<`E'I>0T!!uI@0B<F6Rk,ANUMdZ\bAq=29:Q:#*aN<.:k]0JDo?^Y2_*tYs'67_7
%n1;n98QRJFZ_'Jds!r'e+@/oA<9qt4'4BS;L:/17%$H/D,f,a'>?<NCWpu*a<.dt8EWGPaUcIY>dGXq7RcAshK_AecI\l0dY*BHD
%7U?KkhbcXr@mF>(>[[Vqn(:Lgo)i/PI)#l'aEAD&G;$<4(lGJ+0mkM)`3^`sV:7:M)DKPsIV_8XmI2[2RKc&[-3BRr7+2c<:$Z,#
%<6^E"fZ3^p.1HE'Hu+6fV6SgW@lZK_g&rtm3Z*MHSt0G#H>?*N'4r8?;N!_&F\W;PGQ8/EL&pHD6@9$N0Fd&kQC[\cgJ4DNK#\B!
%"A'%9NUm-=5r&2s0frlC`$Cb/#r/2p$)>gh5;fJ'8!E<"I"o!4394T@HYJJWS8@CpPmmIW>2sp3(,1t-bKF'sG.H<TYSXRGmJ@TT
%38#^qpqdDIU]VQ'(3"L`3^X!=P&'kr#D*0o(#sW&]-]rM;JjUA!f+&meg-;=/4n03OBrWi9e.(4=P6=L<AUUGp+nm">3!IT97ui*
%Ban1gaEDGbZuI=l+Gb#[6>\R3&FpsdJofruF9-2:VQY<q`q@-/]8iFIF`A!9<RN--/?(TIXMeA-eEW]2:M>dVW.CuEe0Op:T-_a%
%(a#9Yk1n14"*0'o=9tY;%gr-0VZMHI%U%l`pt:Qf>V7^W$Y#*Ik@>`bE"&+ugF*>0!YlpU+N1Ap:""R6[UhWgJ--$]N?H<0,V_[R
%fM8/`#qLjKL?PR&<U;,cI9b*]`W/dk0Y`so\EK-L"**p`NJmdte#P8CXL6'WZOqr:L+7FcPXS7$UG\Y'JP3rp$Kg#,d_h&8K;=6i
%>%<)jODC"_'m/aJXjJ0>W1"l(ZCgk/dN"<nHuS5:F#.O;^s6+,RU)$!a:ERq=[R%^QLVVFNN6D'@<Th(YR]Z,+5:c;5f5_t"f#$4
%`#!S^/tPP?OWsB1,W/7Rc8/l9%%7b2Pf(rqE>8s[)3!,mN'>i6eYn?I9sKcL):BE3NG3'T1T`s@r9?\k0@Cd$j)0\/X#:ltKcC-o
%^6t^\_1jWiEWWF7DsSUj1-9RjW'6;bSBrNq^eDEr^e2`YP"HUNee<A)40%sC1Sbb`TD'5O**>u3i64(AL:1r<>9/FD%Dc77&#PWq
%#N/Y9+B2b?h5lAnNinHB%kSV6@%i6H&/SU,JTlMEdDc8DQGlO<##)JLGASVXZQ)*\M2RXn#d,);m.AN1'o]>=U6>eYil.SCch8n=
%%II7X^KW24%DYR,YKVXs)Ps\@n8oXl<a<trL5s/1D@E`_AM'C;"qZ"1L%rO(P8cD3(O1PanSA:sJr_:MD*NT.#GN54DeXeA,b(Zl
%2&K@7hkbHa&VPUe%Z7sI["Rt79(c)WC1]<AI_KGdCKSX_kP*CCYa,jJq)?',A(qFPLp0rr1ft'p(#dHPA*O,Rr2^WdX@I&.B]D,6
%."N9:`IPm0;D^Y9g)+3Dj9A&L$qB7`^!Zf.HDB0@HIL49%-\5mD*Bq#]t"H_H&]:R/-n*Gf6#r#bCBH1cR^VZhS#bD5l:s#hXUu#
%f+$u2aL+?`8Vt`lgNX%GYpil?^\\+q"NuBfdief$I^<i&74BpD,^tP@/j"s+PB,(JMB'jW""89-;l:'K!TGgJ1sM`tU).Ei\p7]1
%dkKH3IBC?Df*0Af<(53T1C+$<%FT)D)##=f0/]cGN?UB5nVPjn46q00aq2_TK9JVdYFmpnqFN;'*X'2cr?R["6SG)OFoatlU0Dh*
%(e'+o3oE@B&";[-(A%hhcTD1PO+d4sr;eWs4A7cnJ`m@T(Hap7Qh`>.niTl^2_\W%6OrtPHU._`Nj:R\I'c1;_p!2%"rNTT&*TCB
%+peiMQJ$N-8@Pa04@:__C7o<r1s(4'-XGP5n-NoHYUoHYaF-63UXe`]Wmdh_FpR4noWRhWIut]7H!-'NCO1GsAX;@q2c>8k+0@`0
%1bRW@TbJEts!Y2#5JtAs/fjtS0HNKq>_HOQ5\9/\i=Sn=Uk["Bl#R:DU28cBG/bdFU0]iGU3-d;cZM`8Wb+ecm,reO1l&nf9nW%a
%BoWkSSW9`Z`im)l'LG%tM,^)JA[mMP2`^+R!F>l9r2ds*KH4,J\LAFd/k_jhO@HGUQio9;ZqMQWW+3Za6'O)13W\Fa9,o'S0Rb6;
%p/5C8?8TVbXs[Ld*'Dgc%8M3C/iLd3%aA[P\Vf[ZW=3iRM!JtAd77%KPudrgnl^W@SEngnl^GRjJ`d4S@X2@tr'A)ja+s[''%'b@
%i@/3`Z7,#B%R22s6kJ[pJS0LM-hO^<mgonG>=UslL/GA!'iKZ-pr`kT,7Tf%K`.bN\8#<ck[Y:P$5d'_;lFf.>>q;H-JB.FfeZ@?
%i1Q]FY(`Tt7FmN)a'hrB_KN^`KjSX%?#[_F/8B`cZIOF0"KsH2&W?0seKcEUm0#-NTjj"\;*Y6&!X$FI0uO*6&uaaGKXdFYP#O-c
%0`PC1I2isV4Ad@kAuS(YXXb6:Xu`R["a?,5P1`F9B.V1\a7n'81WPFKOGpV\=&GMLHfhruF1VB@/h'DgN,HeJH(HT46nB%g/5bp=
%O,+(T'OZIMX[QSF>@^[c#Rq.jM(2PR"3g7V4e:/%,]S#0PIY;k'#sm0!5.ZS,uEj7Z,72"%@Gh[#4%:aP+&(nhLDf4_h2OI'C9)A
%qc?EWD<+*p@ZobJ%?:eP-*/Ap:WRNTW-GeroA'O@!u@8&UVN"oAl4Zn(KV*,C0e]P.k&G8UIotl`BM:SaS&maEA1>"&&c_D<GlDb
%T5?k"j,se)H"E,1@,O;\;&EuFbs7'eLMDKE/lq;C9pcI2KA"*h0YmHfJ;&D.73>2>^K%Gk<\U,:?s+8"D??(,fuS4SPGA48>M!9=
%;,'sYe'IeB[X0pMqh&uH"KV`JcfM,J%0eHn3:Ze[U?'s-K4A?ir19u;"7lTS(n.B3guuOn9o9i7gZB.oTE4i&@L<j`JD"sRABPT2
%[h%R38jpXUVDj%k8[j!WCVhb6N_91l%t-VuW?Tug<2\"+fm]:tK-;Rh)QfUKW#u9"N3kmg4h5hDT1-I#[N,b8,DY1+KP2)G4TPY#
%jOrNVYlP>2=jShK,eX17NR9>*e[gA&UW_RhKQKmjUH3;DnuON2;Ss-LCU!6*,&&a\chfB(Hk'3F&021aKAqE^!Oa7,<05?@<t`I8
%W$A#L`WnG%"0#*?W!k+%2(0@sdC:aQ+Mb3`_!'/0g/(MQUIIb^Y$cWp6pD,Sc&S[RchRuP59!WC)OoX-qDf+:\\XAek%V2O0#iWp
%,drTGQ07\?lT$)n)!r`UmCGJL8s)(KDY(`'#0[."&;MVA0PH"R"dfVE,XHuJa/3<2Wc\X.[gXjnSSOl&TT!up:K(5c7,&W[HE$.C
%DYb7NeVUuTPoX;GHaO"+E?lX1UtSpC!nd/l],35ZOn"EnnJDb1T0RO)*:+qB%?leCGu7rTB>reBP$WY@&LL\J0R8(FFB#"bIPf#-
%`b3B^\L<S"1r#C9F)COtJfEV5qpu5u"ei:^LN^PR]D`N3L0tE6b;$dD6q1<]oMHP]O([,s!<Z\edK'2MV?2C!>0Nl=99EamOk`3V
%^q=dr.u=No#fpm5<"-2t3od;5)DJL?"0=OuOOO^3oDYcm?G*9)]&H1#Fg./7j10)?HT]4\*Q0aM@X,*gNG!cdaQhbMg'LGTOQD!c
%M?Za4cK@ZJ>t7Yb-L"ZJFCaDE`5bo$;dgU2.#J*dT-<M*^+>8gDeAot)+rW.MX_p"`q,Ak\,j*O,1Yjfd6U\rS3_t-W3/%Ec":hp
%A>p4S)TY%F*b=si0ugN%77fPrWe>B:o'paTT0QtTD<E4U,s_WFZtr'?(Cc7ZP6!67EgmkS:]09&'a)U+abf+gs(H@f_(ijP;pTRp
%(`uicE..B2%+HtoK.SNeOE!t5!![3/'KLrJ3E@_)(nVSo8VLob(oY:=AUDkmh)2W!E.=(kju;&KpihatR.frt4,rTWcMRBg5XOWB
%W'&/__"7c$jdPAGo]c1id4bf(@F,Z$PqI9lgme\.#0>.O"0)iO)$JK@0;ECUBUI1ANN0P:,l@A.FJZUhfeC(@7q4>>)g50#r_q^]
%!TA0@M"0W(K,G?%@N#Z;U#SP:&Kt1c`k.`lbhDtq)&?,.E2uOG852G?Qg"XLJI9j9)X\tDC7&hN,VH/j0EbXCLRVhCV!Hu'QChhr
%_RPc/N[e"l:J#R,musndHs%NWW=Gk'5_Cjrc*!d%D/+e;1V<Kad6H*d"[$4Ls(>#N5+a?j\huKX^#tkbje[Wj).;4:#H$u)$bg]r
%i-@^,Q3o93-.*56.%!,c_S?m]TXn+U.7$g^9FWeNpp?&+cK#7W/e4Qk-(:,RIc<ok;PP.(.['ah:V;:i=jIs`JF.i9oAD*uEs;H]
%$AR:nN#u00E8O8/=]Som)XB-h\*`Zs[7uA+@2Y_S)b^Z.e!::b?]Aq(TT0kfTJg4dYlmK!;iT8h)@RdjMqVX%`6]"$__G@s0`#&J
%e%jI<C5Vt[:V;FY?c&bm4c[eU[=g7G$-VpYY,L*_2=,gOhGAs+?idu3(9*aB&rLH+$SgE;=2jb5kugK,_r!,?<tmKMn'8Q?-j`P>
%Ji`ZMq0SR+L<7G.in0"dqcL3DcS6:_nHC#IP%1pQ@GE3.NbVP4O/CRMpnTF:%oW`T@k+=nU.8XlgMg4kSMm<t^`7Eu2h!UAArd%I
%Y'>fDUW7d6nPEscgI06cgK5!pZOct]9>p%6*s:Zh$D[kCccitO.+Kn?JeMhni\<OB\,c%3oiP)8ND.7ri^60O<&HfJ9/LL9<A-3u
%btUF_^\ToTA7JEZ19@l/)#"M#04Ce]p>jlYC2?!q2L$4\pJ&<9_4e:Nj>>)^$Yt>=21^oujJn>>/P?q/Xo#%o%2K\tI^UW[em0Lb
%I#Z17Agot2i0=t*L/%j/4>OJPO2kZG'/ripf?R9&=9Z)eGkLuj,$l?A!es8`DO%a&KkCR4E,3Uj"&kAWK6^ZChnIWX93=b*_/aB.
%,uF+t2=UMV'K%Gh\,fY/e0Hn9rLEn&_roDLL]R4fk3!Cm8[*i]\Tg?Tjor//2)r;g*8;;MFMIT).SLZk3SK(VL<,,FZtM-oh?q4P
%%q;8M2))%A$'Qa@6mjjl_4dUUch/jB4_F<%q7Z,9]n5QqZZGo4:'^TTOA[G;V<r4pQoS2XJEbDl(&Oj"*=LX*#]$@EbG1aBSN@ln
%1,\:K*^8NoA^%"tX<`f33=uF&)ATIBcm($/U]E7j2o2eh#"ceY!60NaEI^UQ`8r#@omj<I&Ynpt*d3Wg5()Eoh"cL2RP6q8BU,[7
%7)]7$@N$L\"6>n,US*a<6:K4CE#_uSBaNfUUO$XIC2P4QgjP,W]]Jai-?Z>a/meFK_+A)2Y+RguQI!D5GM\=o,Ok/-oF>!S`]E2Y
%8PH4J:4"TmqpI9n]Wt1d]79p0'B3S1'BTO&pn=>6OC2>c*P.Ie.=1da:#K[.[O$maL%-:!U-,c5$>S]"?@nmP1E4qRh+paCo@)%]
%YJ0-ngU"PF+a-\r&#mC*il/_DdSN>pB0X6C7L"e^Xt'`T@q$46mT"%[##$l!^K0:.<jO2'#/6OBe[C/$YuTW0W1"`$Z(LV*Z@-tl
%Pm6FGZ@*/I>hN1Z-(cgEBD_H(0l=P^gNU@_B^A)c+-<*?_)<]0Q<>!b\QtnO"q3/<a>`K[0SA'!Y;Ja"7#1O&bf1rf+6`d/0u=p(
%JP$];*#:uj!1@\>YjSBcW7gFur)^LYqIg5(Osj9Ueg8t7XOu/iA2mCqj'h[U(a%E:LXAhhHEJ0'8^IH+k.E)rfR"GSoU[p/]N6c+
%7Puf,Ht[(M25XtT;s`[odOcODF5F,^aLu4tE8LrA-H/I7'i_*Unq!`J`Ma`ZNS/Le2#[5,o6F+fXffKb)iY2'U@LS%JgkJ"i"bj#
%9\B+]J,;gQG`E&:DrGWe-rbTJ`!_bS2(Xknf3f#A4Xr[n8E*ojgQ!8[FTmu>45Ng:<AUFBp@CK43X6]/_^^MBE_HrbS.s"/YFmpn
%3d9VpokSL6S(cQUUVQmo0O,>$qZC(R_]Z<?c\t$p8@+5Y!4:AJE8C.k]Q+2>p`!:E)[e<SF:eoU%t&@-):LF.CI\SrdM%'D&M!c;
%U3m2PFbi"*%%2>d+nDp>B[c)c8;Io_r;):u%2%0oJ;*pp"K83M+9SNIQ:QQdK/rL6;L8?`@BQY;.h2$G5Jh6_&YFi=^3sG[]=(i&
%4efMJ@5\HtdC/EHJfr\^!HYNG$L^$h3$>ZX*67So]$96BH6XBP<:e%scU(E[8n'KRg6fap'Gr[nMeu9l?/4pcd6TPZ-$`pQHo;+S
%n:(MiE<V+-YC(9I_-QjR/+>4H%e,@\/,!C'fB97\(5H$V<Pu;]bN%?70P.sK$i])E@9t(lGT_lNQN=LuP=!VD03c;U.u6lc'lbSI
%RhWt'`j[E<"&'RdLk^VFpc)b/:*E,[\1dDa!Xq+.nRBO`(WYZD!u\='-KCLc?m2oP\2mbHj.<jEA;>7]&2,'`9mD6n=R9:O/,q`i
%6Hu@K@`TBp3Y@_J&>/c[AW(@Ced/`<83RK6&2:'iN7$Zb"tEY:[j!G6Q>I5oUg#Gn+:q28>,U[l%NcoH-r"9,!!^mk--*<0f_MU2
%GV'@n6)9i9-Ne`,20?h(3&%@m$0HH!p^#gdFQeOD)?J`)*dk&&aV?GHZTTH:#9h]8XB*5O&s'e1[a[W(5F*sgI*uKY&n&bXX&1%3
%09^#UQm4j>(@rXc:63'f(@^<0oV.!"E-7/-1]WR'H!IR-N&GJg+(#/_9S#"s;Vl4s]k/>,<3aCi#i'E\B@8LJbW#l=aAMLD3`8<h
%c]td^g_JVWo#6;_gD?a9%[g@-2[DiB?.T`s#<pf_K_`'d!XnQC4pMTD:e&C#>r$.#"ATkt;"Ou[>)pTM&qgR?kdEj>N^!XXG.AdJ
%GF(`ig#s6IU^b*S`Y*]=*Dq+e_4KbH_^L(kH`/o(N*l"lKULAc8J3A0!97*YU#Mm#2D#U["\!MrM!bcC#C7u]HV7VDj#7K&>Nbf]
%RGD=S\)$'bMSs*7hQr3[e40ucM_1V^4lC`semt<jX>n:SH:D@[EAcZ(MoS.)W?IRh'EgM#<%!G3#V=FkGVJO+#Gc9#[;u$:"^9M@
%Ld#ZF&$FiM-73nc_664_Fq$.@5`*F#P_$>>9iWKULTXR2=jM*KnT5kk2kXs_i)tkglp0"YO#5l<XXf8m7Y)lNP<^pd0)Fe[l3b:W
%[K[]d6<jh<m"iRG:u]$Z0]i'?Mn]\diltk1%Y@iGkYW0cJts..-piu^.h!0l"4dk^is(>n.S^0N_3/uU-dLgP?m7l_0q9:"%lZ0k
%>>3)<>l6,'J]!)':)Jd>3e=AUM.LE>@iS1MJ-j[8`=Q0_+q\G9bLYSg=n5BR2A8s_jIjE.lWSm;-DhfbrTf<_U2EN@"n3PA87nb_
%+6SLNaULV;E/qmnl+"&K"F]iM.Q'sV\7EO.NJ33XGuda,LHZ>I.^'aG=u]p"*V+eYR(tlV3=!8;b)6nB9JaM=7@"Ru(=MSOKTVaZ
%*/+7#;n=+to#_fM0s\MaP7fSUj(d`)8M`P*(?JRfODkBU&g+^q/I*ml1;r@.MD/],4U4c=V@j%5;E@'E%8BNODpsdrp]7ei11'2U
%`s+qrRh?Vf"\.*o5X)Y0H5(^]HdI)AqhMZ[6WGoYX%\2j!0]l+Y2M(s&XC(SYh"aX7c+\DNBmVm''qZTbp8=VfUssTCoLqBO\?BR
%\QOIBmI;)+YdUh[jJ]kKR!u9V!Z(WuQp-t+Or0b*GJnl[]aM?1dPAtqJgfWj?t%+bMoDTZ^juW@>IQ9HN1Y?:YkB7M3QRH&lZf'M
%84@p219XDNL^N&FToub/Q[7UpJIni;Q6L."9K^2-T(s?A3KDZr:J#dFE^]=[",,&j"k7kAN^V(UX:6$L*_rBj3jeEDq*SAZJt"0I
%L1<$e[)4G%2f4bRO)JquJ]!c.jo18`)SJJ%e9g!&kOTS^0s:m;bRfc@M_;QEV4uZW?<m5f)C.UHnJO9K)A?]cCn&b_laXY_Bq?m?
%&V34^Z](0"R$^ZW>UZde;g@N!9B(f:h*B2h(CHM?+1a*6=m5`lU;3lCC)I<]5o5f+Pm5!&N!?fVH=:g346Ym1n^1_elE2gO@&nq(
%TYX=,P1+\Rl5O"hJTt:e%CV7S-jZYq><X(*6<NI)PcFjU5+oA=(s$VD%qGE[E&FH;nIZL?PidigCj;WY(kd]HUk2V'iHW_.0/@+$
%a9<^=`VL&IF7H4r%`<L]#_lpV3Qu\!>CDMD.RA]C+0c4Deq.Sj_RnG?c)+,j=El0%T)(LbeJ>rFjb]#0qK.QqPbS3dAb5b)&1O#$
%H2\STJ0e"o>WEcRVVpB$EpPlZEH]8+H*VlL6%)u0h=8?I@+pq)')].n_lsb(LKU5;X-:F%3\CC:o4eFPD]E]6ngOoo0B+k?>Wf_h
%0O/JUJaS'2_BP4:D,Ab9hfbQd+S:MLWRSG!@>2"/KIsCritsOT!Ys@2l.?0.I[gJka298Q;F*hUaNuf,fi&GQ5NJ00n00mSDK/`+
%iZj(%JR*7t4lDJ>ijp78"8r`]T7auLMa?jM8;n]"?#`c2kA<ba0F+g.5'Q4j^Pr^UUP&+KVDCF7Qs_$S2+0dHPW#0O-;ZF*'l]$Q
%BZ)mpQcB>e!?p;X@"P!aM/i-SW3GH)):Lt+2sQ#2Feajq`8AAgP64hthf@(OXrh,#0Zph0Y"'Z2E?mLf1IY,566W^o"=@,V7i7&I
%p_o3B#tYOGV/QuIM()q:;LrUFIs2,$RJ?n"14BffjE"64itF+J9GsdsbOm`uKGH;3[)g:H>iZjTMiVbo]jhB2(7V+ZnObYMKnYbX
%#K_R?<)g%-EVrB^Y^RKDg4F=@PVrLI"UVh,8s[ZDjS0Q?3uhjZdX#)a7agK"V8h5,-pA.i`BZ,!3!^:RibN/L2cJ'[T]Yj#_U+Dl
%KF]HurRfPOi,LE%_'h@Un\F:Nma1c=XN!kFNXa\*(Sdc4!/FBE.J+Cte-+FCW/g.[Gj#BQZf'<<_!h['*^,Z?B`],1R0jVj`8\c<
%b?Xq<0Q'`1k(t^mE?0djADFQ'R#<=<`\Z8[kRQ/]n3uB?/Z1UJJk-/>+*_-p[?(PYoE3hWKl.8E_5o0==:>`b0d<jE$VBkC.!<HJ
%_YWD6<*MmhJ:=;`))S!8eoi!2bNMpRd3C!aJ_KaH!EBGm@&g3a"d)%rs2`2j[3(7#3B$"T-rgn+_Jon/$@*%W0gG,0ie/#3(.+CB
%8e>r((<BHoLujf!p:-/FcVun2F")8T@1`l-N+$1G@!Il**=7O,/>[r+Q\5?I+ml`^$tRKCY_`*5LJct^>7\W5^f8`.'!J\u3ZR3j
%1;]e&>g`P<TTU-fQe+s`R$^^U;%&M\j4WEP>--:+=EfF26"##M&mrPph..!>;*e:q72uH%Hc/36"pb(d&ApI.[[=#;_;@Jt$$,9p
%Acr`6Dh=YP7ao5hoeG"BkLOj&_]FI@@??_)5&i<BRYh1P!M<lE+4Ps'=<X6/P$ih!"t2^;Ko[re2@X`S+][R#qgj;<'*euFc.f&@
%T).T)oI,KM?6Nl*ObJl-.IK`0E`<+I*_]CQ\D5LN,_skZ3@Jq3!]LH""-7LrHjtZoW#/V-E[Ou\Ns=-)6d+Ri8V7!l7A*Z#`3_7F
%E4Ig8%Y'>&<%Ht'5lof-(f$"25mh=]!b$!1\]M\S*VMeb]'c<5E1IYRb&@lHL-e5;@Y>5"i^T"UPU3QtJ0Tp\KR<Rj9gh/:d.&B`
%%]GVS38#Yh3g9P_H\-;%HV2nW`<7$:CEPGs%##COm?/$_\M**l<ngoI[cDA2i-?Q6>/KI@/5(@3n,bDQc0&iZ[3^P0JA-\g_:Y+&
%`Wb/<`#k<r(@m$O\D65pihDW,+62T0-#3OFlJ[gLbloU3WWgQ6EOB=p,X1s"!2T`YSi?o]Sl$bLLFYOul*`ekYmEP/:>dN0`XNU9
%&aeLgN3F=rBZG,6&0i6eQpMWmDq29lcf',Uod.!$8Ou=C#UQl#TD)fh#N2UQouH"?Vh'TAeu-261^Q?/["E9-Z(q^uOOS`;)bQ*H
%1IAX4J;uV"@[N^B7==);FEE69ibb39[gaiOI1<bU:Se*5$!kq84^in%4kEd+@D__l4pP1+N/KTjMFjG*AjkE>e&tFf<!t%l"2M>c
%Lum'*q+0H*.k*69a%)kB+O_Uk_.THh,e1m>gRdk]ihPt.a.EnT@"=q8bTX\foiT"8@^lI@$p?bYU3Kd91#e8#J>gkJ+!-`3#VCY%
%H@#e43nsa+F+fU3^]7/+&sT]/"EQ;5_-uP$+isBAbY*ckPGQ%&B]]lmiPQ<?iLjWM7!Cu<&elLPGBnC?+VAuQHtn\hCF\Pj0ZmO&
%ppsBpc]XAh@$\aJE]9*e.uCP'.$JG>@]W.JBLpRXBco-ac3K]aDdq?9jkq-h#(MjD<7g/Kf0fX\3!b-l%[4p<W#7&qJl!62'35h?
%n@?M*jZ\)5E0m)&Gj&"PNq"mt&hP8ER<r%-duBM'cmpW'S/^n$>L\.En,f#!_qcrb$n-W-%&JA9qDM@l+^#-iTD*k_N$TX'0T[o*
%';j1?4UW.rRa4\G0bE=^/,J&+`?c4/(R/&bro<U/.JhLmQCJ00kF\MHZc#3jUu#>8F4VT:#<+R5ppf6\*IR90A'G0VbCb=:7:<Jm
%CncMh@4%K)JV"IH4'2K!4s"g!NEXB96aHGCF:P/<E0HX9bNHlap'pr8[(G`O7VGJcZH&;l`3\\J9$4ug!9$+!jl>id""!h9DH,\M
%?sA6Y/i^[6-H+1s>o#KB734lpPUe%3VWT]H*7;W[0^_2h,Y,S!Kimi#cYf[tKoH<aKZ89/U(N8ejB1F5L``s9(i[!F@Cu=$&ic%^
%S""2`@,D9HIEK@[>eD&Gc]H=o4\.P[Me3UP!DcojOUGHg,b>Z!l&pqao?BHGc6ICiPP]KiPb8s=3$=M-M6DOSPVC]*-H)YEU8/Qj
%W+JB)_6H-5#)*P_#mgd8B0"Cp7"K%,<\Fnll]aNKM+:UWcF^HkCWK#L+=59_LeN&;=X<*fiR.:R^HUa=PZYB`+<E*A=Pb4f;'cO4
%G(=S%WDR)%CknJg\t`a+8b$V$9HNS<o;Tb.3Gr%AgmA_3Cg$[E0X/cm03WQ_3R9B#NmP^.n@gSnTkb$:4\?`XILAT\@n^-A)0T.4
%:DiBI`Y$C_04%"9R-e(o[P=6^8`,?$=P+X9BL8^;'@BNk;8`f#;*Cqe-GapX$^RJOTXoC-$"0E1'HUXR#(69&q@&Mi!fVPIkufo2
%F[</3.[u7WL2<?Z=CJYlNAqth_B'rSiRabX-F?mr;(]rJ'9(^@a/*`FINFA%EsVIoc64lh(iWH8i]i*A&_/s34N`MkFOhU5NT1\J
%#RrL"`6p\kUt2AJ2Ol$TD+C\f3HbKoT6kg0M@QV!</_r5ZO9@!fFfV'RHUC\Lk(Z(Tn`m5_)I?)H@uQ4FLqN_6RQt8.!3ja+:OP@
%VS75$W[WU]M+=`T@AMlf!p7pN,D8?.BChOM,%7>hg9g&!">pUeE=>.[8PBCVT?N\&N>!=7S-P:+q=YQkS^VF]#mEX4Nm[BG4B0Gd
%74Bc85\X80c,"3^8][l@GqO"kTKEJQc"2(:=Tap5P&qJUkFYt@3(i<%V_Z463WYLB_rMUogjELH`aM(,@3e^A0FTdG(@PpeM:RKD
%K'Vq%a&<L"9$2g;8Tb=6+Yo%7l9O28b(R[uWk#':I/_2Cj=<?E"+%5@^_+[!m703d@Q=5iIaAG*46`L0$R.Gk(*<td-2i@MK^QG0
%nI&Zt$;]mh@NN>:FHt"Z2X_i%8\&jD/;Su?fsGb;eW<Q;8u!3&cbVmY?niE,%rSm.UD$EWn;kL=dd33O^c>r6EROX%0+PN_-^@4i
%W0dZBmeaG0(pGSH*^25M$"+"ih0gGdpc%7TABH74__?t%6ijVb\B(C\nF21>6#;68PReBVi`K(lI:(pCP^c%3==jRFA`a*ffEq`.
%;8.bJn68Zi(,DmSNVQ&e&Q[VPO4TP;E%FfKYsVN(ab\$hD>on>V'\>+ZXe3'C-BGpKo>@7SX)^FL<jq/da9F38L"3b74o[e&Gjf\
%TUEij".&eW$Uc7c!@;;^F>N+]+Hs<cQ,KsBE3!]G@^nmc77_bF@]7,>Apj#o4>jrfRN@o:Gj>qG#CNACGSjj#&d['50Se+nj/0-s
%PTK>.cu,1j_Be;dCk8rtW!S37>\.3r+qm"(V_$qU"/]8G!^sd((\H(:(,h,=&H875*PB,$VX#k&GND'git"@_hc8:WE5&Et9E(2F
%f4+56quhF=<e3k=g*gARl_:&^XlKZF?CXM7&g)&5;3I8D8?N8o9Ef,g>ntqh%`Rje8Pt+.e+BnsL3UouU9'P&88gK73FpsSK(5A*
%m&#?6\1pPJnQhUQ4"t'E4E&:[EkV4mCmU4-kW:J";4Y-W0J#Jmo#AkSQrd@*4RIpu4X&Bqkme)%'T_J7/1<<l1i31F>k>H*]DNFj
%-o:/Ln^;l?J-'9fRQYYI4L?NGW^%iBEpH@b;9V1p+B7E@fA8ABa#.7&F*u1)&u_1MiEP<1Uk0m3f3mE/78bqja)rR4Cimq]IAdI)
%ij-p]P*lloi_aa>"=<rAT_OV48"3VD*1Ee>??)&H&cNQD7LX^aV';gGaT:q^fVpJQM?YI,4=A@%T;bV!f]fal5;PTl5fDN\"pY`(
%9nh&L080.C,W*<k'$TN1?@5U9K6WgiWtWsBPXO#Dr\QbI;bb`m)JnHbPXS.f8MS/IDre=i[M=b<ACX<T<AUUF%Ua[=9KO9dYck_&
%2j:*Z:[D4OmRL'ED&4D_E&6H/i>bd&`8`^`"IQR5(@'r=4*(`Q`0Vq7Z%_JqFH0E9$h5FAWB-%?PH#;eP=6B):J+jh+W<r#J=17i
%YjS;6WEC+SFWr&DFO'!]OFn0BYo*_R1#S-D;1NSrBLm/?*&2V%3Uk"\"JTp231sIW-3qM0l-t;SjeqeSPGEs+%#P+e:25r\PlY.i
%$M0:Z#InUQ]m$`+N4?[+_6ccNg&)DEjV.YH*]'U5AIoRG9W!EhJDs8oo,Sb"`dF,:TVt,]D>I@#.<qS^7Z*e;,B#E0-u?)6BqT3Y
%1s(3dB?@fMlZHe'KUF[cQp\^'JE\cVVY58IFB;1MNu+6]gSG^qCg!8YU@XB``[+_8J-Md6V5l,(@Ybg<`>MaZ4p!(]a.Y)#!u4Vp
%n.PnmU4ss4f3mE17FL+lTC^"3b_0k406fcf3boNM@'UQ"?/4cTl,]fX,tCFUktDYlLau&kV<[N>JFT>L"?@JGdAXQqW5B=$UkU1N
%7Y,\P'hO%OIboR>+!9-WbRq1h\<0``K$ir5ei>p*bH$HXAfY0-^t$KeB8%U)3q=HVE",e-'8SXQ70=giQ6RThFARfp#u-OH1#aGs
%QS?/CWd\\^c&Nu.JFcpLoQUl":%_cI/6R:Ta0C<:<N2rhZLgJ:dA/J?J]le@Ge00c2CL8)k^Gc';Y5sR>aPiX,-60;!Q>.g/FkSD
%78O?;e0!Fq8c<X2i$M:jihGi;-:n;O1i>QY2[tY%SH58T3qKXq(@MAJ(b?(gY8^%eR1%9B7E5]C=CPYPeAfu&*k`&V."\G`n!ei!
%O$:?@?7%.-IcKceOp9,M(_'L$1ajhs#&sPlm(A<YO`pJ!d_(kKiuTG:'X;Mf?P(Qj56ijKo27L;3F2kVVAPb:g;>aD"2)r%0U&:5
%1Geh2(i)_$jTq'GaIJ`ZS!eZ[9o3P&UZ`.pI"olC24al@.5Pni`oW2HJGVcISdR4m>'E)H5,m`NQ%^Cm7"T:<j#Pp\-mU_X#)krP
%P]G4!&5T::o]!<RL`>-:.lJ?50W@7Mc$-*3.dDm]2$Ys0"(jB-5ZK`PMOL)bc:p*5p<D`jW!Tfi3]s^P,o_C]faXk]f)KCO>BXhp
%EFchWs5Aq*^sMs5c=p%WJJoKs/3fg-r[NMq*c!3#FVT:TZJ>Tba-#(ZH;YGG#1J.j"1-@-&3s<Glnue'Bq&Qi0TPK^X(VL8\TZT)
%got9r-9@X,e[W3^meIqKk/Y+L1)&3baP$0-U'NQ5jJj[EAe;OpG,6/dn6uoMqDCt'3'[R2a21h5,Z_\33$J7-N/)t'MdkK!WXdnT
%r8.//M=K3(O^$5`R8r@LgOC@a*tX-]Y5caW4QmjWcgm>"-].V>lbN,Q96X.RD1M^(PaiS1K5;jYT,:XJZhN#W_o76o`3VesLN_?3
%D/C:)/#7D(Ktf4MbdJE+G'n\RX.?T>eX]dNchH#@Zn-'U;5p49BcB`+YrWi?J$rkM\>3sI.t,CF.cDOp2U*A.."uanWuqMXXK,O^
%_Tl"ugAkt==,j7>muID[dQN0kL<"WaM53VUD_Ue7_:_&-U7>OW6K09lr`\>s_%cSNA#F9)m'*UnU5[enpto-6L=t0i9FS'p;lM4k
%Xi`[?EQkZ]XfkNZmRsm[>LD,t<TU(GIjGtn:jVm11Y4llo0:LnrgtIs\V.Z_P6_5F0ASgSrZ2`=5ZmdgEVfmLLb;@:E1YfS@''%H
%#I%2Sp-d)e)HOR8&_T8]KQ[8B#TbB,Q)k</G'nXhB/<VSX#mM6+.eq-@6n()K@2#=hI)<5f$d/;d"OUe-#VaE)*G=,/48D\)lAE_
%PT1N_[gL-`oi*ErY]EXp2La)u<TWMkX5ADc3?I7R0MrS[EoW?j-TmEa$ED?j`5%"mlcp;p3CT<8Aa&s.`:1aMg)Uso%oSXo.Q>Sc
%/h\1X7MMi9S^&_$2$,/brTf2ph/"uk'jViK<F5P$(R"98e%su?]d.t6E%M$'AubkV#qnpg:A`"C&7M!a"5LTUL2p3Po$h(I,bq26
%8/C\=Dc2t*raNFI$:./C\GXsV%C=khZ=m^RBEWT16a^Nc)n(6DK<:PGNO(R1I\5#2X)1-@nYL7POem-9651]YKi;!/rkQg1R;hBP
%Z+$_93S1<OMV6(d!dYQ?@<T+UO1fKSR0h2oDH4sl?2FPUkjg@C=pA.mfZi@OqK9RZAp&[IGR*+u8.n`2KqGh02L<DgE.Y)60`G`#
%7:]/UY_-*?`9,[j[=6!N43UF*Z:L8Ar:<6N@pbjqga&tpX6A-\=llLKIj%B*5^8+$q0P\ZjIhL"hEQdkf-OZJ'W>H<I-Ci-1`fG;
%<"5;3V@fB,;Oa;G/n*Q:$]\WeVHnRMRDgsEs4G%L1"egfpZ[%PTthl+eaHLUf`(OID[i7;DB4&tr@luBN=4/Aai*;ZSRTDL(tr>V
%%bRIrAEk.&OI(df`+jt4HFHU''.p%O/>3f4(pWL4Pm_qtb_0UjB8p,>hECm+XR_2:E\9n7Y8!7[G_8T*`p!O4YGHFipM7R4`5JJV
%EBM6?B<Wh%-/n";BH:@ND4#a?D^5_Y\.OhHhJ17E(BRD?b\p9Jh?0R5>Ii:J=l$^9Ij#]u))hM=HZk+M@$:(FM25M##J>BZ\;5:Q
%'L)ufG#4kgG"sZQfOeSt^b]]HKZ?t$FCe]WK#3(ll.aJq`&:BZ54%CN2X*tg5A,*HgV:D;Z]V<.eX:Wj&)k6@Bf*ZGUcCE4(b06f
%[@^UMo^(3j,SMfOkTWT/X@C:/=2P`X6':dO>KKiW=(dL#4%El!Z^n/>fpu3Rrt$i/ZE$NVV1taJjSB(5A[g-be)C+lff6b[(WelA
%LJR'^0o/=76;0rO]Tja6/-u;gN>lIO\*.UY$ag$5HIdn1;Jk?]Rbs\JDe-2>X5rQjXRO[,^Q<8%6oTk_mj6^5*(E5<n`Q#$\pgoV
%E'FN\h3W"#%smRGF%:noGtJGC^gmU%qNNZm:IH\"Xi^^6YC60?%C>HNKE5g':#o<+CVm)l@E6tYGW'YD\TR,lpVS,g26KJ#ChO/)
%E[O!G)eOSp^0NAX0f0Pu*=A$r>EtV(QB0$'Aj[6R8A0m-:o%fTXi_)7LSi?o["b_5[gp+KrW`i-O:\f2Sq<Q6YkPc&(KG^H[>(2\
%I[++MI9*gcp>o5q1[PE,.JAC(*2L-/ULkQ%#+]4PQ/)3kCV4cdJ*$U#>gB6(PX;1>qm4Ci]!*R^&G(YE'&CCNmHT8EqFqJLcceV\
%;JtY%BV/s1fYjk#ViY7S2p#noDUACM%A(gL26PfK\p]q7fY;7>.H)YeMf!!V,!"_=S\m3k#N!5"$[;rV=3C_-`VV3r8TLkLK?c3>
%n8.-.?EClR]D]bWG9hD](,rm&fWn^E7!f's3uOE_CcCQ$gfMTHZ=ek1UgH;s4#m7-i%_GcK_^Po=R4E?S[*[/h"idAI/!Je7Ji]^
%["Ij+rj:;WToqQhhR1k2BK(/Lf[r5"'WjIjfK3O0S]':u>E,G$"hjI"EPkQ)^5=P"]rKklmGf-HS%7(Z](>@c?+TV:%uiQFqh-nj
%N@ZG?#V0,h%a7=>KOS0rkrtomX)3SSjSLL>`:g3O_iB;9k\TB^j6Fq%kC8;<Y9Y2jR_'Cn5N;rLj3_Hs*i@CR8g0OgAHaLlKo=20
%FpbE-b\OU$ARZc#]iUI,Z`i,N#Rp^pT"(k6Q'pm+i)RP+4u*%a2KUH141&#`me^?^c6rB6@rVERJt?,iCAuoX_gdiFf-O,f0_4oe
%$QrJs@"OsVF&tabUgjMCVS#:Br?F"V4l;[aCXsno*&O>4O&&IC&(6L/[;-MZaJ>#\)@\aB4jhs(=l%YqGIMcN^GX5ZBn;79$U/G^
%%i4I]=K;:M4bdObF?<t.XB?hpe[ogYR95RkQs3G/D!C>gEC/im6lWnob$!WQRs2pQ(tZm&mXr#S[$lrq@)>\0(Qk%h*"mO";==1W
%^5E[%9c_!ec#FK;Ul.=qXDrmZgG0lb7Y4o$6`q>qkVG$J_Yj2Ikb0if\J8E+R8mR>r`>9Q9W7`qF.@oSAuJ4L)C>P=iG9P8?+"sV
%dG<C`je`Tm5HtSm94"!ei447MASQ>P1KG[j(2'7gCnI;dm2g7ggknk!^K'<KD;X3sfud=TlHQ0_VrQiQ>ED=A5H/lf:3^gnV%'E9
%'0F41Ca5<'[EMbu(rkHM;p5G8S/f#482WNA.ogK>0ee%q6>>S^EHUHmo069uj+<D5aIH/"`YBgGh8F]j1d8O=2s_^MB@/$<=-X_:
%?U*X71]n7\V7fLR@=1/tr5;>j^D1#pRT3\jrkELQcS"CSCF4^qr9<9i5Tl$j5qP*8kU+!JInG]USC\MRORp,e]!fe-)Ie(U,g+&#
%3PQ<"dX0NS@GA7MFLH4jEVAPCn%5*fjT:E$jnscjkm`'Oja(CV\4dS@QB4j%+5OPGL-=Vq.QXF#WcH";JXP_<k#UO/cDB]RLn$sV
%LRH"*3mB1]_-kf0j9c(BMidcOA2@]C[t7SWBuel*`9c1Q-jo+*6M&L&EaeZa)&%XB8p4!.c<4]g5r+=7?_80b4r_'JSK6FaI/!Rm
%,j4.*bea+%aa)5R(8Q*PPK8#P_R(1k+m&[N%?r/sLr!S&ABdbFOWHkXMF"OuN<2aMAooRp7_.g-9MJ;lZ2*X@g$[6(_,[j0M#"C"
%M4G_qn7q*eEpLu^j+j;b)Af1a1+qD>Nt%tnOR==GR$TV->fW\B!UL9@l)QuRWcuW#j0'?IlKV4\M*trg[E=2oj'qN/bZX&YRs2pQ
%&D-]s<*bIAKua/9r&\>KC-#rJX`2p*dP=W>,9p@t)/1neNepO\1@CBM'IDEN#m=:o$a[&.k6nH6;9dV*X%EL)ck<^6h(\hU209R=
%*ElIWqu.Cpo4(Y>i;C:L4<dLS>kt_Yk4]<!Ku`7I2\:cP2jh3$OHgS#-tf6)R[>Yb1cLN5aPBD=]WFfe\^CmNCBH"t)lPQ>c;q;@
%2.CK(0'rB0Jlb<@Q)d:@^)rs;a6rYb16K5S2/b25d&ats\RJA$*1@23q?mC)[i1BTimfs+Ch1Js^D-q:Rs*Cu>gPJb'4/pg26QA[
%HiAfAqFSY.j:OC:3%,Ac9GWkPgp&iOSb.O=EajtkR"UT+d7Gn"Wn]<*3e+m%Yuo!H=*>'GKEdJLXiK$&j,gEucD"NuAsJ^ss+P"^
%hirjN1>PCsZfq%>EtCFP)7dR-NL]K-/m5u4$eg+?g-%e]GV&PT/qU2p-<?7JWqgYPD#XcTj=7a^-!-?N[XW^XXdr[UX#odAmui-<
%>E_OH1mA[1a<f4l:Y(%*4%<hui)H@WhPt\fdQ#3^A:ug\'j^0hX3(l58#C*T-k5"4>TJ.brTCKcRL4"tqoHM\<>I;mbi$25_[RbD
%6nQ9C4oB]art'qdf7&Q^W$M6nXk7.3R(HCepb-q]7_oD:O&Z;2f"aQ(O4W$?VqT#+=s/Bp.]O^+pEoJ*#A.=5aT*DfV/J!*4?>8R
%4pkoDW?P%-@*'R^1K/M+KKSP>'%\TfA/fAl0IHa`T9$O6D2E*:i(FH_+uNHOG)f9j7o+f@1!L"YHZb/K*0<MZ"O8@eo4grVM[$R7
%flfl8F&Ur'*/l3OR?sn!<HrpaRTsBJ-RU>aHs4r$c)sRuq$\%3LIA#>\;gJg,eY;E6tfaM`tIuuF5Xk5^^T4W8^GG;$h7(.PdBF(
%!M(]%hE[gX>iPuH/PEa7!-LCo&T0e\nJ/Um&COn3N8c_A+X/m_@3=c-B<[.@-lFru`B>"h$o]ZQbeHb6P"HL2KX3@/3bhNIAoZAN
%R^B&(5a458M.0+Mg&hUnY.6#^(8qI3J_S"c(M,]I!Z'nL'tGR$%T@#7jFL;S=TZShLBPuP*ehNq&%Zn@>JW.6km/"%_-H%9.5(p\
%KR#0J:a4MkY?uP2lQh5jY;0!&%h'p1Hikn?3ZLLT2@O]u8^k+")#;KlcOOHm4'@=B$,5ZOrS#bq!HC;Mj^0.H][7Y+#.O-8_1G,=
%?^N,8,UPhSj*M8Pmm3a<.=?Js_Zngh3oV-tQP6R?7ChFB&hT,#*=m]HW>t4bn4h6Xr_"/NUfA_uc&ep8;?2u%l#G)PQI8mRP+*"6
%_G6"MB'TWO`Ns3+]HC^_q%e8nX!hcgm.iaPDG$'uijZ%6JPpWJQ"Grj1Z`BbGV&h@*G7Vg\;C[%<32lJ*0imSN1Pd7MM!-rA&/O<
%=&8FmFHp=M%DhajnusU94Ut^i?f(8sMEbWO7`KNcc%YI6#!<dXcZRNq\[_McAT?NKWmVltUEu&R2W_+W,AZQDi^b.pcT&95%^,iG
%?WLbGHQH:aU7iq4^iJ\L.QOC+it9k5LOYXqAT0Qd6DOSThd$%L.DQV4NS1MX,-o,NQbX#>&BLH5IcD9'Yp@.NcllqqWS$PB9=YO`
%3s5lgLkdDB.PXkVooa>`U(%R,aQmf9D<WU?EVi`bRMnO9OW..D8Op'p9i?rJk00\riRYU^PG)P@6I;JU"_2(t2IOWs><_6VKcgZI
%>Z[QWZ#j!#G,2Y1V@B-8Z+uO8VoclsaBHVC8$>p#0:6Ht9od,Tm!sAAUtW0Vf`aNVE(A=L]=uj2SO^sbRAq699855q6`a5mqM*[c
%4O.;`'HLDOFqM=,4;fsjosc,F&\?dR.`Df2`XBstW(HT=pF[>,7bsUkQReCKUh52`\"s?(aGhfE7[AH(\WEiZ'6:8'_qSaVEig+'
%Ltn^r"maMJRWd*o;_S8/7Un*\VYWm&=(KrS.AhDjXV,ga[Df,r'1<_S'SEPXoIZtID3:gd]YV-tJIR$X(/rc9FNo-/HEV^9NV7Eq
%J*,>F'4)Tt<WYoF`C@ns))mNG=\jaANQVmI(4k^-OKa?egU:<P,ZaF-bJsNuGMWIX=sLZMfX\,oUAKCUD;hVi:u3Ur45(H\!h7,_
%N@LhMlE\AM:fU>'11a)QEV;k`@#Hchq&>+a)!e\JR#DDrCCY\gkRY@>*GU@OJeSa@X2Z*VL=i7.#TVJcKIi;$.l2,CV08?VOpmeo
%*jb;m>>u[(iem$;P-b>2^`%?:R1_Vm=#S3QMF44C&f#,,`@324R\LO`I9Fg'Oto*\ElJ\oPLIe7BbR7^gmQ^s?_>J\@3/^e^'8]_
%7]=[1\>^Dl8jS\Oj:55H\2B//;/D1[OpR1EV;9dpSh^lQ^,n.,6c+*=l;q4J)2G^ILgbHS#ec"gkh'rB`+Qm%d:FRJD]->]X)-Op
%WM"lgMn0?Jmk2CrFRdBp3u+6JQ<EDFU18K]Osl]a3t<qoi.cZYS/4$`0Tt.JqFk7'1)2^-#*KoZ*#lO*Q4!q2QSShsmQgukBV^Yl
%%#ceDT8,P(</1;C\PL6D?8_[VW=?%D+%^+mppR"[k[TPM2D;N=a6p$.[CiH7@)!bBd-s9(r_^PLH+QM)BH.7-ZX8#0-.Th`k]H;,
%.l5s$X<_%'ENDB>E7glEY]$6?%D`iL%3!iN.$?*59^+nT[N_]E#tqec^d8H*9J/(6Z_+jmb#pRU[<>q%2h=Er3C^\^rAc1-2RG>2
%'nQ1N9,Lh">`Dou9Tm"$_)t??Kp>Y$mfR(?jWZW$06\IrB&K[1Z7.REC;DEf>t)aZ6)A`B)bqg_?rI?2@5fij2WGA5P1=3$Z(\1T
%cB%$XNh%^`2mm>B4IQK*83a`2)MEmHp@A9mnYeZRV&dPl%Qi?s-'%Z+Ae*.9]L>JG5r`"6T1^Y,Wi<7NOKVZlHFZ1tYo:+@+:X>`
%CLWE*EmsmoF9:\^?$FXTE-?LGf5Z3eU=[#mFG=1,YX_:O0Lm.D?`Kuj%1S%J`Vqb-(Re;Dk(#5S(D0!"bkFKe'tXMQA(Zn2!ttuo
%;jGB7?XCA$_dR+s=YF(kmiOXqUZYJo61s/cgd^_?B-ZJFE(7QXBhfl5T]<ls:j9Ee_:_sOQj=Pn9oTrDC3IH6HC4P6VVoJQ4a%@%
%m9#%TZ&*R\"bL`e>_$1#.]RT#&U-f)0WnDUU<b'KYGbReC:'t'/D)ZP3G._2#b%_>TCG,:9ETo$080mpJu1;a.p7[m'co@S(s\_H
%61Fm@6&O0W"sqEi""Y^@GXAIl"a$[j[IP0-Yt=R$k`iq-`1pOtpuo&`P)*+uWniW_aNK[#.L%^6KS1GV);E[jHk@j7[!2F9]M0SD
%51->rS=O?RY^pGXjA$IA?t3\iW?&-W3iYQ2FiN-@,j#]-^+'N;[Y82n.[joq(^`[#5E@"_E)0tM#[l@_?qodoRGr)9LT)Troi6)^
%)ie*OJ5i6W*Qqu@]rKZ@C7Q8lW)S;eOMjcG,-VV9ld"^lXsg+@fTrYAW8n+%Ro#mZa-P;!1+o'mD(h?<a1XW>cZt<2WlOC*.+fT0
%`,B>\g2g&F2GT`Wp?_tUeE=QbN`eS?cb#TjDZ6oGa,PJ*!T#nm`g+RS`'6a>EP'4+EC7M9_+Re"#3CWWrFK&]Ve1BTi3.IF?0/Sp
%-JrJkGD54^(>[N=S"fT,a1fsVY"IPF)>lsB]W%8W<V.64oqL>MeDP7%k*pC>dD<Rpeur9U>PZ$?'5eVDgVr3B43I4WF1M!lF$mNF
%VJ_a'qu,l%PIk/rmT7<\-1ZK;r8q=3^V\j1]'h`N3ZhZUp6Vc[n$Dtq"2#/:DpG?:H$2FKDPuRg1qfKm[hJU]P(.Q:hpd:f%e5Oa
%ERRSKqTDmhH0[j7c0;*8WG'o(_@$t!9C_sYXo,:GhfS+Pnp"(hDqaE!MX+9_^$3DkW6H+fqkf5-Q1g\rJ%Z(lY7/23c?Z?X?OFQT
%W115<4ehtq'E4^KgiSCBcLHm?EmnQ:qT`(q]'3$M?0`H;m&%VT1qdgl_OLOLf/(0=8T3>K9?Y!u`4qpJeT_&MhFIPc?#']cCbE)-
%/F(_9,L?`-g%"*Z(&u:ZO;efbXX`ZcR"<ZBH!k+d!])K0,QR")f<M%"+qhDK,["lGL[e0W#Yj@tb""k4MZc007>a694=u*nC$,*O
%bo0$;01qpuB;j2XeiMl:O'^f%fe,6c,g#ek@sju@^Lj<e2sVJ1iM;g2<gjSPf`[#PcOW@f;_-KS/6g7?qmBB1itOEr]dLqT]qCCp
%[W_Wg0i58k5DsbK0Ni+LqC2TW7Y<d%LBHT!bs.5\,AWmo>&+c!p&QCDg__`EQ/7uMQL]s3^&b>/Ufd@b@533PjF%h#ST:5V*N4LJ
%bloPk_h[VaMSbYP4CB``dhAr\f!:u4rSjg0&1`'l"<9b\@DP2r]WbbNB]a+,=VOm\6I!]:JrpL#,dt&/0\:T7/9r72"@7gSo$&He
%loX:J\Pl[BmdBi3>?@i8X8eFi:YAUp.2uUCNK.\#$#lQl-*SP>UU7<l@h:1P`Pr5;Aj<ntChTcj;R2,(0IF0SeH-RoP')p"L-<#P
%Veg!.>b&DD/D3:h]_sY*5V#fM)D-@fm=5KFm)fjp[[t]WQ&h;"Fo8WF=JG3'Tjc1DfRrS)g3#X"`73niCm-0m8jp\SZsg6^@6r-5
%/..^`SiBr>35jPMEVVW?HbS'jm@;9']jXT`cBO=SkI=Xd''@K']*qqFOK-5WT(<X%fT0V38(9h7-XN)b^E]sJ)$S-O/`1.NnoMm`
%WhTo@MDJeE'51Z_8_u^XetBhp]O1eV'mC9uN"M8%$T#"p-'Yq^4[gIO9$m_g<*7M(iK[>c=ji?i[k5>7P5[T7?UQlA'OA$)[$W@m
%K8\@[[UI_"0g)+X]RHI1Z8jU"8h)`b>o'M0Vup_'6gT^'3.'hb/*!A#_[,E#('I?pfU8^EUHl?m`V9SI0\](XG^1($lcBf]\"A`9
%:f02.Ig'pM#4;PN4Hdd7dhM@Z\+!L:\JI?SPIb?,p;jehQ'K%QP>Hg@P`Rqp/"<%=c;'5D@BDEIC9IrjHZ=%s<3@(^qpY]epO`%t
%nadUbU`/!$TN/Et5V29"_P,@]"T_O6\$-m*g*ds@oB-iAhGXJDEQP2AG&eiUGS#QV2X[.8r,K^o`]MGTg5jF=%3?!!3Xalc0>4.n
%k^b#4r;'?[9-a\9Wf>5Oc-Dm>jjHLn=Xs#&%W'q.<C&+fla1=$g%"66Y'Isrb'66g;niboHZ?[a\4#Z1iPZc<l-WsiD580F0SK*;
%0U.)2Q:,V7\=I>9!<OmKr]!PW!8R!f(@VlH$l5Kmcd6.gL)HYQY0$_sp^c)!'a8+jA#"9OWZ?3++"GsTUKOK>[)/`;C*kP7`)Il7
%K3/OZ'h-1;-B>7-Itj@./brC%dQ5Gf+i]@uRsNF;%+bQMh<^NX'&FG-lRA4-=)>r`SQa@8/^W]**#I`"E#Qk[Q5rX816%Ak;8m5.
%,A3[SU^+`U78F0R0gQn:\/de*]\d3/nF65GJ@ib9$g(.!(`Ip6C?<55X34M@E%L3dE"k/B*^SX%QCD>\<D1<tk@5U3B2MG\-SZHa
%AIN7Yjk%<sA(+GKNbpWg*Y*<Y_&W,SOa5tVQDS1(6Ou1U-&-Q"k,bVXd9R$YLC?J#BenrR6\+TB(T(5i3(0t(<j'!Z$*;BZqB<um
%a/lUE9/>k(U$G1$1TtRVdt\WZ2Nai:SZOnskK#slj[i?$;pZNr8SW,0M-k4sq-B4G\0lXBZ<VcriJ)-AkbE9)q5krKd0YZB5>Bo:
%R]Kn+Q`):-gM!<k,Jo^)<+[LpH,K".QTK&T8'u=*<5F1Hg;H^i;^9959;tk=9NggONn-9YZ<C[0\%H.pM0+8dFKhSAO&.j0_<KXT
%7n?!"[h5#+(l2.1#:TPh?B]JI7bI:%BM<AAlX&anLW<!L[ItdMI1u_OiljERW]KR;$C7d4Hjtu&el&.A'YbdVBTLC["Y38GrhtfG
%Gc`UQJqjq&MY)\//t%TTUVPec@Zk/#k:u0$WP#Hg]7SS%=uZ,i#>L8HA(%+$l/h5>@^%]Cc`=Q[i4^1"^P2TAG)$Q1Z&hC"JRQ3U
%3Kd5D#nG'hCqqT4*>.I&#jdboZtHjn]l.==Sp6.bTl9'Rr=q@Z'\MZ)"%f47(*sA]ISM[,(0AV,XnS-nY2m6;4Tq;%dPBb-bU12'
%83e6f.U%h0"p?L2*=/n)G75fVk3%`3G5HPsN8Ic[W4>bEKPMg_`1H3(NOHIeVb)QUS-"%00OQUQL2`-%B[NWU%6WaK?uf,,ToE+O
%YqN-(-=>=mB.RDn'*=4lRIr\.M!Sq[YbR/jpEC:V,T#:gCn?!%BY_-5E!F?c@<qk1Z/geX.8rC)DnB)P7^&23/VmMQ_)?\\>GAsD
%,84i(5I,`I<GYnFgP4D-F6i3r1dOEQ<#HQ,EIJqW.e,cKGf@L-RW7[<n%k&;_Kj1VYin:m5=\E$X>S(_adC`sj/b)$6Cih:?#=$7
%0*[UBR/4DJW\WR!c_W+Qm1e`I576DDfc)1c=lDLAC?0_&5He92G-aMdM'rN"[/euK(,S>C(.d%UXrOaa5baoe/C_3HL'Z8)4*mL]
%V(3?BjpKn!eNE'-?0-<JP=nuMC%HV8bBj*R7A4B$(-qE()`&&q(70$'X+R?k7?$ZU*"Jo*K;pgl6Z>c;A9DWiFPX"*0o?neP^Q?f
%'RhY%qm[uKV>nR[#:oq)b,54)p*As1&oF`u3C@q?nPUB5;FBQ5W+GKK<U:h6'OjbsQjkea&jr28O5'#m><YZ^G>;P6q;5QdXWkqE
%_VD.JU_T$f?oG*D=XsjWpr[Cm?harJjNMSlOtN\8MdirW*ODBY;Vsp*:%jF?If"DH[WH#Y>#Yo``-bP.naL2O6X8q.M)-6tN_h]!
%'ok!s>Y)Y#/:#3Dj+(X-H<G`-@_@OP\0(p\R^HV*!2\e6(Su,:0t;O^*<PP_p!2`7?odPhiCV81T?#4=rKu.$c;13)$']1L-.=-8
%C=FKlUn8T\BA>uBjSX#ZK9M]XR#96AO[Cjof$Ub]K><'8'X&7*ql`<eUrdWp7g1Zk8.qE\?I4V$CfNFf:@2WiYaK6HChdbMYSeDt
%U.+,?\^N0WCcL`U/A1r&&6WYGM!F+[2?LdYjTYY!Nq#8U*mD^^9X,JW!PT7CcJT=[Orp'9&Y)'5EP+FMKp!/<@P.cF]O>as-K[tS
%+T"$7In)N04s&6/^Z+:kL^Kqb6A8^rcIp.?;h`7h;1C^4Ttr.cIQe7S2J]Fg.-tEm2lYrsR!;CiIf:8Gc`9Fdj14d=G:Xt;3!/P>
%,@5>HI@[U?q6"[Y:,k*j%"Tq@#%>E`A,Q--J%f;q3h4f*GIU[#Z?MsnlAFQcPSqJ-dTAf27V(,PIY(I)&duVNgB=!64MS+1Cs7\6
%f\iOf4)DT`Z]&EQ\78ah(OYk&LKD*X-O9QcI8k-[UZXUsaoB*L*(P5,Ii;kPm.G;Df'S;8^"uTOTU/`YDm?Fn'=P=Aq1/FrO?H11
%)U^7%S1?U4A@!F-gL(>N/W"EW?24h#m6Scdo.i&=hSq9_UKd'3c_&ZIm(llVU<7i"I(L;@.O\mim]Hf6.a;Ndf#.o1[47[`];@f*
%Lb3[f7k".K<(c4n2U%JBk1/:FdaP=j<DMoYqLVd9ZP^H572S]$K-JUD3t^tf>o6Es#AWZN\qchdg3L<_`uZ]^CH\SpaOANkUJ'7@
%R=>Mc3Hb>oLL.2IHd=5F^;:I^WU0[A,SG&`aKHBHMNpk9rK&j@)]48>4+^d]1?0O(RSJ0B^5ndR7#VA2"4Amm0aZKo_`G2V2HPOi
%LJ'2FII$h,35H"Z@i8\>U[iOG?!4Nk`KJE%3?%O?'n$Yub4$4AQ(O`\YOp5YFqHFoT%X@'/ZDp1OsJm'0Q(Y[O)QY'W./2Dpet7R
%"7#/pL(W^iH%E"Dq^NpU-H1_^*sJ^NH@1o$d=,Ec;@=r8n?2Auprk!J01"]L6k$U(I"PAJU2jTe4`9pRO&_2NN8JAr7^tRs`)f64
%/rG1!E\!JjTMEPBib='1LZhIVKn,d_%2.ON3Gr=8Pb_AidP:);3gK"Z&/6-$.].Q+QL,<C(!a/cd#ptUGebnEd?m9tX<bbOF,"sE
%f?BlLGPKYF*"D$T1bhJR'2-:uf65AQNR]ATaEkh?6>nVU'r1n_n^bm/#tfCB\2b^M`%t:^]!Pb6A<'MA\V:dhgT!mrb/Rna*ukX7
%f"b!!=qN0\Uq'FfX(3_e$p([4\s0;gaP[)Va/Zfi*:SkmS$@rf%!kP;U*(Y6pI^C&UP&5.8r:?I:=8?!;$#jC0851k=/Dt8+@3*g
%_2K5'.h@S6M,ONoMMQdpUR+C"J38eWRb3'`1V9Q^m[oomYDm8:R1G0Q*$q#K.Dd</=m<t4XpUK\4BXqgd!$="%'9E!cNb*naMUnc
%dqhoL>n9Q$h+H1/#0RuD?lrpP4kKqZ.ZJXpO^VaC@-7g47;pn<X%C4U!*<g5%UK<Aj]GqPo(8FqQLIX@ff:.[!1/pLUcNMXD;_U[
%irCF-@Z@;;q8D@WOJT8K<me0b;DB^M_rRUNb^Q-gIhf@*22H&WL@oFdGO+EE3Bai@';ICK=#:eU;KY+AAF&f,0!s/Q<EJ][SA"W[
%n*XFfM2of-C)=tpS%dul_m:!"i)KJk#>X7l`K^Glfq]OP/K2TE/_Lb8=L8dTnTdDVN4rQ'SrR)sM'shh<V@rfmVfZq8-I+Z(?]dP
%7F=.Z2lc6S;60B"2Hf.?nmT!C9<dC>4tesI1JIHHKJ]Y)#gY3Y=!gTlAnRJAMWI5hatW_'b#Apdok_#(,o_Tj_11*g'M>dPh,OQ&
%Lmh\;&3:O4P<h-mj/SR'[@!H#F&S%3e"K[liD5+%7Q04<a+4-+MRrAY!CJ)i$JWKT8VPra'FV&-#rZnD-<OSe<K>nNU5>;VQ:@f'
%jZNLPAN]op4!h<EQ(nj.m0;C2]&2rYno]MS%EKG5=_I3Vs*1/#X/OA5.Q;19V;$*^%GfUgUQVegm,$"cBbtZ&rVLGOgHgnFp8cHF
%:B.RP96k#)htF(gPFk9JT@iGX\O\sQ,PAU,iVA*Z;kfk+J('-jRX=GTD$99iab3b.%h;HOM]S^>QltBgRE';b)?\o08h&"J>1E2r
%6unMjqonYn3#'ou9dL8uRA.i+NJm3dIsu.TV@j7_'H<.&2F%nHTq,=]M-Zg!3!SM"Tl>QK]`34cc+Pk';5F+\DNbb]\5IdtO.crp
%TW@Fi#cX:A]8=1iCja@OlUq/unT'b?G6rQ`:+S;@LmO712+E:'Ih(pgG!JMDlS*[TaGJ:^o)%/[4COZVi`HF;Vn,U`:F,a_'7E#%
%dD"LU)T+MV`D$kgW@N2+"rD82.%XUq7%ZhWPWQ?2*Y%]:D<[pUW_S*3isgnq-l1?BM"n?ap0S-b=G@)1beXKY&T9n9DLL0u$-[]h
%M7<kP[EH:L4&5m"'4WtXB@D)X9q0,VQFq%h@u"F0#$0.7)nnn(Q\9W8pY4!'CnTBTqu-&1h$.5i?*s!dgWmC<l68pj1A;_T`m*Xc
%Z].)k.,PqJ?G/1tjgFBgCra2ta))LGGFRhO/[j8LP9$<*/HM*ZqQ7Ep;_-2fWW5$2Sk2A+/pb-=VH//S"`Kn'[]*WghaZg<(U>3q
%RZMEaVJf5lgED#-m(^pU<hn6l(Db`67]kS0%Jh8oB$]<Hl7L$DK2![:q5GdCF_8rgr&fs8kR-kkY!"GQL3Y%Zd:B$8PI+oXWDLfc
%^%9^rg4!=+[qi`g3Z5#B?hE%oPO,+8adVT\]^1#74UGP5lDg'l6rjdG4FJKo@ZsMV>F:tN8R,[1LF*Z9`_gMK.8B:%UgBA,_r"=?
%%POi^bHEniB>fG4fk\1c6?pM(oMB!6p826h+tf!h9e88(EYK-:TuKeXg!<s/VZYOb6MF>>oVK]<R&aNCJ?_bt*p9*hrQ'MRXA><C
%MRjKY`f"F?<T4T*X!BnI5/_QtS$6!l=uF2>1T>T:le)o0_%O&i.kl3b]*H=I^nSJUDrMFr)BZ@(.'LVf"'=GX<.NO4X4ZgNl\<r_
%=RBP;jQD?W$L'+!82bgA8:5;NUcc'jQQGd\+<:!%+:9HMgj/JX(gKqdp@EPL73',SXE8AfcV[F0/gr.t)B-940I.pNk/?$r1lgRT
%,E`oG2D/pO+n1&JEMm<LrL,@MR#@DMabf%oU2QYUUTS2Yb\p9G2hmY$%aMAkZD0+5m$9HFABDUojqKFCZ:-!W^ZYd5&-69,M'!<G
%LKC2dg%IU4cQuq55q\k2h4u"\:EBZ<M3tu4j$RiKmJDA._aE[c=kJ',_Sm6ZLep)"PFfK)5J)7@6sJHSb*W+<dVD^-A<fiq,_%90
%SQ@d`'D5ZRqD0+u?J*m?E=-K6MnHJ&OYf??M^5sS?I,LWXW]7TAM9TndP7,r9f"YXPpNqK@IeL"s#H#"DAjb%H0B*'"Zi`WL?MTV
%.&'AM5K=2].7m;J\;#)n_ta7S7W]S_M>:RW57]`e`FQKK.[JPr"6$UCX_aNJ8Pc+a,onEQ3;0*36"DI]"33b&!hR5Vf$OqI,>LQ^
%&`a.5N\3J]4GV_S#2[TrMtV&NZ%+3TgM6OD=[m<+ip3jQO*u"*T)96`bI0'AqrcaL5MMHaLAndK:<4(6.7F;i@qqE\7LEX?Jk#>!
%n5N0@N%49k<!ln/EVKYcB)W>ff<]!'c1S#T@J]NY;l"@;0@Anmd6m[8I.Ug_l[)3[XnQujhk$SJ;08q8-j&m)5HA&Ad=h`GD%1GE
%ruO<a0[]PJK\8542Td7,1VVS(i3e`oU9G0_bDK<1YbV.1[ajsEJA[JC<:LrbZam<uVFSnU+]aHU#;K+pjt_W\*j/>L`+6@TOg;(Y
%#j&[5=0n6f\9(VH*8"(pd]?I-KG_4ndj!,bnGRG-FQ,(B2dL6YRlcKC\JlVJ:@.oR%U2$$nEW_s@aV#I9hMu<ic:Z$;!T#JF3*B9
%p__JfJ_/Ph2YD&*U)NLd2S!0BHqs*]0n&1gP\b6.F6\@AHI:fB+d`KKD@p/Iar0<(gi`rp$nO+;-35XQc7'/h/@klqr6RV:Q@"%]
%&e_f<*(J_h6[iM!ge8R685=,]!4cOSJ(O3]gfB/=oC:U72;X4B,cLFCb))ZrhdL:K+pcF@X>0PO=E[]L'`Ia\g0EH'b1u&%ICf/=
%NJR;.a4S:.ST=OnUd/kSI57]9]?U/getP2>hEt!(Y\QN`C(bHrDm2s_9UH>_^!Bju*#VpRl-[(O\Vc1#\G[]A2p;J%]`AS6K/YrG
%X9RGg7&6q<m2-dR[H;SPb0Ll?]k*F*rZ9f`@)D(4m'*l*e1s1Xm@OlJk6U!L*a]#2`M@KQ!'c4bcO]Eq2?4CS#@N=hZb,G3@<"`%
%/7n-fq>5Ko*OgCTm6:?jeamrW^"m;h(Z1>AkH0"])Ve<7Gqf=XFG<L?2j]SC*e9&:&at\0bf%Pt'2O+?mDfb4k$%>V'tnmd>eF(N
%EGW2]^q>),^2^3aHf3[AFhVk\8[3#-n!XtCp2eR7$aAu61rH-FhY^h`j2'8OZpc#P`dcVp3Rc`2X6lF$)!,eg&`)CMjqsN\?s&2*
%M\Q]ON7dbOPFoI!CY>!DST3\6Xl3MI[d\4Ym'[nK>IiSXM8IV)XNVIdDjqpFq#\t'>S9J),E*b.Cjd5gWkjKp,F7pPWq5uPP.n't
%k8q2#V;M<0KX_HaD,MGHB*78];(FA6-6lURf,ua!U"LZ5DQ4<_,b6U^ekpG8gEqo+$CV>S(GA-V`)Vo07iG]ROud>J:p\<2+@3VS
%DKM3mk(:_I>!rk[h.$4^RQ!"[@_iO[3eUnSB(qN>PAstVq"`rN]ttY,j:<e"kmi+"]4/V9km9ih-]qeN2TP-#aCQ.kdT[M/9;=)W
%"<2!8EUOGp`5YDHgRh[AOLZa-[qDXS$p^ZBXJ$6KV78&@>uhICOY%lJQ/CHu.>Dk$CGi4Q^nMn3nsV,KeA*=?4S-Tlgt?/WHWi-A
%<rC;*g._]V7HI7D_FeKr-i5n4s!I_Z0kE6a)iIbZQAA?gMQLX)$NbB]G4_3U&V(UoRj,^I1Oi_JYJa>GBN%E):j'i'=R?."6(Kgg
%U.)4ER@[OmCKe[u@YfqO2,6*PN8(1qD3Be&1?/f7&r1%]2/sOMdR][k6_'pS$\=ERj`Jp=;+V[Z'8EJFJDpJeJ)6Aj=Mc\S:a5.Y
%6mACUEYLWHeCRKVUW:LLr?:p[H$DP7+04p5.lu!t8b.X/6deT-a`;HB"iJ1+_$7"2>7(bhdgPc`FH5DE9:gm0gH:B04>'c27;nao
%>nt8P>dKA+4JM2->-`#8.%?8Ko'fAT=I"7[Z(KWW>%s;3'CrQp*!tHhouQr7It&Le2UARJkC,O!:U3UqY0HmA6asee`ot%n'Pdn(
%OEg>@bf9MUj)FqL3I21_5M"IMlM*.0p:4D6mQHAD>&`^4_%iB=@e/CNm39S<;LC$/4Oq]siuEPteC<4>_6[2>H9!)#n)O-`'mAn+
%.b?6ahXelqAu"qLPIC:)g\8;(mh4S;Y.*qN:Y"p3TXJ;,Z=1D)pj6VeS]$jg]1Tg+:@-0_IT6HPlG?9!\>UM<jms.+AkfQ.Dilc,
%@7$nfObX9#o3W#QS<:f6jaX7WQJ+W$&ggLdmi^KL6iIkN:C4E0U5;HuJ&8^pO=TLEhsFEV>nVGtU"77oR#uE$/3ZW\3:tVHPqaQl
%R6']<=m1!9YuBBE1<HL\eY6ac]dC'./PMK&L*"WPME/qrJ.S\O2?OC_dOftab:.:\QRlLucP)+===*gA#me>6=u=,?o1$#6Z3=oc
%\r[ObgrP\$4A>=j9Zm)O9\'c.9.Igo_,=5[Q^-Oj0l4V,B-m2n2\H^".oUV9dbT#KE/;NNZnNkD!UJofg8o0$9.2'_K5sb[0XO1q
%.Zg\sY.Z*NND`NV%ilFhD!\2N);:9RWB@4!Uk9q$K=b;fLA%me,iom_V'K?G$K6ceh35u,JZL;9Sr`E6&b?ds5N1<6>?0oA=s^^*
%Ec>'Y&%bo?M;3dTj(dp=!QOH,77427Oe.Y:'L"rn=^QRW1[18PR`K$n9m(&Gc?LfaehihY=>UeZK^O.PF!JjsL:`Aja=#)tc/DZ3
%qB2k%Z5+ZiLinBVnl_Z08S*oY9WoF;69I]<qaH:**#ZK[F6BoD0#95J3P"N_RHZ`KqKYfOi+?>rR\"$0R`dd)5O\DN'J9L(3ommP
%EEhl.K+%N[aKS_0g)lRt.>-W5oL=db&9=)AFD'K9&U##4c_c;H6*;uK#elKk_5eJUeBeImZ[li46?*&C4]4`fp7\Ni.ERUE?FX0i
%V.Q)+)B*3PG@f>DH^?&/4'@W#3Q$N]%%&hClr5j2Mofp',prL^Lsm3WRoDl--CJY]>hr,iV61ao]:a10\:,njI(13Rj8O%pm9!=.
%ru-MMH&C^bWT$)7omf?=4F,p&(eHcG1J-frOhSDHD1h!'8VT[Q54f+Tc1MO;`1Jb5SBKpCbr!*)qqVN[ZQtVul:&DkYu:"L(m]0'
%m'"h;-9#g?OQfOb?0;pL<$R-GkUA#X:)!VS^]eagdJS@3Bmde&pq4GKj`B%9G!`ce@)8uR-X=J0Df)_0ID@`G$9tCf3PO?KXkG+:
%E3uJrA'E``kd/?WUj6UiaV1_lUqZf_$/sp>(Q"_5@?/U7F'.Xo'n6=`/:P0K3*)q$\WS3Q=K3^F.t+(AdHfO&Lgt6K>23MP2<N@i
%QmsF=^O)JcRd_@EH:U99Zaiprn%OF:+k0YPN>!'kEF?a9`^gKRG^CW8VD<\G&!SsSVXM3g<?We,Oe#"HB'!Kn/)A$"M2B<)jL[;S
%54\SI_*!"lOMme0,]\&I.`JL7e@<ndU7$Hs7u`5jp@da3q_Bu3pU/8\9LrCk_GtOp,3GfoLhCXN_I2R?<q-h-jblbj31*g<64Kl/
%q.L_OPk*4W"C9R=m#l*k7JDs(GD\9IJ^KHc'5ZTki^NM`fO"-o,jeei?DQaWbl3&56r=?M)TJ1R;NI57Th0noiS5^[$6Cn65UeOD
%C+_S[l=ZGO:'Q1t>\"1B%0K8ZVrL.[8D5lSo^T7*r+<[:I%#dlS'bD+(D+7ubl4:f'$OJ5)[77i;p?Jmq"'bp?)R"S!e5BnTt'Yt
%!g;qG<]"BUACN'.=I%s3miL%oBh8YiP1C"*+5/*a7R4\eh0-Z($UiJd0-\GSNPa$`]VQ;c8$-+oMR,C>YiH$M8?EhDb'"A^,gbn7
%cu@HF_^j2CWH.;l[`=]rGuGu0(>r_[%'o41@Zt5$W635ij4DWMbiT:4e=o6m"+pJ7=`/n)*@LQS-W4odSOGgXg$QB;Kt/++h^6+I
%H/HT%WnpPt_uQ6Fd2P]?)52d&)*\8J[7uu&P:9q^(.J21kcZ9q!E@aL'uoI(-He>?TW&<U*/mKU+Gk*$S!>,?fO4G'Gp6Z$6Z:(A
%i)gHt%q7aEM_rb\n8mi#TRRr*&<KEu2&-6b#[?XAa]49`=IN:4X:Mg[Zh$_Fe1K!WJEh$0Ga=$@bi'sTP412jr.XW]P8#j0Ab.sS
%Xj#&Ln9#bOm$[YpiuLUt)SC[`Fr+R:j!_h8/_LR=G>Gnd]0(3O*BubF4/YcqZ-#tk%60]%[JXY1F'SJc-RG:WS6kV),PUh+\Ys(H
%0:5Al>DZS,lqQ_mkf5US_27:?:n+6PpS_NPW9d/=[].O/-sq0mm2LKFVOd^8DmPO)_O7gG/d<9-T=43pg#1U>IQQu4d0snb`)YJM
%e<6GqJDRU(4lOi\IN/qm$l*(b_ZMZXiWeh/l%&H4Z@-=kC:4m,p=!`*/Wr'*f$f!%]r(\!>,)$[1GnOm,.a1A<);uc(&8#s>n79R
%8]aFc."e$q[2HX!rfB<'ZQqZr\X^GA/H"n,6+KuLh_`cMY].Gt//Ur7*uM]J*^9lo4;TGaVY%M0*hnIc$)ZZ.?O-*/cOTjmC&]Rn
%OY9:D0PG,IcSoO2UD8cOTalO%?+Z+ml)u?0!/l6;F],$Q3L"dhq!lKo$<^Mb`YVuRb3fJdcOl;#HR*4nUpJ%\6#'+f=P&D/5Xd*F
%04:@a3$G9k^bBdeRPJ`o%qS&6?DcfTdWjZ;dB-"#/,584#,AZZ1oH:DJNjh)7d?c;*Y5&?K=*S$:Jo5;'J$G'l)!b0CcjgM6mCXV
%TXPtE;E&E$+B9I"pp=j[9f"0Tm-RG>A3c(p"bQEMQoIl_ALf.=#:XMtq1'%qLlYOtM."i<KY(--&lRtLJk7RGaF"c.=7D?G3X*>4
%;bd''`)2Iqobta/)gmTilN@VCr_LCFW(L'*(d\X*6L80C<=D'l<co_P7KqtA&lJn/ENVU6c3gTo<d(Bh_Fc#9$R/C?)J'9[9jp0!
%':A$ngNPDaPfNFX[UJ`B:l36h/=K3[:TUFIRAlb<X#po[@"FidLj5'jNXZW+6Atb*S4%#)IBnGZCs]@d0_nedr'm8V#5M<3e)(q<
%Q_qP4IUaXK@iC#eAGu9^ks&$Dbs;Rq5o>uNY.`P8e5&R&9eI]RdI880[b4qF0o:Qo62(QgQWTKJ8!$]dR?Vh[[j=sDRZK.9$L*_\
%kR_(Nj?Bb]nuUS>r7J=UhJ7I8\F>*/BAF7:OrOI@S8$QFC):kPbrV'.NV)h$n$PmG,r61%d?;ee1FbdfT!p$7,r6T/romr"/@>,f
%U8@Z3S8@"l54/OE?Gm82KRk_lrfs[>q:\B`iNk*pRmIbbXGa];_as/#9[b%-_+&>.k8[R?3Esn0HPcd5]JqZ)]dq[(W@ERl_OZ7(
%H^4)<js:UAb_cR:>k[a&(U[q_'iulgf4\i\R=$SfZe)i+e!IlZCQjC+)&2iomhJK\2t$jd0fBi$_,,OSOs7'_=?=M:,o0YmZojBd
%Aceke.`DUA.U;)K(R@[=^*\nK;p:T*=HdBj_X(=(ej^DV^l/ID,dpG">*rp=;oC+aMu\E'P.)S[a^SY!+CV+JENm-#`M2G41<el`
%4)48__F_i>[i3%u+Bsdo[X)E'0^itLX%182O[Gnrii-4ElrG\%_XZYeMb^Nuh6<1[o=c-odh4T:T&m1qI*eV@8&N84i$tl.ajRe$
%Er4KJm<X!8f%'3n`V*f'V'1GCH!H1$W)sf;4EGbmrJ4,WVWlZ4[&=co%:GG../5$S[q&t>P]p0-(dL3T,HPD`m(%aIZJU!])@#16
%X@p7UklCNn`!Ae+Q\PWP:4(V_a:r3hB3.>d58FoAP@BDrgS*NS39S?!`W8_iU%NQS9U'^DFWsOOOGO^c+aC4`PbLT0h@$8/HSNrI
%+j\(D$uNR/\@t@*7a;?Ho+<U+"*3t60DbaPX43<Ok$e5f:aJ+k]3[J8J5@C1-a>,=AD$u!IFXbLAQP&l.4Kg.(]-C\*r`dJKamoR
%PtehB*_!=Bm)J%\7O1,-3^CMZ'`tPLNYiTLUhFc$YiZ\D@esTSSEB"\;of0\)j4;saY51q^d8KbR@Cj%l=@NpV*G2+a^(C8&W'C,
%=KZg'UV,X5;,m+!'LjCK52Qe6=AJFP*pTUDfZ+lq.iJKFg=c1e<IYJ%1rqjQmLh$_5;1]S<Ss8]D3AHG=A!mXTO5%j/C&\cPspBO
%''4"`,M3d5-sOK5YT^"b?\kPCWdVrCe-4$W3GMN!mBU'=4gD14b@66TdIp2pX!TcUIb40\f9<%IADVL55D@j5m(9.6X]Mj:KapN+
%V=QV!28oW?ZVPrFE7:5t@-]9^=tl5H.1J&O8@;Z@iJGQ2GeIs0JqD+hMn\j#+tVle-5u8PS#Fdh;^fqf"3Jh1K=.*jj'jkpHLY]T
%V_5"c;.LUC;lt1&D5]^_hu'+I`#%8*U1&PHMr3%XRsP+jg%nT*^C7hjVAB^8)eJc@(VfY+DcH*LEc]'Kjgns:>1(t3%ag11nAZ^[
%ZsiRG.ZRn@UTc:[b;(l=@]i\\Q$Lc_F1AU]b>c;k.bDc_bGMocZ<qsF%5'F1TST6-S64-$Wn<)q]0`(EA=,N=#Hl8'K,K?K+ucK-
%LU<T<EUo@_[F0./I5lr`LC@+9*<QPrcNV2Mpf,n2\AOPi4V`Hqa@gDV=Z<0\X[p*4YUm'8BOjbuQopr+QR'FhNHF<,fW2sI9kK1/
%AVUPY&EhB/Y#%)N:em]OcKTc"PFS.kGO9[rg'4RuI+a=?^dhLZ"VZ*p"08GJ.e]RUUuJslgd2EafIO+?3s/(QpIPPqC5LE,j?g:E
%FW+VL0>>H9($-)"ir!Iirh_3q[;**]\Km8J]c#s39eDM7$^e3TLdp_$hKVnRm3X<2kN::Y">*GR3]>Ni"l!>(qnBrlLI0gpjSQ"I
%2n.r(mJ:r;T/-#>fOX-H%C`c0\i#2u3='ep]oCWj>ec\YE>88:2ctOcibM_\A=GF"IU5Dk@cDUoL`6StUYMg;%Hm,MiVnuJ:9b>;
%8nUVn9__O$Bd`A.ZNea33L\:i+iLp=]-ZmWkI/RZrAXu4\Tt+2HL:<n4SVBf^_mGl7J.k6oL3M&32NT\DZc`dLYetGp_;l?6W5.,
%l`+C*:KGp&jmNu]n$]+=6hBWKe;j-C*MaY:DT?g]Hue!;$DNpc5<C]?kNhLTrq=FIT'eNhi9^>!.M'^^NQT5[F0c#*D+6JUd`i3n
%YZT.)Oj)Ok+cEtLd2meSi>:A4?D,@Bq\\dWZ;I\tK]9?25_Ea:g<K#"WFJ5i<?&=%k:]b6<30B\Me^?l>8=Vfc9!r/+K#ffb.NYG
%lt0=GS)Ab1O/G_BeQrOYKX_P%q+t@&O,<?uOVPG#WF6;lB<[6'ib38%2;gHLeD%b1Ra$ncc$Yg9;#\1?Yl]FmR-%<-bR18<1$g&r
%%/s3pdRE]SZl42[B?!*Y%p]B^)t&KLb(fe1dCNPr^,(r:Hf)SU,l:jpp=-^hhKlYGkl5_;qc`Whb$UD4hmJ&kZLt'CnC#K4qV0=q
%]pO8Gl3VW6omTuS@.g%Y$4D[374aKB7ukH,pE3Jn(i?o;^G+a2S[Xi?`^Cu[eVH/4#&e<"=6r</1fU$O_4Q&*f8u9"#'fM)m;r0Q
%Nib5,W3q*)\9b\LY1UdCSBTFe9Nk3j!`q;'r=2#c;KeF0EF'/rf@pBHGG]&QQk+GCVXicGde'C7l\aAumu8]I_4M&nENn/3J@_)i
%q5#+d)R\MRr`/(FkPDc!+8:nd@gG^sdtqa_UAZk#`B<K#52(NP\GF'_b3d_aj<4ce`EB$3q>U&(as.=(m@84nLGVmGlnuR(?i0Yq
%*SVL?_q+h#b14i2oesL#h]nt-#SGI4hPTX4m;fAs'1jVA/lYE'r.O2V3m^8BJ>9[]\&@mMKZpnOGOIKc;dme+G?,8#VK;X[NbpB%
%@;GaHV0-eXqHUf(+duo]5VBa@N-h!&*m!V8`E-0A-N+,r!%Gi.fUV4?%`,6E<[F?O]38A)l\`r2&'$2i_4M&r]hb^J8;LKr0C@EC
%W#`>?Y:<U<f@Lc7\<#,Z6Nk6$plL-"q=J^[jTD_f?.e8[NZD',_]kZF.d+KbqtdR*^g$&HnbB)f:oEb>3"+Nr^9hBSUDCMOhl>K/
%Bj]cYi+8^m0m)Dj[ECke,CZ:a51#NaUA-$):2HEj*>[m]<[gr5r;)Y1k\Y1BD)ODqVZr!_h.gmgU!!2-*SVL?_q+h#9'b[>odL,!
%,@tB+'^T*Y7D)0=l)!K])k!S7bJiR`^U[^)hA<'4V<WC&]%k^dGIbmK@J90&,p53^fImb_0afl(B>i8.a#7je'@nO.,bCWh(I$36
%n0cP)c^2?"$fLc?Ksu9Fg\^"i:R.*cJ?Q=R<'l@*F_`3,EI;5rmi-(<(&Utoj]iV*Q1\R$mUb,O;YY)4^KJ`eL@mRU25u/F2+f;+
%o^Y5*9clj<qU"cKaC[i=LC&SGMHG("Ilu:hqrndXmBuT[Wd9#B]tMtQT6.hN9s\5FI']nKZJIdLX>Y(nMq[$f9pqY%4>7aZ`Lcp2
%<ih,lhju'D(,\nORkCsL%3&JDdpK/:#bp$gRihCD?<BOp7@0Q+4Cp2Ug(VI(3TBmUEI6[>jtYrjDK:#0GsB:Ggg0mYr4=TI)$*1M
%kuJ?pkOlB*K-T65He)Gj$Q_5]8ePYacFc6)aJ8tqFY]9.`'4/nd^j#B@M`hu3[;:mNuCJDObT9+l:!GRr$fFUdBJb7//oS/f<!`d
%AIcq>WgSngF4?G1=&*87Aipk\3()63JKJL!L<po5B^A[-`+]98-f#,3nWHP$>d&.b;!VdL-nFQe92adY=$"+JJ@$Cbprb<FFTrJ3
%<(-Ye7S0^R<u/e?,s>Q?F1hY;,*KS^<M=0\?4&fn#W4<!=Ilu?gf)^sM71)1gGgRd@R<[M1&3h7[ThTrTj<8/JN2@uB^e7'P<qk%
%b>X#'_F(jZK_EE_fpfU,Y72>plbX_LJm:DePQY(IA.4b47_nSs.E7eR=[IU1!r#Yp)EnA$'bWl%Aa?Bj6XCTAf8NpJ_?b`HeL3lV
%&qtO?^l4Rf0Bp/W^f*UpCZ`4U-@n=djdFoCd4^^@nhMGG'nZAoXm_jgFrgS,36-P0(up+p=n8B/.4HDN9X@m]c:bZ`+Mn0Fc9hdg
%ba,#K`_ZBY<[eks*]5Xp(;JpLnd,Le@q).b)V;(5Kd$04G":9I.pApp@IW:3A^&J_(%s(jP)u7DF&'$65Rqiu(aaTRar,hCmnT"P
%C=iY0j"B)IS+-=-RHY;gbI$D1#_&>KrT`tT@hV`s7_G(!q.:focdlXEfG!BKTb'$T;rN=toNhWI9Q\^eqB^\.!b%!r6Q^*Mf%:B@
%XuB#RdVU.:n-/-`35L\3F,/.!:rWA]@%$&:MD-P#>g`J@"bCO/>b/E_&RVcHa.sS(j#73YeZd9u$$6!)gT5eH!(]0Yrsef=/;@8i
%Ne-doDS3gGF#,(YLV\A&od#L<:;T8##u6hA^FmaUXMjVA$%M5C<4\<;O?n?4($8H3&pqNjXXKJ\SKQV!U)ml5eHkJoMoe`(?ut@q
%Kae9L&12/#`OoV$H=k]J'`D!^-4'uZ%?Pumb1tX9J;)Y9UJZkl`#SOF';P0]l6e=!+KQa^0QG6^TU]q3SiY(Tp->+emMebH0_ll)
%2>UjbJ/l6:i1+0;=jge[.GLk$@_CE)PbY2MPQbP,+$#4OB$/H)h;fi6CT=\^7U@*[3XP[.N8\di<2@C]K?+[W&J\&Kgt%u]9rW--
%W#B'kg4(ZYgYC7\a93*_P&0TF>&[l`[C1N:0]Y2=b3'/02t>aTJIPmU4-UuO)6dpI#.uSshV\bCX+PEQP?;g4]QQb-7/;4/a=F*4
%m4dk?n[qS%XCB,*:HB[O'g5[\1<>)jr>`9mT4HZ%m&DH[#+P\:1VoNU>:HA?nWr"5$IKb2?Z@oP)GCr\^cb<<[jlLGm#rr&YqbQa
%_`m\uFJ8L>[Z`Ga]YfmrMfV*I,T3;a(0QniO6eoOc4[Q:=`hMZC`.U+_[]GBo]%8@cdNLYad\gu3`,^ukD=crQ75a!<-NW3G]>(j
%XMKcspW0p0d5bSW_V?Z7Mka^GV@-i=Sg;mN,tZ'C1iEEQjXWq4";Su5?q[F#IAf$X*+Rfdk`TlsZ;=*<Alt?5%R#^pb_/[8VB)1)
%[ND`PNMJ5[QRmalWiYuI2gAKq6.jaW.Ih_lLu#$3;S:UdN,gGhF>qh2eA?X7\rJhR!mlP>rD=A.;QA%g1`=5Z.8,_&(ghkTjAY"i
%@g\7(*gIh][8]g]b=Z)E[8@YVCc+:#?L_$XLJjU@FOM"[61S1S=F3debC,=lG)2(q]R^d284rRW\S>P8/@hRI,Dt0J1PW>Sn=68>
%o2,T8OS=Xo,Zuf735$&"d>2Q=\"FP<kaSUGSii1O]SM$$X3iP-Z.lQ%Js:qE3$=]rC&oo_p[`W(+>VkTeL2[:_d,"M%SIO5=SCB\
%TPV\P")m:-#/r#u]&j8hX%fHd8k9?Yq2"PpF].#5!E[CE7Ag'W=K@TfO+H#Bp"K#=29Q">Ohm`)dBVu;@")^kD_^V2a!h]32JlF4
%dAgVH\GD-InkYCW1sr:WZDsV^ln\(rKMTR-_/NIa?=9Qq@NnNo\^XP7.V*&Jjbg(:c!!'lJG^=:RoOr3dj5U0?XQVrPI*37XN8f>
%.;B7N-+L4"X5,FR"66/_S3tT+*qY/@Y_p@/4.7LmFM9ZP\g=BKN.%5KA&\qcJ^Zng2/GX@D8_t'n*)fm0g>!mqYo(QT*O$ZQYNt4
%BUra?f$S$Im!;]R/fQqA=&#i'%DJ_4H$l7Rr1:`c:3bsF'Dm6dHJ6Ojha.6Ll)SesM2M/.P8i_[$O*AZ5ZKLN\kK4^"$'g=Mo*F\
%bL'J'.PpiPMINt8R-@nI.1@P>H<9J=9WUY2]8Bck5X_0kUJ]6jbXB@Lr@Ajjg:GBEl18HG+[:_?LY!(+p*=5e7?4`!H3m?LBXo*O
%jb)CDY3#-]niST1>\/uF<J*mE35m-\k^g.Cn_tJr`]'@d;'l#u5f8TbD41oQSFgsAIetciS(Sc703_;u3ks9[d/!&<[8o1l@ZJal
%&=5hmpDYq4oLW=57-A^HX4BPMQJfJC1%_W+GplN1Q3E/]*)XQVQ(<RU,Mr?=O`2MQXU.tsb3C9?@2+hXYcOEk5^bMsd+A`s'"M(S
%^,dZ1nh`TpS*@jo6?J.dND*6WfX+.e(n:j8,Ian*];eU9_45XE8\HQ_&,s0GG0H,d`A&E,qD];9fZNSd+H"8B_6K<OP'@1KB8%![
%5J=tcat-NG7rMf#:To6-'TpLC6\K^Ada+V?g=#k6eA8U/qCt4'KQrtSUl4Tcac<)n*6Z4:Or=#Eo3Qi(+\JHe.7`kEB4hM@!:%f2
%WJqPVCTq5eBQ,FV$Od0-'>Xl.m.mGRKpJ-G9VT$MJH[*`U=`T?4#V#\8QHb9*3!oK>ui6,&X1jn-%dhSegr&s!I)rm&n=0J0jid>
%9\[l2l&5*)I!l7>]F`"j1.u['4"+\gkP=Gda%ajRaCXk;7>#nf-te7"S1g$fS7nt*cRW6Q<k+?ZM-+^Hb(_0?9]@2)qFYJ.eeEMf
%,b3C'RgDGb^VgbebeRC9bX]WMghLCa$,S^J$O5We$q=i'1%a(pfXRIj(9Q0!XtA]H<1#rPO%V$35.g=hgRM_9"N-u$ae;e(2'a[W
%%p$#p^!&Plo<f/W2>M^C!!X#`R+`tbHL@]q`Ru:]0Q:0s?EGBTf7bJ-83U'`S_9#a!\)8j-in4EnDVY[\>?j"`NCE09=gnk^'9@S
%R<B-+cUAAr>c%C(h*ne4X_[FU$3ipl8[e=0>l^s:b!kDZb#tuJAt5dU;Ke-r_e\PNN]_I?%baBng^m=/F1NNq6VtaVI,tIJCSQf'
%?SOD?3nE@EN<pl\%`EjN9n=/;JP]k!ZY,ruMMamN[;]R4liU080kVS%_`2ubX-,Ta269e\S\ar6&Zcr6]4%g9Coc)ERkB6;a*-k8
%V,"*<_jh%J/7rHE^F1)h,"'"A3*Y1f/q]h&pN-bHNl2C<<cj]bhCpmfAhm5E8um*U=,"IiXfJR+%Bc143j_Gq_IfWdV5m)5UD^nQ
%$q""(-#_eXR.;uW;a!9q[rT,L>HL2mr=D8sf3)m"ILaN*S@"%'Orj"Q*.hGbYpfm,o;.)KW3GTRZNmCsmfrZfgEWc9^aqL#M<-!=
%ZY*VMAPVJL/ZOo:a\gNMmKpBkk`Ors\eilI'm@R\'uG,9#Q95<Nr2WeGauc\f#;p`W3KKLS6&C)(S4IECY8:E19N'4#<52@oa#:f
%rNVF"0^mUtYcVnM,im?saaLlflb6*8DiiYfH;42d3P?._dqO_/Yp<1?&IMRi]0?%+3G>h=.&ORjEnGYU&2bKpm53;$ihE,E.*UJO
%EX,n0##I8"]U!4AXSNNK4/+I6RB.m4Ot^6G1b:^-ZLCMkp5"23h'S:5LJ+AW0'0^Io"Ill.$(^]9:Dgu7:%`)[ugWhk+sF7du$,M
%?-K/mWbIOaPS$?3q<-));j`+_7o;1t7#X)M5SJ9X$)u3(<kq/Mo-JZ]6']F?MQ3!tDG"[UG6Yi8Rt(cNZ-_c'BIGd(efN;HW"9h1
%Ya<YISY"aue\@EOme<42%JF0?C1M1TlaffmQs/-pQ()Y8JE_8=HRr)YYHsY0f2rd8M=j6Sd<+SKD&s'cN;2?JGne7IKA7cb-/''*
%&)Bb:!Z/sQpS^L>S=n#PMck8dg%!skafN7D:U`X(9u_DKG+%@E;YXkS]GK4;+b%1<Dp/#*gYfVPDO]st$*X7!G,`&[^928Fs$q[J
%8:`h9O-c/AXt1MsE<X]*_&Z"@2T(:-nAk%A<5D3pAs3K]At7>LJt8sc$VcFf+YEhWAUo<#k`PGUT,@4gr;:\f_9JMm$8hO5UHoir
%D?&P?-YtsE4Q-d*@KtZmr6>s3cf@@BA,*<&9Y(AicM/eK7ql!!*p4&l0nc*rF&9(VWprh>DcY_&@[YgW@Td.VRIAHPeh**pW>4[L
%Kn1-/d%ZZg.TP9/RSrne#7@[L2R^BEe5q010e-S9R/m]PYh6%I9@4"bTkZjH-.7!?)@)"HiYVel':SD+:g4"`Hr/8>6tZL/0$Hp$
%Y:kV;'\T5`ErGr8cTokU,G=1CnSAW*cYM7g/O,S-[.X"=i:7]q-][]:\2fX1`9.[n0`T<!j4/f^YmsrlX9I5W\j5?R`Us!u6a4^5
%]qPRd9YY^ZM4Sr*Zi5'$.;hR;1`;!FQfU+1*7!6B0(.mBPCBIo.a3.AB[>6*=P.OH2I2RI26PL9Ip;-IbW-"'VQUZ1MgEkae.'E(
%+<<G;()'8)QrM+nb)#r+=1OO,0s=)Fm4'(_3GY&W;<=9kj>T4)R@bqH,'jmu;)CNm%.0uJ0ZreUEMRo:;KT>\.1d=-Yk;YH[-R;S
%$/7^nShQmta<cn3M4?gDnr[X*ouJg#Gq(SXU2u-'L$q%U2(qWgkB253q!3To"tt4W<14EP%e"]Zd9?uW")^h69TBUYRc(nd7?O=+
%/88=R$esCJ_oK@B?ml&G74;8l&9\AJT(!r,]+'l3;3So6CTV\aJ[AMGLWkM3_&8QVa3VpCk4;7#Qs,.!_gK(T@d/6F6Dj%@2OYO<
%@1q$<DtXYG+eE5n44LflH&1+#b_BQWF-#[JHdOQ=oR5SsgbA]<bf5=<Xe.8V<t]6QIIJ6o@d0:h+<WHN)d;3NR/<tM3]g17PRs!;
%(Lhd@imph!CQ.k8M23_t0b&;%1>t\j/!U?odj`%]NrE%.Hmp7rJZ(<071fc<O3b7qq/E=(h)o:KLZ:P@kE]XVa1@9)f*PM+1bl9A
%a>h.+)Xb7#7&#B6mb%;3'Ci%d[h2R6>ZqM)k[2p[.aqVmoTkGogX9!d6Q6c,2PEQ@[oSctY$SR@8>d>s#8n,Ia`0][K2S]A+A0Jl
%cM-n^aUePDib]5[HHKU)d"&V4neWL/cShcLZna4SmL/kcO'\"R*U]cDqG(,#K]k)'X-(c'M:hQci^-CX%lT+i7>%DPJT`6KDXEVK
%L9(o^a\eoP^Q*+=^-.>t`fS'>d5TXK(t>CrdP_pNDHQ%8_P:M4]%17RAR8TRL,/0"K>&,3A%jHneC0^>,3Z:.Q1Sh3H8F9I%7Wa<
%OD]S2^2nUoa-*]J%@po_nl`LApS)o,j(;UtDV4s]"0O=P$:ZpY?I84QF'EV(%Ln5(c#Hrc?OsZhRhOCQ%#N"X/6kO/?%3IR(/ZoS
%24f+4?/i:Q!<#"(?&W;#P+;Rhj_EBc^\p3=*U_Q+irT)MU\7A13d56VQN]b"b"ZtLa7QMkOEap)d#$gUV:]^da:=@$O.p#[Tl]0n
%jb=dk@Y]lge-!TG:AWuuLC+c@-KSq4`rTmUA;ImI-GZBPj?g+)PPKc^CN`)9W\gh4"VPT23b.J4`$j:aR)MgoaZmhTE0qV)[@YOL
%"6D,bbZ=CZAB0^Y\7"g4O]9@U$[`Q.;#*5a8HH_FbT1caDFMCV6hWggRm)[PP4St[f5n>CGi%]:P@g4:cVn;Y&J,=*TtVht.%G5&
%\2e'c'EW!79K=*e3!OE,>A7Yh%^\!fB&$liA;oC;@[-+,HQ+OcW^J%>04R['I-`ujX$!%$p4%7m+@nDhl1'F:p3(L`0ZB\f"6a-E
%$Y6;,.:k<qZ$?;U:huroEI.TN((CFh*K7f>]CR>P.U-W;dZT]-PZUQF0c,QO"G=l2dl[6mCH/Fn;r3C``[U*\T9^[1Xr>kC^hZ0/
%[%j6CjXZa"3@9I(Nc`kZrYW6Vdp][P@_nK#EPMW=a++W\-4(IL/?2BBZAtk?J'OQ;`(C;=Pej3EasM=!GYM?/FkknbdJJ*H<Tu[f
%]lS/TH66*'7V:/i6?L56#WVLSqpd2%*cemI*bH>3TX:Al"h9dt7[_h%&P.`D(Ju0P.K]5bG\AFQD6<qdl@'MfGR&#3[BkF#0uW!G
%4:d#VS/.CaC>,n\[>78.Fk9Vn@R;n5?X9U6X%U]tkIHj]PMpoV]&S0,KCr-mBS)bB1UJ)q&mgAKX@Aa2=$el:7PWYF4km!@U*+-U
%&*Zam9l\6COaWYp6t//jK^h>[8p7>q!MP@*$Bl&rbk=WR.6i`f+RRshd*;R=_SunjME2ZrJ[I>Z&!GEH9=LAKb,;Y?F)l#?EODj(
%X5p//YTAb$[.J("1tO6L-l,fS+)Ban#@XdqngE[OeMSBC[S7c,QmPo(GUo/j/chh2n:^P@5;AF7O.S@CS)1mo&J#i+(.Ho/X77:3
%7qOrCbcVj_DXf"pUB6og9]tWU6^i"Fa#Gli#.oO+M,=egT$?mDS7Lr20(3rIq.CZK&if^U&.'HgTl:Mg-V;Os:)G.MNZQgb(L9\4
%=I[6#2IVC`(d=&*f,Fcl^f%&MEteBQ_T>@`68QWMkX6R;(*Zm(&6Q.1@)BWKITC-(C4"*ScLG(!nECFMVpudo7;EHHJmpa5=MGc8
%!%0E[B9C&EnKh.8M8Zs08^'F1P/"><>$YN`irbO7.ZZj$-Q,LSEYl!"XmW#[Yl<"G0dJ!"60gAc3EdU-VOXb(%*I@F8RU_VN@Cgj
%,oLQcf+`OsG:.Z2WJUnrMK;rRk:I6,;GI9g.50S#f-DLiT"(<e_H0<8%Du@]]ETQZ>LmgI"KN7FKhPq=ZuJnbJ\==.G?Z1981n.f
%Ot,-Pcq-]1em^MrG`5f?ApLFtB\d*j8h/d.)U%@es!=946NPY>A"p.i_c".U.*s<d3/gJ`G0+60rm0sJTbSHDbMJbR_*fVWO6VQ-
%/BB([iOa>'=330JR()9F/>==r`<GX-d28UD/QlQAn5efhb>mP4E4j:@J`=Z"16WYJdT_DO7(c]g#oo92d%W-]D.s?k==?]S-u*Qh
%jNB@lit#NC?INq'KtM%05AQ7RXMmON=e409"qit.Eb#D*)R<g97B=t`TnhsKf-Y`%!(j:``)sANT-Og`Q:Vlf$sB[<hgR2c@P,U*
%II'm@:%#<pbA!L2hL7GuQ+V7)[5tBEAf%i5qG]E\%hi=W0?:D]U_gu=ds6ZXma8b5/A)O5Q7P<[WLjOH6mTs-a[@!i&8Va_Ded)-
%N?N*g9koA._EM!P!BT&oK`qsE<?d)9<(HhK3+:5;h93fnERQ<;#4.#i)Z(oG9,ud"6a<c54M(1INm]L5=EaB,G1D&5Opro]Oh?uR
%?/8mEn&\:n:^^c$*E%?T33$6`TS@8]_Kf.Z!>hHF!t=#[;rK-0Z]shi@fZd@VmY).XbW1gCUmbGn-ul1Z3ilgA(%2S:p=Mb98q92
%4_4fTJ/.7JEELIBfJ#sca,0S'eqhA9P/TXRP/\_i/rL7A6$A:3O!b9sU#&D@$Ce=k4BId8AB?ltR@2WA5QLr)KtE`@1)bKnF?pNe
%F2rIW%p<#PZ^8$:[`b[IX!2$)Mi@21*gS/hK=-ML&jCDu(J2HZ(gcZ"8dH^CYYO0nL78@CBMMQKMF3U5g%h$[hu>A7Ml:KJd`9g?
%;H/V_8U8?`#<4GZG*lMSf$%Du_OOOc]X=ZpNhA3kAoI_`S77aHRrBNp<J"kc`)1_O!.tj7;UZ:hm2u%CKje48U,(7ad=V^:S;C3s
%,hqgUH4TlNhc."_I."/u-Le%U`(gfN7#t:V\#V8<#VF&ciGX&'2PKK^+?L!(Csn$EIgm0rX(55/?nd.)^5;I@8/WaB#$$P<fpaSa
%/deJG>D_odSH`@*b6I=llQZXiPXJ:AQj",c$t)(c41?n#h'Ps?:#:eF.]WJM9-Js'95+<,EX2aW8QXrhC6K;Y_$[A1YBdPr;;am$
%QIs&:*Ks;rK,TZ>]IXu-(3Ll>j=)QXfeLUlJfXV\1@jDc.SqrHY*Nt[bQNsE_d)t&nn]3;RjsIfGf[@g8?+rj#$JhWa"njN6'QKR
%hF^^hc@K1.?gfUBj]R1!!#Ihu")H.rW*WL`giS2J]Hu$cQL56mM4P-n:Y%!WN?>rHipaVCb.;i-5a<X-0m_!U6W3JD7%/(GiSMG5
%n;<n*QL"Ho03lYUhsT<Xl4jOD4gMQ.--ejHVOp/ri7Q3[(T9-A8VUV6)-,MZN-H]#SR3>jHQF8RSYqI8R%0?G#rP-AEC?7dbPH3i
%R["/E_Oe/Kn+u&WPQ!ZIaYf,e8Dfb13CT3RIo=IU+lte6;]1;p&5i1@0Cqg.Q6k->WF`XjoL!3RJsFoQ6D(>if?e1bVA6ecOjFVS
%\JODnA#km@*bo^*Ed35NW2d!],T"'g&)a6LMBWdFOO1pkYXi)7/:/a"%-a@A/pen>UOf3+:7A-qH)sRmo(AhRG=/B$dL(OFh2C-A
%!6_ep%$PT:gN2`a/J]>nO=u<7.6n@'RH*5sSb40g(5Zd)?-XtE;7#TE#"(7iH@U@Ug1KL>Q>j^<=5*jNO"$Z@j+<ATX2nf^%8<ND
%A#*k8+M[/@+OFnR.n<JC]dq"Zo<PM_FMZoF_O2m;]ojG/E"-*j:qa)/j+N@XM?W#s2;X!Kk98)QpN4QpWTf[H`!b<f9bA'M6(mAN
%AJ11h=R8,JSE*4lG9[8.Ck'<`$H=qL6,S>X*(L8MNcD3>U!>Q\:m(&gC6\Kt?t,)1a1Xpe6ba7F28SrGW61CdgC^o7SXqBi@\WJL
%p1q4B6!a!O<^Z9r@&7g+J@2BZPkqiDl)KZhbg,jo,,rY#Ju"0207m2D*d`,Q-n<W=ZQY2YWW;T]k0YCk?ed@4H#=cfM\[Dl=A"<B
%[Ot6lZnDT_JEr@(.1$&D_(':HLp.D2eE>PC?/L^h2<^Igr3BRE+iA9A-l\[R,THVY=D3*fR[kkbn06f8"m7sK(Ok.kWWk9P#W?I[
%HSW1T2_Ak;QJ$gWNEr<>ZeRPN%17'<Fj([D01AP#W`<Vg%53lp*rH;XY4uNBF/5nC;!+HJ<n6hidAq*/7CBlefh$.H'[7tgdutl/
%RA\S&GoSaq\[%r30iNV?Ht7k8d!M-V$p[JQOm@8Jc(MU:RnhaY]I[SQ$-g("#U!ht9O0tHLkV)$L(^"c5'YV5ZahXiG*:Q<1"AE+
%jc%JJJI]"7ehS\&JU+"kEV,1901@;:Ea+c-,p8q`eGl&&pFa;EAE!nXCSe2%:!bnKVjlta_;9C,'W1+<k#BOe,>=DmBbr9$0L+Tu
%n7F;*!k''Vq-mT7'/\_mN``"X).u0<E+:G%Z"TYZJ-/.P\9PT<fJ#[EION./Qm^,a0L$TWWJ,I\aZk_7FI,\GM;c9B0[W.iBZo`Q
%UQT_Uf.IJ+9`kL.m!C\8q>AkPJ2:R3\7n:X&'8l$2j^bt+ZD]mqc8Y-c_!jf]7fATM'=+&Rl3ei2oOj4a-g<[]iC#;_<JqU`u3.1
%?%da9f(AfGX'9RW9iBbtFK.k?Pd-bKc;ZXqTiA-J5msq>B@/.ALrCo=0T2)$DPrZigI_$Dgcp^(;&5T%!Bd?,`kZl3Qd&pV;!b@9
%P$^Mc_:]jAc59!BAJa9>Pq:@_8&]N@EW4aM.1$,s^05nVl&%ore4.lW*03Y+]#CR$p5R+;l\g_0$71%N+j,`pKd;-54tbeb9pG^R
%51n(6TP/Ir"d>*V>Vq2([=Y?7%CgAi`j/"[;,&^K>/q(Si<$u:#,Fm)A`spIa9bMb\J4/9P9K1R:*Ga\E,sGXjF(3/Eir"."4It1
%E+#r\6g4k\7(f9>-M<D]/V^NS`PbbW(tk?eECT0Mg+J.^&-C<Phr]j6Ne[V0Tt@BiO'B7`_V(KAGcIZEklZBDE233YMFqXYjHY:M
%R&D(Q2Wq7Yg<;Go$khc=>>/q#9LKa.kmM96.t*;$f6KTr/"@N:q3%'Io5\,Y:)T^E3U+!4H%*gJ#)Ks5d5.Uk?3O^hCR%U(F2RA-
%?#oTY7D%ab-WZ+5524Hm8+bJZ1#'Lc6>Qlm#j6-kd`77hp0T,$L$b6T7)hDA`X3IMqE[IkKTOZ\RhWJD;'=^EIn5U1X;3K#$Rq/"
%N*J$`oM6:q1TiW9LkgMS#n`k$\P4(maI<q(fn@-UqMoOJ,=IR^ka]^Z]d2XK/Ym(hDNa5a6qK\?'pJf!ouMl4@*jnX)E^mlVjA`B
%A!3V0HHSTUV=/_3,FSCHHK]V%JBJ[&<dtp(E8L4Rdq(DfYF3bDOZu06Tod:kUG4E"f;[<EnBU\oIDY$>]YZp,P6<tO:DJ4k7@J9P
%+^q+W=k/h88CCq\ff5iUe@1,sC2qn8CQ/*BiOh=]Jl=!XIE1SL;_hhtLLP1F9Q2H7CUH[9)O,9?Ff19f--QUL0oN0g1L:E;5)nW2
%'r36&#Vi)m<\_e@%P2Sj_((4O99=S@pSooa#.7Ys`Q/M/WG\nfNZm]'7W6r)!"SPl0[qke3oCk/HuAL4C$?t'Cs_aD]PKpSpMq0=
%nF/3dKqQo:CJOquI$mc?=l2jhMI,p)7/&-<AT"=e:\VB$g;D:KfE.)%.%3*BaP?u$g&BSb+>!4P0E8Gg]OARCR6d!-D+.k?c2F_!
%>&GP]\s]L\ggmOhT*eZIc;q.,hrj:PH+\(Z].f%L:&;b$S3kugq6hd;88PNt-.],p_42<\YNg0BHsjT"[d0b';k;rXU$^ZOd9`##
%69Ah46L7d]5::)^gFa5KW&H&]=N_5kP(#S(>>F88N/,>-FsBAqUl(eCjSTS7i^q@26DmomCu9?*k</,oUr:VS6!b]ZkAqo+P'>9M
%/c`0Lq:Z^N@!b$rpZ[&,94Zu&`Wsh%:*!*_\bP+9KBBBLG:@Mi&;)V[07s0c41c%73;Db*:t$Wdc*;$Jl@m1)itY$p>2r-YfJ8?\
%F?"2?dK%>DXR70$RPB4O`%;jG1eL4"U-bi:AK*BPl$I+ne$=tB[AF#8K#Gg%>'uSm>f:'&=A,rKW:B.'>7s:5cAp!taqMXnJk5/f
%BnhtX9a^_"iTZ_0)/&<$m!*>t/m&Y0D#!e*/3p^O"EXQFfJquBeYe/[MHO#/f4P8.F6UPLc52!Z)LgTjfM(F8b=cUB*EO8&8:ik@
%X'Xo+<61/4FbgC#ae`k2Q2aA/QRgak/4oi`rIS[m0/?PMD:UJe7cXNL;nbXHE2qd==AQEGEWQJ2/s3D`6j-(2SHo@GhqKD*HB%`q
%?\e6;nW!m2e.ZH9-jn26=aOS<F8q)k[`J%2f2Q^USF?=#:[4+[R8FP2S:bC,ZQ[*HYMm^\8?-n$eCXm?1ud(=$k96uZr"2,!n83m
%9!#086(fm5^DfT^lNf)E/V4Aq5q/DAb!B=cf>>U4DCXGZn3RH/E;<\1"g<AUS"lSa'GX-SEmMIa/Jb^r8,0.V33UKY&eVOD5u5;A
%W1cTg(%3N$@s\eXM,AqsQZpUrL6A`Od>i0LW!hO!m:NPLDq!2g`P:AJ:W;=*Q/ToR:)DoemiBo`g2<C3RY17JCjQJi*2JA?m'!$A
%3"IgCgCg3<_8kM?Q^^uq8>4rcTsU#WC<nIoA0mUTkl`n1=:JHgQ!o2580PhWoZPQWkU-h^(SZ*C>,h"dO<Up,-1e:W=Ht8(EpF_*
%/0nlEI^i'&"#I&\Fp.mX1>2UL_I)K^;q`Hk?F(M"%H6^3L3q\Do)bG:&T:jkq<D&e^,rN=bKu:j-OX?lIE+!Q0Fe$1QPOWG6%;E8
%@IG*>=R+(/XMJYUDm^FnM9ic5/=fU(9'JNXpH4FF>g>lZCKi:;f;MhXfXVp$,BVSGCHS]6#V\;4W!7@Oa2LrmU"[cj<m.0SY+r#C
%E[)_RTC[N`EjX2!?SBCZs0Q)c%hA7\O3\5qptihGjB.,I4ChHG\tF;:9QOTgTA#s[gnrjO#6#`cGuB,2DD_TYMN0G--aikcW7p?`
%h@S?_(>=U-Xq^BLrR_Ji@r,PJkEcM';#2LGIi_MN/Gn-YV$E!#_*8XRddFrIgkii\ZsOk?f;,fDX=AH-]/MhV\VFI8Bn,&bRF_gp
%QC7g[?9&6RCD7_7C`aogQg-FEfC#?7N9H1Pa8cmm!E0:k!+6:XFkc2)bHm!K0sXfsY-ha]K"@N`9d%\+MuTf3)=U!DW+%&@:>6ZQ
%j4U!KaFluBRO[&.W%ch>K(,;D?J*HB^F24>gV0kb:h;:WC`<9pFZo)?g`IK]?"=IF;X2BdB.gb0Y+,c#RI/YK%(:KcRjk:D6X-hX
%P$`_aQ^pkCK!1I>,r%k1Q>@<n,uhA[D-!Br7d\lI7oIt]MsI5Lhq==5jQ("b(F[>W$;OUr$almJg^YnZEGM9j=Cp1^MDMWlIm$8,
%DsXH/*>Ic9Mru#.(,_&SfP=aXhpnW3YLKm$N=D5]V'CIYV.;7eV+rm+B=:DVN<CCVpC\qu[Q'kuJ5#I@P$)#$B:F#%T/tlR9Sn6=
%+<'ni`60;=QrXeg<?9trY$@hsD#<2M.13&L9T,V+85HsQIYfI`BAO;74#p&6g9JX@^RHGb6Rj>I<gc9r__/^7YH'WXlSoD^^"MAp
%F7HQI=I[ukZdl'oDc(/2<r4N.0.XjO`AogkX^qp9r:;c7_>@t.87=dg5HM%,hfQB[E;O69rgB_)o`@dtQuO4JZ*?OE!LJ1OO%VcI
%0>=g!1sNr#!^iuX^58MZ,nm3I%$pIl\_qj8A@p2Ukr#!BM-NIpJ]_SAl`^_uKEIg9jPoeV@\_Mi>4Han./aH6N;5W#*?l>$-=LIR
%!Xa:[3WnFb1T>uM%<P=^CX)\3C90L*Nau!\L2;AgjptRl+t*dJRgl3djVu18o%g\fe#PMlGp,1_UK0kP5k@1C,=;#q3Ya?fp(4j=
%kN8(DP..7d-\P*9llaA]$`P"00^,c$Pr`FC$Ob.5q:Sg8NYJ8)3])NBZf;-LU?mG37l>#$M)'V^R5iUOA^oI2S8e5uEu12sIgp&`
%Qc=gIj$[903MEQL)i?!?2)ZQJMNF+f_2>(aRMd*tlM"jN/86'OEWIWQ=P6V5T:=:Z6'%MSp4':Z&a/&+9(545./2+<"dPn)-[!I`
%6kifA_#!Wh-_pei6N62kVI\O(=U$@OeS;@I7lI'GomJtNXP$"O:+]>iY,]H89o%"C-NjA>E%KE8W*3<b[&tR^/?duClaCBkNPj%Z
%ac8_M(a0Y>pC<PPXB>cua2`>NBnZ8hI<gSTMZ[BJZ9]Sq1)%Hn4S6>/-7<=_P;u)<%\>e#CT/mK)YAn>V_.`k.%ldB%Nm]26#K&0
%2R;E(j$Hkj_:D`68irno@o7cdq+Lns#HJ(e[Hh%)?L@='T)7o3ehue+Yr"j:;'CMZ)sTrD!VoC#g3LYtDL[)mbgmfbX)@ik'4Z^E
%7P5jHUE#M.q!P(m\X5jsGL5E^ZDW4U.6qmCD@YdpF^0p1V>>Md[<pPFYe&T)XOF8r\kc?98pc5XXWjCqpNO-.)c*GKpd^RI9G>CZ
%$tLH<U""^m=3/OtI1.apKY56$ERrO\bl5^]_Ni&cmXK&GF`HicY"[=7N8[`u)0p:ad"AU0"mkBdQO]gfqt@:qgEb;lHd6s*7e+lD
%VQC1Dd@8sU*G.;86%#P#Y@KesE4N2j]:>D)]:Dm]aMD(_lu2]%@kZ5j\8Da^n3S"\i4RUMagBM5O1*;L9'$\&!#:1XM=e$6i5_[5
%dIhbA.;-s!YV7bV_^E`X6nUfL8Eie@KelLSh"OmbRnS%M@55Kr$UFi#C!Hr7bjk*;2RX?SeQ)sYN2O^m$N4:l#-$5fRMjX[I*T,>
%-Q"81OhEGpFZ)rEOco9X1p8i-Id4Xk+1UDMQg,BLbLGleBk^[L=S6[C@qn\).=QNM?;M6UG3gfgDG"_b9=N(\"W9e@%n=(IKi8kp
%U)XEK-KTM83R5DJprT4G:&J""eT[?&`$Vo50UbZR7+b!O"&kk<k>%=jiQ$mmi3Ij03AcmQd/Bt/]=):#dEKGqbq$LIi]uZeBZU(T
%5>)E(;%t!W\<ka:EigbrnEf8FGDqZ0^TZbmZ!+P.+,:#)=%TDS10ThO$[.Y8Z(U9g4338((pT65\&cJW1A=laVsN$/%;[kbs%9E5
%'Vr`/SjK![k<`[%XW&1T[&jQ!'OIuRA<T?_`KGo/MOe*nP#!A++il=jc*_VTVcVsaJ.okt'1jQZ*t`NjFjRr>P\:p9b<^-P.gS%V
%GS`$"'>73-8Z>+"VtgRt9I#W\']oR2p'YW!%R7To"^BD(<XUkt?YY0?\o/\b<1;"s=SD4Y@mAJocpP9.Bfu3gK&%=ZafT"Y_U>,/
%OiqTb.kA)^F/u]Vh9ta'E")tb\60'C9$CN,1FOJbH0T^UQdWBeZH?1r$m$D@`PJB&V$/)b28<sF/1;#ik)MBK&LG';.^4(eX<pTH
%%55D#q?KY,"GS>V%@3l^&iaU7P;I?Q<`DR2I\V"jh0Q96V8HV*Nbp;9>I/LSk.4T$ANofSgcZ0*epWuad5;ldGt7U[&YGF3Q+3;=
%N7]#\7K)nsK68]:WK'ALfmrBSZO@o@kg;:3/"Ucd2T1ggfN=a;p2NX*R#b3ns'T!h[nDcCgs\KUgS8Zc.R>gc4h;:1o9.4M0(1u&
%2R_>-Eb+g!:'e7O7!k"Z_O#K1Qu+cl*A!&W4c#FQW'#ZB\Un!h90de"i?^]l#,i[q8Zuh2D0#BD\*bYpSs>]DHL&57AG99)U@rlB
%T\]REaBIu'AB$=GeH&.;&6Q")&feq`;d"p!`NQ;iMeK.KqSaj*%bdqRbT..Zg>euh?g["G14Qp-?Ss&9/RA,0I3RGC,f#B*:\Z\_
%I$!bW")BF8Cf7Cu@5UcOV'F=@?)T<f0%+<+%on9.%\7`1K;;D6YnAWfZ\e`*qe)`e>^7*_`iqu.l"$SF$k34B[f][M6kWR*2>8mW
%q%:Qq.&ZkCr/#jT%>SJo!t\mH?'`L=7^c@1qSfVts.Dnh*6eqn\mt>NK!2Wd7W\\0r8OZRV:eVuH^hJ$S3R?-G;DU/XDVk,n'=?I
%l/=%#fmTme*l$?NFiH_uBc^@rF'i+grc[Nshm&`3ob9STFClN;VIsX=^Y<gs0p1!f'^W2EkN*bm+-eDEC)9ND[1a6fY_rVL^Gs^(
%6Xb:F4sq9Ok&454k$`+V<-_;YSVdI6\Xc]Y'(;<9]qTc$A>`1<d=anr5kH:E"0I)[$fV2iQHNKM@A&2Q*usj'Y[Y:ig[>ArC34Bo
%8sR8V+$l32$HcgjV"G:p9(0Y]Re9S*)gerU0#"5"BcEaDkFC:24G,H@Ds+1(BQIZ<NSAk2"?_TQ>S_a[OgR-rU#mlaW.D7BU+)Yt
%qM6<(qlm>B'C7+O`H.pm$dP:.,7S$%>GDUfm)gIrgMK,//WIkqO%71bM!/R[$&=6R+ZJ"e+#P5u5gCZu%-g#"dVb+U]Iog=[H.4[
%<REFh-RBBPC)eTn@reHd&2reu"f!UH(e<1=JtEe;gA@*:*P&Z_5r&iJR:h]AE&c"cG",)l7oP<COZH[!9Cn0a(.""/l<.eZ&8=4B
%"e[*t&t`aC+rr$)X6&HRX>-dj3CE>rCHJf"3r8r0jf!FFAdT8$Pa/:W#2AF6/qcQ"=$L!4C/H7K5cq-5q5J-hFSrQHrKAcl(Urj6
%X=BA.*K#(kc+hCbne1dJ6>iLqh+XlK`1,-MY@34F5"bk/<h!5fJlnYab&$/;>Z8KHDZ&^%^9Ru<i*i2WT$9h0WD>%nU\#+b/c#)n
%lgtD=br(9*%QPFS<t1.6onO^Aed69KN]_S!^rA'?:-)(*]P\4t>UbP@N4mQ@maRak87No)"\E>qUVCWgPe8GuV0-":7:%NQdIuj6
%M8C/LgDp"8TifTYM8T[(<]k9pV-A,Ki`,>ZfN?'9V$;J[TDC7&HTm`;$^&onn(ljmU!E)IAlnm<1KBI_$f^L[k=ufC^:F3],:7Rs
%UH$9enJ384(j.FEFN[n,`s!SXp%3_RXhXjB9&ol:g[8l7=GGa5e["2OiZ%Qnn6rEs[96aR,>s-D_AEF!(>s@tM_]?BWbmC*9FLW$
%$$V`Zi5JM]Z@^G-pFk*D',@SF2[a]BamP#lFV3;:"%EFpet5@J"?+Dq5Ep.l@$sI;8PYc;H4sm]Q*=R9-/Nt\<#H/henSS=$8_j^
%,E;2'-0a$6\6b#c[\pAiScI5=@&0Y[7h&giC@WL6`%o+i]5G9=Y-GDg^76cA8F:<\NcHUb#k%&.EJKQ##B1)mL7(lT)=CAdrsaSq
%osko?rf6@YKtr2,jhEOnY9ad%?hYZO5A0Ss.WnT+)Q\_/m(CY<,7.^]=cR]=`D0NRH%Ej?`KeOgjLGAn<!9078#bYT+'R^\E+uO3
%rIPs9q&nnh/=VW>n0Derq&!s\Q:i:aeQKX,V=g7P6>3Ud`FAH!\84[Sj83ZD2IIig[8\qCX#'kc-F:a#p$H6NQQ+tikq&Q5SNL;=
%>@F1f%VO47\JUE=88O<WcR`-5!_:0Zjd>/OK=nNeDiK2?T$*L4<"!@'6<8F9_t'uYUll-VG]WP_k54kKBl=N'V7oD'c\T!@aP35:
%CZ/l3A>S9+=Cn]EC.uY2jD7<+U'9)T$dF;-JeqXS<+2i6o'&J)-au4KD6]F/'dY[e=AGQ@U=k_D$<Fh9SLfNh!'qcc(+_":^7*td
%\W@V#K,@f$L&l(ks25O0/):^hM0kiTH.H'9b!GS^+3rja5E'p4#>,7X`k^%*-':#+:aPo8..!6K>Sk[Ya<E>4<.Fo5g[!:!BY4nn
%EIe4orWC>$57.coX/%m<HuN7'e:2<dN\$Nf`rp>r\>#)O*7:9j:Sj?hgIr*=CQSZ7/X^k;;OIr;-K(HfUMsjh]atjXW*g?@e=P`_
%A:;a`@N'nI#8Gj5C&%,9,'p8X^q00e\I]af;PSOr@&E@\+m@ZB)t@@haho5ZZ33u=+8ja:1\<ck%a!a7c7m2C,pjO9H2a/:_Ds.Q
%1d.2TUlj]61MrrgjYVf(;`r:"G_tt.;VcDmTH>md6"8s\RC_InA3DtcNdG2.@u[?2',u[K,/Amu9Ye><OJ*^L=n5hBCh-1t'kn2%
%ekQ1SRuTd%3bM;TS\[qKGmgl>TcBRUW]]Uos/]pbQV+H39*!5HhZ8VH-X2>3TU_>mG^$cKcGR\eSW3DNoR?simgndhf`/2ml=OB(
%oUmAZOSaZK5;3H0p4or!Ft\7A"&1ARi(g\h%$\QEK4lq-mEt,%g!\R<cEWL.pEHEK:9<qJiEFr>HQat5^mU]3,"cf=GE9,ECYGS_
%72$j@[CDD;VtiCJ:ucG-bG6+=)]Apcat#E<Ngc@R*ms-(Rc02OmLAn:.d+?h2*D4=g#NAiEnH2QH53[/4@WelgtVR:^3!CMEH-8I
%5$ae5MHAQ9hGTjuBTgrIiET*s+O"YK=rCkd!\6u+$f78+)1"iZ4/o<Ik_;'&7*6Z0?b+aJl0Z'O'MAbI$*r_9hV;L*2o/'X&=O(_
%Y=tcFp-7FMk#nm#d`MGoXsoG)_/qK]DJ=c3.;ep^8YOB+875T`=dRLci^Dk7)(pP^$5hSgiaaW,F/SRgT&]7\1b%Q&c$6ae/.kOs
%&"dt_qiX//gb+MFQSM,:=OH:gZOF'h2QLXMlRU-&&nWin^qU=S('j!VZX;frDQc](/^=Q@1+E-Pp"1tnd=(Y]]Y.I[F?!)ml*U7p
%2I`6^87O`gr=Ws,#O1I*L4KKYBJTF@2$R=Cf@AMG5ZsSDkgUCkh.I&:FCPEqC"iFJ1PFkgY%^GmB<\AOW:[e:b#GhS64dDm/ED3@
%(j1VEOcV5s^8bOBb0:cmP^HolqGNR:aU^-+"l$aAM^JY^Z;j+Y,(>'DZ"u/#NDnV98\oi-GBbmc_!nB@l_<=<fnqSt-?hO]`hH[?
%7CB0d[rMj+6-Ed30jg!0*'/@5fXN^t,d"LI?0XB6gql*^>^R77?0J\WoMg3'PI+eFW<\Ho>3'TZD&D=IB+*R%U+7*BSB*lfb`(Xg
%J7_mXMb@da]IjqI'?_!SF*fJoi/chOE!@!qFu-7fU*W_Yr.'6n@uY2$-8@W5pLL=$,u_&$#)9h2GOHq1$Fl05,aKH4\d]EMpTSM&
%]AEklf7-l.:NVgP&rW.KA+4Z*gdu@d4Jk"gPi`R>8e2)img>g:LH32p>+pX]e,^;=h;qtC`mWGF)iM<Aas):@RX8H-J$P/`;Zgg_
%^Zf/ChkqQ+"Ri<Z)_cJ5NLJLup[1Lp*/QLH(,Rjqbn=i5p-;ehpen%9E]_1E`R,;&Ga:Dt-6S.n.O.InCiu")jJ$.uN,GQ]kTstT
%D%/:XB^N7qVcTjhlJb[em9d;!&R<?L.&G&g!AuV_gT)k:HBo$(<p-$^SH<C4.9c!eq%oq=%Q6GaB(`g>X>&R4./sHZ!Oqd:)hICD
%2>EP@jHUJKMp,Nf5Gn\HAApP)9_PbG:W;a9\kQ]k;0$lm;SK6)D+Vjf3+0:3J0-or\<Ig;#412nO$SAA4eA7tgkWqnWd!B'i^H@<
%C@Uq5BT23#11c&K2N8+1Gp@KIO^-qb7bb7Mm0MH]fnl;74ks($gKunFlj0*tZ&m<;Dp$Raa418V\LgWq+`VA'eR,YgOQO39]uJp7
%bY(OX5/<*,8ep9,HQ1?HkP,43P'unG2Q2&qmH'#V=o#4QSW@Q_d3JlRA4j.nH=2*s\s9&4e(9K#/:'cF;0CZq:VK0iU9X2nlMZ$P
%.bZL0R["-D_V]m!:IR_r3JPLa@[Y?NVq4'>bApM#0)`H<"6Ld0<2D=C;H<]#olP+iX*F%Kj.>%5/]AT7Ml1j,a=@er[NEfK*+sX:
%iD_Gj.s!l=i5Dq%TmcS^g]k9ne.*:DYUTW'SkQY+Mi>g<CJ;U:m"<$\gD(8]rK!779X#Mu\6THC3c>/`a&(pelbDl<47qitpTiM$
%L*0=egH0LR\6>7OS)SN\'%PM!7a+f+f2QQmf57LTX=Q3RKP]t8+=K'BBCFZn<iR\4aKFQTcsOD3N0Z5)RnW_BE$W[u<[#ee^nD;;
%*cWa&/^D'Uog$&$hd"6A!OcP9K@mesYQPoGqt@*dME!Z*1nG-@6oA#+9/a@,n3EH$:``<]GW_N:NUE".P:AgnG[L2u?*%2.gunW:
%"@1ku(:EGC9NGh$2r[,\*?S80p,3c3(?<#nk&'q!KE(l!-P4It%N@M6lG29_@^Kr2[g6H=,M2YAqu7dmSjI8TfU%LJfI2Gs%ZsF'
%1pQ**HOA+C"_Nssg)e]5s!3&YO\^5AXsc27OnQ78^%9/>4?<TZb\gk$B'dV_3u<Tcm)j0:`rW]hrLRPFfu2/\!ZI!=/';ckTn6,_
%crnmJI9[*E.R(is\`ccZ=L9'mfH3k%jQuV[[5WC0^h8up7Q3_^@,X@PNMuTJ4mS?2lH2l'-2@c#AM-+/a[)r,jDamdR?gV*6Ie!9
%XpW4NZI>pqZ)"ZGQHXe(QKPX4/lsKr+>.HPi+G9gJ,6>CjkD$b?sP-4ZR^]>.1\;8,\>c$Uj,ll'"[V+EDZ<o^'8<,%pqGgJfQ4#
%,5]iu>M02oRSo\6%$r'mV2kTq-]Z^#biFiY:t8]s[\!Ub'_Je$bTf?:*9D(cbG3@6Cc,EZl=1k5iP!??LHWL4D0e3C7%+$XbdC$I
%cb;--9Tq?Q-Pg=c:oeA8GAnOg,:&UL>"i:u<Jf7>PC/:oV/SniU5%1;F5A+teID70IHd3B,?$)2gk%UaOp5HP0SpT^eaA.>jP)u(
%el'0%<f1Qelf"8WCYZnA;CpY,Yei`4Ek%ssB\j+ALL4dc^(.k5oai:adu*N3/gRlMphAY>/`=e7%gi'`n5$pn-_^G+jRZ.SjU[73
%^X5o.ct7dSH2ikKr^i:Q+Rm,f%KFU%CNlba8F0Ik.q:dQ/!megRkT+ZVSNR8,=J%gO)-+LSRCP5/S[.3QY%jBne+^gBu*>O6Oh&q
%Zd]48.cXUZOc"td/VibL_Bt<l.Ee=&mAp*FlT,5!dR)u`g;s#bAF#pW7'Z;=;t4d(iVmP]I[q1Ak?\:nB:ju)VGGJ>O9N#[=Ob[L
%A@Z8ZGq!b<JJ3H4dBe,eM#4/o4^37cLJNdG9hpp_A(TSQre0$P\,Em[Lr%)</8NqD<qE]9SM%_<9Hmco`B*C);oKal,Yc;LMVq'1
%Fkk_E$$_2;Y`'@M.-'p`m6o2'>N+qp91O"FZ^5Q#1(<2De&.A"T.bq$Yp<^n@`Wdh96NtRi=HNI<;19ULD([<T/Uh;M2@!`XS;5a
%Z.G@E6=Se-YYoa!h.8:UG@(r'MLr("T9eVcX9?MT;K=H?>hC<A3#kog\Gl=WT*n!@Ze5^Np2lOrbE'<_ce4HM=[Qa=E2(c*#EL8`
%LbMlFi\Lr,-:]PSS-eBc(3PKU;$gc9V<'t06?jbeZWdUNBZ6PuHIO-teg4Qu7^Yo[!*7X:J'G[Dl^YX<BLYALM;B::d-_`S.H*1T
%dN3$:SQ+7T\$B6l_4>s^'p7d@1%"@9EI6%)o1HDe+=;MdP+#ruQu'q?>HRn?-M84l[_D]uH)(_<l"!N]<"!==D.o-+nY^)cJ6UT_
%U84PnZojd?[B,^h5[3ppJog\akj69(IAQ11>@QG8BbHD`@&!"E+f=c,Er9e&Vnr/pMKj8RAOIjQYRf.k=HiB&![.i8QgG5fFtb*Y
%98[egaHi@6S^nWbST,S)kVN@(-)15GhdcI`#QMieL@u%@+7]@TiWj4JC&Oblg@/Y>*ge>oFR%.*FcL!54uak47-:q[:<(`$:tUq6
%W(V@P&Vo9U#-%aj]/p]Mg&aV''#:Fr1[`LsJg_3pS"#S%`QRd!<j`-o.hh4(A2MUbmM.;gTscoKHrcfE11!HCdcss^)8okfPD'@D
%J&6l<+c6UuX/$<oOJ?l=CP),m1'i7ih^kF8l.W'!?d\;&Efc4KqmlUT`J`FqC$?bW(.=fqdeh'4rE-==E]<_=SLDCB.9b#1Wu)<3
%Pp$Y/g[K:bJS>4`UJ+RkJJH.F*chT*@(sCu15^`h?X<_+S'J$B7bq`5p^dONI/S,D8GbLiZ20i0i@LPP3T_<0RFde#P1>P@e)/T\
%6^]StCree"g_!E6_hBlahD8fD.i(<O/?(]pmsqQb)kYqo1]FYtaXL=0ap+ZOPU/Yjo/6cH/$t&K/KH8GAM+kg/T,LK6TeE)>t9+K
%DkW%ogg*qj)4H/8$!;)o7#"ss04aAVW'I"QU5R)+h"ToP,f^;?V)R$K,KGKicA@d0@-;l%6XJnEW='%D8(jES4;hTS,l5`?4b:PF
%Cq+%FZ+#>-&rX)a683HRcIpYa2*BT6m(:C)nPfN]II'dE$Dj3&d2m+T\r*?YlIgi]Ob1kEp,@)`a`L#brmrGWOHlI[.lE>M&d6>=
%J9ISCaD*8*MX+D5FCP)El8t/0jq"`(q#';&OmpUfK^>*e4H2.u7#7JJltKE6=C>K'1]DZG*udj6dJ::eHlSqe&Trot;Yu)Il[b<>
%m\Cobgp-Ia]j&Ys.[XS74@NeV:(,P+'f\^Pbd[ki._l\J/1dBI9iuX3^\64CrlJ:bI*Q1j&>Nbho,iT>c7b&t!.Or/m\g1Jb4]e_
%l.aMiS%f"q"6>l/S)_GSfX:DdjAATN[]d;ps(+F_AX[!`ZZO!*fXC.Wjp19V*E2p(nREVA'n47S.Q#BU\m@US*EVo]ba+2&Hg$P%
%+?0.`qQS7L[Dqe_e+MID@Hi>7AHZTL#j\eQ].[?">U_<M0TeA&fK(27ZY0o4aO;f66oRINTNjXH@jl63B_]4j@4+:Pa>:*,lG"f"
%Wur8iJ$IOqhb>l?.4D$';h3=gA8'WIE]9BkO.t[rhYspX4V`$n6=C'Qo.?E'h+Mo(6oqLMl\-NY-C.AG\d"]*T!FCp5AQr@fd_pB
%^J/C[_C]foTS?28B8s=de0oKc?FDY[UlQ8iF\";>iWu%/GT&_in]47VY;\-7@N(#nE0RQCBPs$dgU0,'2o:Ci&D2s7H>>1hA?<Xp
%S?!YN/1&<f=o(He0m>l]QJ:^b:<;u6-cl]H*/.NQ-KFM!CcBEClQZNA1[kouDP,mJaXQ:HbJRGFmJMCXSo1#h4t+IC7"CBkBJaCg
%e[A`&;l]'fIF1&;l)JlfM\U?o,[pdunQN$>YUfbX%,1YO)5e!$=?&=25-U[icY4gl17O_&HsgDE*\;2IG2#,4XbSNNYu5?4p@N.b
%D=pScOh0P)^.u&>U_!@%5fSQ%M7Mq]P3cU(D:49.Berk`.4+@3g>[!=pb$:@l<Ka'YAIG67PegtKY,E")0ZOZdqObVn_Ph1g*!b^
%M(Oo]]@5=TfnW9%3Q&IH8)m`\iMSR)k@ns1&hP:0C`NlIL$]d)VRk8f&k\jbB_C+"g+MX<jdX\CigDP3(#NKFoANJTCUT.TH=-FE
%G%m3lp."O!ZYc>%DXVI)7lY8qOa[pg=YkgP17=\(ZHG;o^&8i,fSBbmWRQ-Q;@-@7N*$`,9Dd%>QY)rAE!"SHSXqWR.hu(>c7U.X
%qglHjTinP-ak3+.c7Do`n66HVm.fU:ho/Z78XYc8i"3KD`&dfSP^e0Fjb:+'88M08n$*;b\_R5_Zspa`Um&`+mn+;k%5To'_g^+J
%g]1M]8rD!u6u7Z%pFlP[T<a'N1D(kV9\>;oOu6e<U6KB6B2*Q]O4_f=$n$.7gd8coX`mXEab$ZQANS\[&/:d!eej_I4N,8$n=cl(
%W\jT02Nf'BF=GK+8agZqr=nrQP6K@M<ao^ig+_;s]Q%!aXsVbNi)^?-(=R[UnpV:Z6Lgg)cpcS<jJ`us.6@WChD%EpS&i4'2Dn'S
%E1U$G_,aneh*pu)Ge5#R.G;0h&MK4OU85%cBc8uW1E?=V<Sa3%Oume6\EZ\,%SJ:W4].eVaObpLF3G'gk>BWs7D*m;3#cZ`.9OX7
%)UJ/7@qITJG8@*);Qk4r3YE%khINV)Fm]-m,8Ead+".]Qd=js(o%]:R$fp=fEo&[M<Ict?40g&pllqXIjZ4Aj>eOB$F\^alKpd7W
%E:Sl0^fdS;F$%)JNU5uBfQS4L5`i;La9?Nr:VQH6bd0(E9dLY1b"1h#%n5"D\fC/p;ZULCp.(f:g<]/olf\^[_'$M8#j]UZ&6Gs[
%:u(AYRb*g=p0dg[80fn"+&uF_KC^`7(LC@O!CS)Oj<J95I?(.EpA41i=\s`^N$B-:=gnKeYaW>3:IQU4:Wq_DECd_E1u'/J&lZUg
%<9WQ5'*Hk,\+b&u18tKpA?bhEi\tX@0R"pdE6r1iR+mE&bnJZ7@LE]KNQ&eD=q%VI,Id9<fJA<+M_!!-"(ogcg=9jSJC\YM991DQ
%5drPoi.6'L]n`'^WH1M_%7HIq;T2b_%S2Me+CBehQGmno)3`>_Mp,b7pRB*LH"S;$HEs3FLs&2<=DpJ`0j.qj,g-fY\lEL1%\_t>
%a-CqHg:<@^[?,"`-Iucfq&qsCR9#oqIrN32WLK)>G>1iA9._n0gMo/GEea-P?jU>4$Y!]"[9=Tk?>=!c\(A1Q"-u3D[=6sr=T;@.
%`QM91ArDkJ%JspDVj5WMOho*/Vu3&bDjk*F+!R&Y32*USRNI1Se!u,7%/Jh'>kEg85$eIsLdK4k&[[=sSG!9G"mLXepAGVZ&J_U:
%hM-HN9R>^o"rCd+[&_lt_LsI2D*O=MZ0ep^,J=?-<7?-4@I=6b\Nf#nHtnFQf%7>QRUTO.4EiZkQ-+Ut>3;)[>LZSo\?s?3.sj(]
%)8hRH+c_eT';01o%\L!W^s`YdYfHBmnhCs<<D#=/b!UJESuk&];#[W^o]'5?H#(TPmh:BTs*Hn<?q#2<fU4Mc@TT"q\<XHh9i4Rp
%<4MWU<5LIZ&NH7*8+^!S56M*f/T.0J9Q?"de96s4<K<T7loe4.\!VVT'-G(%Cog[sgo/DrgrI4L%Y.!>L@^Eb%"H0fQN0TE4TrsW
%aQLSpX&#jd[T[R+-6cl=e?b'R7-CR#7kkXd6\F[aa`/VmGPik)R"\PIS+L@JL;N:X-/6XU?BM9$9gdAAZLEu.]6#R5FR`*Ngr/SV
%;`;6Xd3i1W>n=Is?Ul%n5.$8ds*>X=QSoLPNmI\$0`S`KS'(qX`78'c!'Ct='_j88nVnig\@X`H^eunQUK]0aeSWa^g<pG6\euQt
%l_l3W3F6lZkmE.:_I,7Fia45dnq*N1C/=1EX/;"B0D.@P2)d9:Pm-2AN_`Y4r@>r+el2+KDDa@5'*CstdoA66F$iK)%[C(/dY/*.
%VeG7uJlB)#I;f",^nAgl3d/"@O1tqA-;j^BTA51WMMiKVR:<k1Z/&04om<td-]s\OCmT.37&(Gpk8B_;WnAp0d`3`d*o%Nt`h@<*
%<9L\qNasW`GD/%m/g%pS&?9#Lll&rCcMI,[&$:Uu^E9g(V]I"`,>O4LUH02;h<T$C.3$B3kM\1r1P9&cgp;t)PFV;ofZo!k900LC
%2tl,g,%km@Kq1jYDgFcSK7TKt2!o=+nu5RLL9JC7RN\dQVh4>SJj67ML>b:/3kM[l?A_A7U`"W-Z*jY0aG=AWQ*3ee<P[S5j+&S@
%iUK'14PN4O`U-T)HD9`.lI+K4YVaq>^6)4>_JG9ODe8]89:78^2d+Y9$Hu9JJ#6b,n.`Ub*23pM.georUY)3CMHjQf?P9&VTJ@s]
%omW0^/X`FgI<Un;NA/f/iW28)4(*0q6PE3F@+f4<@`4!RPa!:@kZBjU4WM=Jc,gcQE09f;&.l.P)]AdZUPmrmC_!`)X9PV;B;;*G
%HodY@HV<[\YnY2QP],nubb).n_%oN!C.:lZ17@ml&^./smubRl7>dZG]$sA4Pn3D2OE2,XlQ\BV8r\kd-UOe#6*@YK$8ALWSuS<I
%de(r.B05!4c+n(S4LC[%c(^4Tn=d"JjdD_L]nIN._,+PKb?d+V]p>TYQE(c2dSQ4l%eI4j1&Yl/o=),`J4oE99O%+T<9,p;2[6$*
%^r2OhHaj9bDNI"q3/R+tpdm6ur:KB(4/]ufQetQtSr5n=!O>Jk#r$K++jiDP7mWMc'dL3MYS81Wk()^'3CcrA6)%ld3,+K?ZCEJ[
%'c=hLB[aAr.N=+,DItOoq4(<%+GID87qD3A"J+a6E(]rKeQ$lcG)GCIC40$h^s=U]`B5K:ST>)iQU*q3p:,AP'2)Z]6,be*V$,EF
%B?"etLA\Qceu0B_SA^KPF:_;IM>R@doc?CoSAbSrjE>)4`d$f3;_X2,h7;/)4Z-#/$j=7t7:Wc-OEgX`<?nO@DXjR/`f*2?^So7I
%K.I9ACY"O0Do],EI?;rRgTf3u[CiYKB>qS^jkn(QX0ch&Jb-PNAI@`/qVG*('8r?8m"a2h;aDG3JG8V;@^m*eXnu3Ll<*s&??@\u
%IB6WoK)Ljal8rYZ'Z#Xnk8tuZTH:8'YaqnK[T.4i$+%\tUe@ekU[%"&%It[(?f!/XJs*Z@P6,"n6=)$B+_Y^KF3)sSBorYb+^C]o
%7LBdhl]-L*;P<b"r<Uk;1Kr'oN8q'.EPa,gTn7Un8YF=j2J9Flp4Q=n;<Mr[>Im/7M4!8)!aLf?'<F:RC)BNnEqUiO\+i??&SnML
%HeGhe6Ft#?W&CA2E08rtGHW'1;:aP%nt]/`m%D#Fqm<&\XIk'u,'RXspcV[rVJ)"_3>\3oUCu+,8_%3%d\EV$:h:rDCbVu*nR+.o
%'0IF2*^R4BhKM.r#p"LTj.X&10<ph&<UmLAM_t]MmUflkA3=>nV_kDh2UJ,H6'1CUj!"4ZcA\X[QT4GKAD9/oG@5j^YQ`1;&__a7
%-knW(%m_?PjXqpl!W>31SJ#e9h:7Tc0[\B#KV,$FJ8DdE4J2(Ns5n(m-M1*=Sf\S#IS/Dj3Q:$6>`bRU7fH,*a\RaA5:*E/S(s<j
%PN4+X5=:t=E"Mti@/ZS$mAFI`LXYhKZ22677uH9R"o.cU/$\K4]*'9p7=rm<M[NR7FM0>E)P/FscPTZQ_YR:pbc6h:`(%3(7'8f]
%)T!o_9'f3+hL<mP7n+2nKO2B3L.3X%:Sok"IL4Z/Y'h<2m4kS2.Wd&Q6GD&\FM,T1ZP\Qbfg19f@9kZs1UF2+Uj)EAVq$]Q4`(NY
%N%sl7@W=*7:KqQ9Lb-'tnVPJ$U*p%0R!iS)X*3tKOkc8Y\kQUA?o,/LZ<rJY]dodZXkT/u'D7EtDf8WO7te2'c>OTGEksFVe;ool
%YrHI")s\pIFD!qL,7`4h-_i#tZ`Oq9S-kcF`!RC#^uir4nd+/bcVSTd1fTXo*oo5GgGp&GcoCOj4T4T6^2SX5rS(`/E&-#+T,]tp
%L`pn-O(MHo@aR8m0?S=GS96k2a?.6pmt6LT?50T'[;.phWG4ZM0oQ6TaYieN>O6[6:8:YP+?pW'UpY@=J@J@aFB#Y8-*&m295La&
%D-Qj5jO!5dYMVk8c!Sf%6m^dY-EHK[.;75l"eUcB.2Y'-\)26_==rOl1<*A*)Br3Zi:fLcr"F-;gL64AUNK81Z>VBV\Z7Nu[hEPZ
%`V^o"^_oV8,8.:]U5*M'AfXPDIK/XuG<F='mpc*J!5g(g=RjO,\Q`7q+NP`_'4Q94NKA7i:unDDo21?AV1lY0;m5)HG.uT^]=QIj
%dXQhq;6Nc1AoZbkd^InM<`j9f9ZjFGcShgXo'nbhVARZNUr&TW7n(%?ohk4@WN0mn[gt\rjC?O62>FGk@Ol#U9dO&X'2s`0i0ET?
%aR!@'fWZ88mu#A\2(J+d%%e-21lksL&d!lRc@'TV9d0["j83)]Q/>Co]=rb-2OiN$KU2h2M]NP49lcnW[J>lQe8k%dW"%o+d,U5\
%:9G7,h"c:)CGi\NB,9B0e5ogE&K#rF^RA:a99iMeD5;DfFm@`82Q6#6F0luaP$F17`RWAt9MQAhK8`B29K<0_oBC1]24KE+jn#6(
%9-Af#'GB<)<cgG4$O$V=>(L[I`#$hMp_8;K"AR'#2MpL>bS7pojYY;`B@dDq\oVj%cSDtJ:UGSb/^@J*GeH;R&GOJt=EJ;"FDR/@
%b++14"1m1s^a%R%ceW:(ig^5q`sjmRLoE$C0K,V*o7JcG6LGj4K+;\#g:!`"K)-Pjq_I#_Ya12c:MWDfKPm9>1I'BsW0tp4X;A<q
%77q9oT$&s'4Irklr(VJ,S7*_T*n/CYC.tedTp+$;n*Ot1J*3cJ\$r5_1_hSj0$ICEPdf,P!Q!dJfkW4tSm/P"0-G$HjUbKHL46a(
%W5T!=Xgt1%^c0,&H3*82E9^MQ?&/b`o"C!P''i[BNGR'6O2a&C(L6FoC]UrR`_i2Zl*.*4"L_a?@JYP`:N:N77YVUW%?t,GiMc+E
%o"\_Q(6dSb*$'raXWN28\k@ML>.(TKXoIi>s*q/(UDS)hFL3Qm8CeYT6(6&(2N<#4*DiJaZ-`":`('(?A,HWLFOPY$LonZ#/Q,=D
%FX6/JnggQY`]0n'[$!K]1KlY5!@h9rWjAdh5@.TQ=X3)jG/dIQR.G+[QDTD)/=9J5;]GTb%D?q*pDqW"7XQAF.C$!%bV<_@ICZs(
%cUMI272sFtQ7$UT>.(X]F/YLE[RX+a%b7oKo;fJF7C=I$=6&ULa]1u%HsI,,V75ZLKJ%/e[o5psS"@#g]P-m'HYV"H40+tK;tj1T
%297p[k>\0AN?5FVN_Qu-K"8O]$e\h@Z:3Z-G_gZt,:uAp"I1nA;R:Cnnth=C6`,:ol:\/f114npkp;c[EAPUj/-]"?%9hb<15k:o
%7Woc2D2ii/hXirs86Yn$53B3i<2F@rb->S@%u?&$&t[3'geMT*>Lh_7G$U(K[7VpE>o2WSE_]c:Qfg_q]4Yp1Lrrs<n:P"=JYbN5
%K`:gg?^b(7JhfmW#,gVuZE*U@6#ea+<T`U62?<$n`E4F=Ef-G\SlRic>a^@2`$QKT4HjCeXcJT6L+GfPOkcY,Ua[OSF$TkJ;1s%<
%ZQqF/mBX+r"8`gj6I+W_d^l=M'pZK4oVJSY];"OsP'j/RgYGl@OI*r\mNk%/WN/N"gX59!bg7!:lti_#oM9-193p`S`nXQ(-63!!
%%56JLN+'7/FLTrI8<C3]_BP8/=l(Y;K;rF8E42`6WbN3Ud^I_,]ClA[(&QVuZUpL9ouBP@Lq/[G9as/[Y)d\U:i\6\TtK?,e5GMa
%'S6!/T6:hs'"%ABS`+_ZMIR7dSkCJKdLHlOn(-ms#TK&Vh/%R.=iD^Zo7756./ET)$24kKmHb9)\1IB;?Ys!`.TKf*W-uU^k7CLj
%m-U-K^HNN,\_D\@i8,+_?Cil\/\o4q_n2RoKG9/Bn(G=fp?<[OQ>o[hU7&Jm@J=0ge5;3hkG?r'O[Yg;c7kJo9/[i3F;^b?C1j_S
%\UTtleL\5ECt0i5iRO_hn*%q!GfRk*HPr=_/KHcVXiAr]7aJma;*\br(=ugYX0<_;lFBbk`cQMZ>7[Kirj`ctJ'r*V"gWD+gC2tG
%B'MF^F<#R/ATp0#Xnt^:ZnJg_Wl!m*,F1Hcn3H,"/1jJ#FuPFD4DoRcq`elNjaeHPkK<IGBk/kqR'JRoR?>2Zp)S6aeIGe)j2C4C
%Ub(qG:MX/)4Md\peam`B24$q"OgBHpog^*3fe9^8p@LoMd+COHaPW':S%8s/@FYn4LVJSE\t`.rPg>ZM2*]VCVP5b'"2E+cA+@jP
%`jqS#P8nK((c,btgQ+JJnqL8+a5LMHN5[=`X5E["]*KPK]mt85>H9jWSni2`nG$O=\-0FegcjM.XE50!(.t<\)Qo$*]l/8L:Qg%9
%hqR!i#a8T&!:Qc92hT#>CKfNsl=7+eOt#efna_pH+gLA$JXo5tGJ8[5lkEq\*T801Yrq-L)cHO8C3#nPUs`;>^o[9gZAk@0LT0Z[
%XhZA##FN.hn+/339f:F;]-l55/eC/`-'6cmoN[,mA%$rC:1!%DbGsYmm(/Te;P-*pmhq&Km6d<SXMJc^DSuSr2-aZWmojQSbX/aB
%nd$$i5j<BmPo8R)>I/&"QgJtg\+MC)F^VOeheZ*De<!4PEju:,rn>%GQX]cp>BTtch+)]^dPSC5">fU2*sD%].(tOm%E+>!>B]gm
%aUW3\.u=-C[+JJu^m\o]bt:N,']u*t)EU"KY4M85d7W2#AiMj<r'2*CL/rNkoboP-b[6Dudn1$bNUZICV[!";*T>8q26jDK(8T7a
%CJXa;GH5f_),+K'GcdE<8$hYZ*+_.)."H.H5uXAh1lZ'83-S("au"cempY2r(CJbrZ3t6Gj3j3n<3:Nl0N1n5\(<\-)U,:<WI@JP
%(1L9pVgU!BXOF_s_/q<r--khe_I+stqm$rZs4O]L/`>YoLi2UN['Q[Lc99XK7h)[o%MMU6>uGd[79VNP`N!1M-Y&883mfINkPas9
%)#=oW'DjjSY!b$<XfiiEINndfTu&WZc8'BKm`'Q?J%qcJFT)2h&RhN8c=FEPUU)R9Rl$]0^dA(bh"f8h_&*"D`<5qhEH?H?kO1?c
%P0DYcEBF@29lKLp0c%fV]_]>6IcC=JcS>:h;E_gb@rq-ahnS(-o>4:fc/GI0d-(J<8YLOGZ*>.!9mQZL'Hn[oXFL0/'8n><+6]9G
%-VQl!a+KTmqL0f$7nKG`pqHBLB)L`!EI'9/SSH3__\S\j%I_eQmO<=cBq_*l]ktpSAuf</q]2DPponL9nXu[kOecCl6b)d8R<KM-
%TLYU3a2kC?3/QZ;TUsPdJ5BgBTZQ0_7K=Z+dND-qH49QP`?CeST$#^mbY+5(*42Iq_*ae>bm5;o&2R)op2(OFiaeHo4$;^d+HE5)
%DkLV\7uNX6PjXqqia^HP35Rd_o0h'rDo,jk1V/NWffo!YTn$\^Ch>(9"jA;LI'#Ie7Fhkp`d44kV_[i'\ml!6&h[of+4r:BGVl,-
%P]n[mlnDd%`.-R696)k&NNhOhXGR_B0^ROV:NmUZBfI]'j*hteCY(8-BCQ#8qRF$'4Mrg"[07W7&P)\0Bf-XT#jMak]OPmKn8D=h
%dPC%SGh_lli+U<j(F>\-2c<_@:UeRM`!irtp%GXSN:<rm;.2?+Z9:d$I`aigEG6acQW?dAiO(KqE@/Y>OFNWUcjkgMA$[B.1llu/
%/<P$QNbNCc\fsm\AM_s)6_fq\><9K^_FhfKV`_jrbBC5E!=3t;H]Vt40`]%G%8S[4/Hf[OJd1Z])r6Tn+oMG#]9[9%Zgic:1<0r\
%i^8otm"B7/:FjQ7b;i$g%Vc-'k_5%NPaF[TKVVZHBZ>p)d7:tm^7'%"6/"=]j13lKg1c>S>I5ep_,d1(M>]Y[p$HLMa.RPm-Qq.q
%c#S^SgA.+s/Beqsg([G3N"??qT'lo8Nf%pRgmQ%3J:/ID0!hN7XWps\)&=)gFVTTN03]pHY_F8B_'A9f]#7;!?rc`=Un#`'S(3Yi
%1**Fk7&bN[8^oSFqbFD3G!"3Z*R]N"Y`M4^0DgIW%V7UG=o+fOc.FrG5n@29,AXi:-Vp@hE)(Vh"Qo2bFmQ`N_oW,^CcL:'DhaPZ
%`P5Np[L>_nGGdr>?2nC)m5ZO9`V.<(>fO-LqK:@lO=3"!mORtT-"F#p+$QZJ4!`s)i=\,17-oXJmZ><^2r"j&n(4p$@:dHM0;Y<.
%OB6gn]m5rl6gGkEE)L)/5!?6-QBKIDKCTV-Z^S`Sd=\8NNaflL,"L:+m3]#Urpk'[b+J+S"H)pH93u&!X8E5.!1V"D1V.LCFpirc
%3Tmrdc#0H*>aJucX`3VaK-`@T4Uh]#oh\!Oeg="r]qrQ0D=WRq]?)!929f7E!?Qfq98flT@^Ss@eU.Jm1lP4+U1-s"8opG7OrVNC
%9(Aer)0RpGdVirT*Q5>qS,8U.A28lU&p"$e70s2e<EsPpFHMXIj+M2;RBIn=)4$:h`:tjr.J>Y_cU[?tY`@=9X9aj0ctfpHQ]NCA
%jAnH$O+H=:31l%_&cT0_Xr-R@eu0AVn>;;RTs*l`J"Yu%D#KHU6hr_.E!N)Jj@:U\mS9L6dBdh%NCsj\e=m@;=A9MT>h?EK@(S4'
%ICE$,H&U1TZGYL_o=6qekRFWd@"YiYG/PWTAP*UQCV?@p;[W?!$>:nJ>tq))qdI$6C@DU(%XEQ!aeVq$.dt>mAlbe?*4$.$"_rpR
%9Cs&W#T,-D?@Vnfclfr1p^rn&=qL6#A\J^"H=3]`X4,e>7dA.f3da_6]$f-FS7!`fjAa9m68f&DKr%8W]X7tY5-Qqs`C]j6@Fe,$
%hVVS(=/8CsnR\[BWTSqeq[Da^P2,"6^A[JV/ZTt.6"#1/*#p;d0,9i'4J&fP-<mR+Ju?hubE55P2MhI'6Yn(=L[lU'<qi76():!Q
%f/uO<]!.H/V/NMG'r`W!KFtuUoVs2i\4@KQDX52#>M8:I<KJ%>(p.t(cL(Dp?HkLeoo;I!n$F'0'A8[!#1o@;[Z3\K;W)3\oVasZ
%RK5$:@uaMdWj-E.nll[mqe__R7j=cF=oKf^I>FnU%)Tm0SAsimf1!OLR!4pS/Jd@+nh<cZR670bk4DL0hO<CR8Amd9MTA#*b?r/(
%n+A`\+4Pq&fV)ksGb3$%R7DoGN>ZnLZi=*d@@!)M"dRe9.S`j9qR+A"rjK_.Q,>9!*Lc%IcWTk]SNKAV+#Ee9KRsT2r<1/KacA;I
%Cs,Lb_q]^S[<9L+d,)<n=m5H5][UbFI'M_0c@(+IC>\[llXRkU4glU$S$2S5JY(`8P$-J&Q?>/FX^27E\62e+je"f.Ws7B)f54,Q
%WnD9K[E95$.8iIo,5ILgQZMl%+ACp]E"Z_/<4]j@2cJCA^U2PX<uGNEfrKh$dJ#Xt\gYLKP:0)^XM6S)jB+k)`/TONaUU3]$,h^9
%BHK"0S/geg=T:UtKNTXs4LDH0hr).Pq<Pm':Q`Ys-oXd)!DC,ZqHs]6M]MD_f(uuM,b-uGnr\UbV]Wt!JbcI`^VR!rn9>Rk.4K'O
%^!sknP^Y(*GqXSpIf/99Oa;A/iU`Q3n]lX!_=sL-E1>B'KKX(3^Y>jYG;^3=WH='MQ$&Acq26'$)Yjbi9Q%Y5$$.s%S4>F,27:@4
%<Iun(]JMhCnUo^gl//Vc;7glndYb[=2PFDW>W*N='D&bl*)]#12kN"U8GHV%Z[9'o0":J9ZLn'O_[b8q;*_>ROB#YO:[0P_i^ba!
%@7$*5C=R2Sh-UtiKE/r=L6[>Dj)*N<f*bgD7*'3.C):c".15>Q?#H?j17UO%kBJ]BlVVn-EZCQb-RIa<gAZ@\V6K:aH+&ZsX!%II
%`Q(u5qsco1dSf(Dg\KkeOgQ*7)%SYA:J+,m8<keoG.<Ob<llB9S`WI-hm9=QdsWTP.9+p&"VN7#U\`e<Bo:Y8+'+&0>CLhCnX5St
%o[N65S9\+PPT0+iAVBTte'YfREsM"Wp[tN5')Q0icICe(V=;kk5CJ?"n\@uoEJ@bBiSf+$e?N.hDUF#+H_3J4I626A?@q6YXq:_o
%gYr+*SV$2s&cWI%Q&kBV2uZWC'9$Ld#ac=rAKaBbR)!)b,>2_C:`e!DM67K,$I$knal`Zi$5CCS)0]Ft(,cpcI&N1ifqG`"-aGE=
%j[b@<)m7%p(jkf[:O=HrQno1Y=LmZHP8/A"9'WW97lBF&^T;GW+G[c7D<L=>bln:ERPlI=D[Is=baS;m'VPgT*6e]qs2+%^oCG8j
%[@k(.Ob?(O_X"C<NtOh0fCZu2>5!s#G5PG[$04Df(!-eA&_Y=_?pT/)e"GQQl]D3cDGh%MEqsli/MW8KEBtD:qrR\MA<_@SrL_]N
%Yl.Em2q9r9"5G'+JI#kU$)M<.8p(R[GgLIsp$#!8fe0%tM/QKeRP_.$os!Y+/9FR'rPE*O'4S)&YXL#,j15m@PhR1mC,-H;*,;mT
%+&oPm.T-ZDji8WV=n(_2Rq4B8BZ':G/_R1\jVmjdG^B%7K3QhLYHj$GTdGY6<<,Wn)V5U>H[=7ET70W.WZ:\8a4kA8g#Da<[eJ^k
%L<002Y\`Pj7bI_<KnB.#O19:.j$VA>P5V7`hJtMn/J4CYH(W&fdJY+&ZM6^M9];'Y-'=RZl5S"pFeIT&4Cq8A?k@Z:.8((XXfYr`
%Vk#;rlAmot$R8B6P_CPINe"2^dEDq@G(7^N3Ml'tp?UMJ/Vch:cHlAK5FfYPPV7Kko)N(DJLX+1B0\!'Z_!t$OsN6J*XlY0h0J<B
%E_'=T8Ok.p%%ZN@`t9na',G"?#<Yq=q2M^[kJR#3A#_3tZ2[`Drd8a,&$(#fFp-c$IHaWB+[[G:ijfEiZQS4ac*I>F:_Xs-Mdm/V
%<0E]P8G1/0eEA6IDq)V.?j'9f$0E`-JpH5u]J2ib%\p2PPMY&\;P'AY5s8o8:kqH7`L%ud&K&t%MpbH-]%i@4feo(/$oMMH[M@r<
%`f28<[B25aOnW8PfE$cA7m`Z_#)1%60X="O;3QFi:duX7A25pSl0<3!#\+`5f@p*KOmf^<QYNqr^",=B<H?<5MYk3mk7MUIk@g\m
%*75TRS5`Ma/1a4+g#9QF=H-TPE%/u@R@IYO53o%%Vs:/qrk3k#s5THd[MHO.,Ep,8W`F:I'Q*X?oNsOm\gT1^2^tf!]]n7KZ[Qb^
%)(U#h3esW=H1th/?l838.W]HFZ/-_"A&?79jUf_"(<\h/I53u+dD>Cub>q55JI6)>]pL<JB",(iWY/ron)AIn<GLI_D0]'&G591F
%s+rHZ,+V?@`QJ)T*=egg".FPe$Tn:82n[>CgNO84k(R(j"a_e(&p>Sj5(k=.n\lKCScW-:oaf1"RRQ2<c-fdh>!P[9Z#_8Mmc1Xm
%Z!d;YS<;bFB/L<1/aS?ASi3G+iK.qWck%0g8Tr"GMr\p69;OcHm,M:r>`@eYVuHe'7:RldB'k%18%r`DG\Xm%;'+=\R0kL(MD\?.
%G,`o!q!,s@kc^b,5HqYGLa3ITNl-Ek2"'o19C4`mM29!VDK2DQEHp/8F]1IVAI3He4\'DC/q-Tn5TH\m/R]o\-qt71+K.;Q.Q-,)
%bJLl1<It[PPA3K685"9RL9WsD=@rlQ].\T6lRP06mD!"PB+F`q?qR(76gRL4+-DCVZK!PJCda06:sq>-I<Xg]h+S^s]giBZ*85"F
%`W8[^=Sp?i?;2bgDpWg!p$BDQVH[M:GOZO,g2B8dB#)L$%?6rJ#&L#M%nk0DIm/^CP)f)Q5?`0)iU+[CTJgS9o./QSBWcF'^YjD(
%Ob8?rp;W,5L;6FU*/4BOL5]0)qhu^,FW]X`c27!r=6SKb3Bcg`28uVgLZI;6cX(%.L-5p6C&-3,B4*Nsk"F7:ErfTQ[PVp^h?0gZ
%IU[@^]J$s1gB(g)Z]pB@O`N2dEnKp\CeV",IGc)-c8tomh9$a!72<RJD\%lW<'C;RA-%bQmdI<`>_\&X(a"iuc49'Y\Cn,ni]3\2
%D6F!W`k\+ho!nY3.t@T[8nH$sAX$.OGR7B&6(eTMe.8e;Hen:Q_7<RL5P2g(#ONjeP3T\YDW9p#NiLOGWAjb0E6_'F]t_?3D!r`7
%Z,]LCpqHe,anqY'l,J2N4ArA5@V/Keq0;,\%i>o-+=2k1`:O%2_7IC!luOE\a%5jrH,&Va4eHf#f/PnOM=P2<+3^_bpj06NcVZA9
%.AZK*pD9DG'$pA38j>B3nT.'#&M,lJcX:'=.<l97Hml1Mo$Y]RW\1Ni%TeI9<5Gt4cC"1DJ/'#pOUZ]B=?hr?FY@U-VnO4$+MW4N
%^^"G2:q8J;Yaq7*9fb'$^@J,uG*S:=>^KGW);,m:D5I&WEF\OpK?Da9dcXHH_nV3-b>cBj8`SQq4OBBaI?,g6[(bD#B'es-Dc\FS
%qtZ.GlnPG7\?,?A(&AmHkB-,?$Mp@i\Ff;Grk6X=rcu1(G@Fr47S@0o"eYJ'e@.1niP8V7qi-022Qndu_V')-mSDipkeVK7du>A\
%ctM_G#J7+h<F3GUA-uogh']n?qbdt"]`7">cZ_REDX?!$,P@@sTFK6CGj+#q)#:U#&iXJe1"X?=p?/Umq]#p[0bUR`rV-CI!bkCo
%*q[6S"7_&"$;fSd7).(S:W0T!I?&s=81'1S3kt/&'0k^X3;p?>=ft=&:g9?I_/e3XK'J"XZEf-MK>O/9fY$%ohJb!q*/"#X\9sJh
%$Lr4J6#UEf4TE&.-$!aLs5Xi?4T3.k7IO%/&,Q"e^HMog3XYf>IpX<=48pl*%Zoc-qu+^Xil+qoj*`Ai)"1fod)T3nZkS!hr8)Po
%\Asd:L%uSSppfg@SU^%eH[f?T"eHs&*LIQ=pD_mk,`=fn3+G1Z5*KZ\:D-N4H>O@W$=ZJ0RbWPSq3)Wde)U-0pToJnE&iWkmZX:p
%Qi2@^A&%q9nc&:2qjmI/^Q$`iFa[sd/udfRrqd.R]^le;D/GRRP:HkUZguGt<u1GO2eVqRmY.TF/mcs(]dMBl*.#G^WI;Y&R2F6T
%7GdH\U#TO+^3En+5O\U(`rQ(N+LBK5F^2$I(rm$%oDe\,>ZN^fX[K:I3>LjTmWa/a(lD;UIU:1hi*,^C(Z3l*Y!sN&Eh22;%+V.u
%Q,f)%J*co&)2llnTuk<>pFG\cIN,32jd95IFn1gtIYZsKT5[m#VfKu6!L(q.G[j#oMJYn!4YC9eS+k5H]!)!^hH>9"1CY/FMha+t
%ms)U-Z1uRgnU'Nl]Ak9R%FJICs-Hp@(utWo_<Zuk%jm0p"_VJ3l`@Da:c$m(@[:,-!YV`]HD"%B/ms#Nhf,Ea$CH^!N5\]nb8;Ff
%_R]mX?RkN*93H%N]RTL/4e@,]qk@a^Z,Yr3I=/XIMRB\DjO[?>PfNhnr3'NE2C"_.Ii*#q;9\V>MmgDsN:h\u=YCU@s89jT38HjJ
%2q]e/LE$-PLXYea^,"/Ep%lK44W]#[PR6/5QSOsG+/:[8+27W2#g*rp5/*2HqUaqtc,?6.?PR9>Q1<12XKno%'*H_"`K/k04'W=9
%9]-,@BjpVlX?K"q%3GbO*AEtg<n;;kp%'Oap3M&#cPLHbh=:K;pSZ'!^_=QL.NGPrP#WF*qLUN-/G.Z>C]%OA8n[[$(gQL'Kt>ZJ
%6Z\=d[b&EV`RYq!0YB'@oXhke0qd.)T5\F5VFmK"B`8u0RJc$ec^9(h)hY74X<UK%bHe^6FjPhGiRlJ&<`'\#(WK3pSuEO]\i+Y]
%e^6PUoPF*WjPU#Jm_phDI@pbfa/+dcReKTam.']Uh\Uts^PqmlI=?L$#m*;dQb?t3l3GP"84"#jO80Do&*tb,?>sJlB4,cb7Y:X*
%l&`14fE1J^Xj9Z+%da2U`El=Nq"^YT<D_Noo^V<'.M^`6SuQ?#-fmSBMS9;%mK<H*GVHOG/B!RZ0>T_"4CjUg7:1,O<f?9prScN%
%O8?MrCt,G9@WQu1d)<]eZgk.$2,fp+r-B[)MuLi'Om\"_#9L8)DKdWcFt(*GmpqCG<7j=0^FlW2LUHkPINPK.\n\<`p-,=W#S?QV
%b+H:JY5EQQc_KJ'lVPDCVS6ALcf=!1;i6::a88,3aE"qBn:<]nI*h%<WYF1a><Y7J$j`:fmJ7uROKl&`H0nVm@H<OAhU<#%\c#m>
%,mBJtEh#7T.!R_0)SLh8;Fj9mpX2*#rVXcq]q-;7o0jTKXM$j^rTPAe!nRP.gUn=/i4:0`@pjis$a?"K-h`q-2p=8c<7pa'cFb44
%a2]A)SCk(FH0J4"qWBLqTuXJmHs^rO2Yll'+(,$5^T!$2X[ikqo*b9eN0RGc"rn/@R+"Q5*/"1dJ^*1>j+SY=TVbQ*9kL&H]bXNM
%-r't@hLPTM83<7"kJFOOe2>RmcX#c-i&@`]"L^VIIXDOa@qN12_*U?R9W)C9P)n^3Cr>rD!QJdHlTm2j^=.YDSX?um@3JWgL/gnX
%HjiMQ+^HUWe`WbdW>Ogi-P,o*'i-f$%GlkFhm8fG6^NiGq-e\6IEX[p=PT(S%Vs;3#9=]GH4BYY@<O3\ThlW;_<37(Mo2;+l'QZ?
%N5aI/8/Sn((59Y457+Dc(ANcbCED+FXFIksi%O3'BlP^-O85Tg@`16;#DjGHQSPH&@4M8(?!7hQDu93khacrZ-VZ0#h(/6_IOln,
%=SHUN$3X^>YF0fIG7bhifF;1)WX+4c0G`I8oA^dL8T.!KnG\)$Sb/&p-i>ijeZ%*n8Jh9V(Jd$!&9:eg4ah.Sk2$.-Q2,j(?7WA?
%Cb>HmA`CarMD2d]!Le7dWE7_HTY`;&<cRms1.+8qK%Q^"*gt4K\?mBdA!beCIXe>h(BM\pq-5=UJ,fIt8J[V?/meV76.AhA?'@-o
%Y[:_7A&ug&Q\#`o'Vq#OO<8mOH&Ya:T\YGUnYGs_d;CUI/9F(dKuu:,9+>!7NIfWZBgi"KDV)KB/8cP'+F%8)B]$ORE`3g&Hb,*P
%4C@`@jo(ij_uAi,U-NOeq1i+`n7$uP-&oUkE:18abf`K1dH_2i-qL(*U%f0lFkCqEm!JNIq"2'Z@!"K(SrJk<;UeN*\E<P7NLc2C
%rU8pGpOhm0If&i2(G6A5@N.VRqtgE36+rc+:S'?1iU<NX$pG%W1-(`?%iX3(q7;g_rO#rrq7uq#\346hAbA4U)U%D7op0?J9Bt9a
%8Fu[i6M!QYreGEh$X5=K?S??a\9:DiH=&_d+Gi<cj6>iOoBkf'42,%n%d3e`D^5;J[<@`@0n)mA'-?6pM)IMgf"YRa"s1D:43pcK
%>abI-T0IS*4"Us[Au-8,l_N5$dEk-[&+@1rB)7I%?3)/B=FAEc-U5?Ca-FgfKk)!#7=2)M+7NZQ*5,OhBgP\=1>2[gd"h:'a*h10
%-Q8>#8aP'Tq/8LjO70D?(aS1iM*80skKM.eHFVB[<pIDZY;X;>DJZ@@YFBjB4>?X*qR>3^hR(%iF9gd=dC8Xla\!>!9)[L`5%+gW
%]NeV<,lf%I\^cc'Hs=o\KfVn,3SmnMJj6ees2=^)\346HpqZ^':Tu2gJN:K;9dFU^AWQ"cpJ^L@IJ`<%f@j2rFa9L=;>p4k"t?4j
%f?5]J,.\PKC,uS69<GE[qr:!_68\EY^NVCs>'F>@MItF\HF&"%CO3*<q\E"DH(IM:VDV45Nu@HrZAF*k[cZnp"$<iPp3L)g'X[]8
%8U>LA\#2#I1Z.YH8+M,S[m>KM83E"cmuKJS_G,pZIGqT09YMhWPoNl>!^OZm\l<qYc_#SoO(l/o</XcTUhpLLf2IXpD"_[#e*R:1
%b&N%0dec?)-bk*,cc[(>r3kq'Hs*3cU'nl5cj"#pWT!Y'Khhob4KSi([`+t5r4FkuQ-AhI0BT1Qm/aNqkLPj&e-.6`h+mO8#Z3r5
%CM]I!16anVF2./8^t*>j=#Uo(cX,5dV/+EMq3-/s(V3CT/E#POmpP"uq)7[0Q&D0a]tR4a'-=Ap?8%7Mp\1Rc\LAS^K)K\#AO>,J
%#;>e<PRFfu;q7_X/7UV41%J3$U3[s@=k;c4nN"pfr:oh)f.Deh,tB6?D!_IT`$<aoo0]r9'[Z,4Y_Ids7HL-XIdODfgACUsp>"71
%prFfuc]u%cj;8hAp$sR&U?*WYR7bCjqYl.kCol75]8uo>c5hf>52Sis[Hc8Tm+[mk:lDd#7+mn0Hjo7<=>CFT)uOiXP3Uo=Gd5;^
%?5S*dPF_-Dae/)3"3&_P:N?9Bqd/NjH2cb!Zi;[/mU[h2i%VWC"Y2Dt>NL\FC@_Oc7Dk(;f;6Q1ao1mj(O@"h&,=ehM&Eu!AJ_[_
%7$uNVKLQ+u:bJ?j2Cf3f[oIn6rGB>[*nJW/Q]?=crPb2>3=iX,h_06[np\fl1&pk*H@=,\"1:24BVIUT7id$%aO>7O!2NNLQbiuh
%lh`'%fJVJ,n?K<f-Wf0upuCU7e"+=MS3JZ4EVKFNpP8d]@c:a@SZ[H,i,]I9igPhXF'p4LPhP`Af.3RD:g`Za;4oPSiUN*JHQFCB
%p`,$e0=fR/cpW0%1;9<_kXMnE%JR&gNc8&kr=`CCEIPZNgVCHt]&RefkhFIt"XV=,eo+a@$he;7\6IV7\\ACCGs&F'B-&-rQD-q"
%o*6rB(tT.fZP8N]4%,Zk4OSaDNb=Z@)rE9-c[#NNa-Zh=oY)S;8l($2pB.j;6Y)#/U`U52!BBXm?c!FQ[+o_J?TR0GYHM<GcpLo!
%iK,_f`P0O=M9,H4)8o<r"dD'd'l8Db/9AbeIIWZ"A>jFjrHW,%T>-1+5X.@mC?n'[jW2Gn/\_bk;d(p\B<CYX-Z<,(NPX$Y9JQo?
%7n*0-]]?lPo"L:SD"@H>T@aaB:H4"Ha*#*ai,_1HUo!+\qt&82SGS6%^AQU_3-DL1U)Sei6`gS&2W?N/^%nLjW!:'G6fBds\offQ
%7723\U*9[CFhp)j(!7lT%/h9t#j[#A"Q.C+/tBY5>hJJ6_'l0^\[iG^6'_XVZ(lnWO7^\K1RFf=MN7/.KL(jnYej43^5sf"GT#)T
%k3ic1gE.02EjtXNAS7![^9O1UVTe<AfbI\o]u6E@1m`,MZ%h\?5a.cmBVAO7eVFZ8h8IYcG-/c'VdplF@<qKS\A@UaV<fH8CpPGo
%IT!Rs^JoHb17dV%Oa/!,e;(qM=4gB4Q;"@%;?&i56#T"QqoLRjM=8r4^kJ2B#:<L)h[e@m(]=FTOX'LQ48WF!J$OWNs7(2?\G]'@
%U,pAE^qU=7Ds@6$+K8`23A9U/d0nL:oB1@eSPOVtR+SU7#O-F@+1hJdU/;ZGkrFH?VNPA.>.M/2_M9GR2N1h4oQ`CjRu5f2CT^Or
%XsaJTG'JRih"\/i4m-Pn2HZ@Tl[*8'#CF<9MM$43D_,Cp$R7;3==GjX;PK!`T:X"R@;U_[(PR\,X*;"Y!OU2U3B#<Pi#NFPC%4>`
%Qpm_:`i-:(=",`@/NUIk^l*4*pCMtro$aiCG>V9]m-Ghig/&O/8jY.*VO->"D"(&qF.W0/W+Jt1rfZm&5]GWHLrF@E+AS[b#\Ero
%;K]3K$bpGu'Wl>PG>hE]1(\`G*'[PE/-,IQ'\#!8=IXkaB6+b%lS/5oBN#SUjdE-I!1Ag@7Rdp^bH#XVr;BOe=*\:*/59rXH[BCN
%,Jng(d]2mA03V"VFW)40N,s>Wh)iEYY-XLZfDUrTA'P!b@6II+5DCe'ShjKF@-)Ag2MmQ^V0u7GB6kp*h=CmYrer`l<9E8PLE-)`
%jT,\pcU[]V/=*DJ4.D2uma%.d/Bc/bRN$Ph`YZ.N]/l)Ro"tin'G0uU6+F,<arhFQq=!!=gID=?("P9*=V&/!Fq`O!1.5RMDCB7_
%!i;pQd)]3W+"0l(+Xf+jC;IqcH"h>Ye$U%i<+7'uQZ_AlfrP)C_Q!rUl1RP_Y!JgIK8MJ@j4=Xi4Ut\^jTd\jnH#/Jl-42Xeh(90
%^]WBF/dkckRgib>`aRUooknDFW49NsL>?6AC_*P@D2l4bQC$(/&Er`L$-;07.GA!407AMb6e,)kg'DXrmG^J6[9ojq5_??9'6eVl
%ep0R`a>HfA%DrK84D'I(CTQJq=M@bt#o(YrWf&1aWP$'Rs2TneMECo?(lq;4%R"a:RcP(OrT=F'$Y)/NPe;sh_d4)h(aS,#=W"[d
%CX?uW1V4UDMqj__\%:pU;9.d)>HBsolq7r[<\:D>#-:4p7;g9_E:2Bm]3-cp=PD4@4*2*mb*<\&m-XFfKS+d01mg:E;&2!Kl!9LT
%qD!VfAnE$/CbPl(Ha--ZWpnh0s$N)7.>^4:M*Y:H+Wq!sU2RlKFl2$g=*YtfbIVY&j,=$(8'^jJk^+5NZd,K&N!,J.X>[DR)Qt&r
%Seo^WhZMP<HtAQk,uLSCpNPZ%GI?nO/5aY#h4XR$bjl_bZ\(1]duFh=5gaa*UY[h5e:A6AQ'jQVe*h]<lHHrEKBJRRaeA9W!uNe_
%ZX:<1cqJG,a/>#A_[AU0ebQ)X[R+XMTJ#sDi;:TLNmeD;g2Fm0q1r9,Pf0aPobJ+Vb=/<$2V(3j+o-0?3)!Hn^9A'K'FED&1]Z`A
%P3mkin]`Z`>$tTM$BRh4#Q^_BQs<qT'4OMYh<]"ape)PWHAkIF!GdDP%QmFdfh*fofm*+W,_HZ)!Q>a?0bdFgCD/f+$\N@S[X=\n
%V@bZIO;M=<[rgldrs-PufYC&#&@V;GI4<SQJHGrhZ(4p'/T)r0n-Z%[8p1"5][H:iA+L%9/G)Vp't/tL3q(G#jsrrd1qc5rY1+ZV
%mWPX"?O(_%Ht;TV?)5(WF%b[5b'Q^-@lBL8bcak\RU=?5#V;9Jk*jCp7ikhL*(=`/A482d=jO-!Hm2B]=<*a?>,oJd;:A\k\]Z@9
%bm]']NRfRL<h%8&"XfTeI%La^-i2:`nT8d1M*ng7Q/&&e]r%fTCVY;*f!ROBo[bbH2WBGBoF)FuX:LlJZ#bk++80*<ftEqGei<kr
%N=OJGm4ZbY%RO,0go/<0==quuD=(mAA)!PoJZmUF3`uRca)kpYELq>R#JkHYKL]<gnhP?.[YP/N5_G@t/f#'Qh8ZOX"5>nTT?</P
%PLt/?CQsg!q*IXFk&Tn<2S\\:VTKK^4-Di826h6()6%F^7E#"F6sC"_#!<oe25&sL((#1MH(96Gi"_^Y&G:GT`+hJh>(/`ArS)32
%L(85Ub/(WVa$&sDeO8F*/DA0d#+QF6`UR:-P,&e/@>0]%JB\j3h</s+rWMot,8l:]hbYJ(V<T7a(T]JEF*t9,'9G_lKo!(5X$f,W
%]6%tpZ-r&S;+IrXBNt(uA47*",o^>E:7WN\q2KZnKV[Ip/^s*R@6[Y]dFbaNq5Saa`+hAh)F"K=l46Lnm4t7:ZgobNj5NbJEb:":
%C:fmc(qBria!idnBNCJZ2>lk<8aM.B9`;"%('E"<Q[l:Q5B*DJNs&KZO5"H.2qk7$]>(EUNX*:8ke^f2'/"<bE(8q4@k:i,Nc$ub
%*]nY!n,"5i=8ES:SLq+&Q#N%nPQ_3u9,tF;PJ7V[G1]d5fWI(.hup.?3<VH6^o^g\fJ5.3aX_qp=#maNF+RD*X\W&$5<h/$@.EZ<
%ibnITK@ZJp4K##a9fA>UN#m"K,q>NrGq=[De^@HuUKU*W0!dg6G=X8Zn[V!T$rn,sYg@ZBO%WPL`l<i#ed@`HaS9Rq86^Y!N=5Vs
%$l]BpT[L+e+TNU=p!g^M=PPeW7A>=nV>_!kA53/blVFImGj"83Q,OLbbD0JBe(D^Wpeq;(n(a^fiJ6B-$dWak\Nf#M*e9RtH[fKN
%qM.:Df($'/2h&'5`r,/erRRP>3X_(#Rih-<_ccf5k83^+4G5du:O6K2Q[6Pqs6!1tG<VX:m+9Q.p%tSA1fRj)O,*`5#$38%f2@:N
%a)Qk2lc)+Y_JkIPctRZP!Ea9:4J28c*[C3.g&=]1a`c+J&jnkOVl-I3r-h_a^Y]7bq1\S+lUa="eB]Y/m25&2K.kTBh$VWXHULIC
%$=^&pCgZ%6UV4)f>d2c?Y@SCqHe!I[p8ZFN??Q,"?PqRE7p8+8UbE6n##DjM8%*I3V&skH\Wo-%(6iUO/;tM4^3JuZI7os6`889j
%So*m;j\4[>ZLWD9_eWX(Xn*jn$Teq$Rr?VGHV2;hALOSOD.<uC*uDhR?sS@&cU3&;L^d^RK#9!R`HERF9rb.AI!b*4+$"]+*3&n*
%[Sh6c/iT]&D[kRbnDFclj//`Hl:tb,*@dq*NIi>CJ^kDKI)5H8$Cf9W[<3?d40G?j1h;$ggRcd&j9&ip,\*lSYJWD&Ip<f!Dl(Q4
%<fa@<e#N1%nDRR-Ip;Cq9*]>tOn9PaHBd%mkUX._C[(E316mkH(IN]C7bW,>TBU%`*.,K-3_7e(/=b?Bhm$"l3=JhR"0GFuOklRK
%N[niMF!W]!65t7=rJCL6;1tdK"b`)O3kY<3,^PBG,(%O/YuoG7[j)qpR[<Zc7NUG@g-'G&)8f7M6SEb/1EtO/>D)\fq&b$R.,[8*
%Zb+VOrib;3BTb5+6XcuJK(%Pog:/Ymp#mkp=IJUhA3JZTfOXn;SG1Q9[BgcGi,";AJ6U"X@7=2CF-J/79Fq$S3]>Y<9NWsfQ45*L
%EKj4HlK_=iYBU\>7ps"8etV%#f@!-G)YG1kfAW/$VG*m[2\Q^2Q@YElT=r,;#(L-jLNtY;j\*ugAX%ZaBW#;n@:"6hIVgdA2r'n&
%c]6lSMJSL@=@+<V(9a9ogA$B,mH460^:fZn%G+H,Z4H"]lAcsm.bK;o2uKV"]W^ZM%V[XofgZ?U_otGWN)"J5<-Tdk4FE,OY%a22
%SLL(iQlsoZe=5fQ5HmA\FH[3jF"-bZ\s#K.FZ-GIO%&s\6<ka0'+\"i>6lN:L:!PAgE4k&=kdt1;B:PS3`N9dZ5E4if/jr#42\fj
%hj8qP>J&oPM]?r"(tAmdlT0q<2IXgQ@jX#:>TK5XBj&GFn+H4:\t)R%"('`KFr=MC39TB`>S4*p-2bqW``3`o9OmD\-DQ%>G-#L-
%^&2"aL5t-26C?(L$_4PpY/*R>>`oS,2RL&bB;Ln6@QE9Yo@Y*i.kQ+#p$F/4n$AN)`kL$PVrWS7-lT=L-$a^=]@l7t&hCOb'6\b^
%jkW6_oPCTMGr'Nsrah=$fs4ZQ$I&*/$pbNeo$;A5<cWYjg.l2"/UJVTbRM5J7(*ER&W5`FOEL#7r0%W5q&X0_TMj+n=;k`g*]q=j
%)R0];[X`][N4!u`<SdqB(AmV=UlT1hNOUi9X\Gmi22bt*ZVkfrHtWYXCT1pRHl9DZLhi8KW@?S8_cLnZ/\1'`=^tB4X`6J2ddC79
%j=H>ue"Wp`4I)1j,rmmD%#s"?.Soh`bdV7CkJVd@g*@`BQI%b;.dUT\E\@[L67YlP^h2/NYZ>8=[_0mh=6h+Q*K6q/(/rl:2W<M@
%*dHUKFd"[CGe#f"T%P4qe+'gIj7(^T\iAGSJp6YK/;5T8R(Dl<@a`*LbO@*JK@SK(J%9fdU6^d*dKRR^XER;^3+3k/=Dc0SU.>5>
%^dY)-NlK=4Q"+(-LUsM0n&8b0,t2boQQ?P+BVesJ4X`FRVdH]`lsAASGG;A)RSVg?P3GptT<khropiG7Ki$-3S_LIF@GlV5^[NiT
%5O(Y>WqJcIrSLg<+WE+hX4kFsg_2A`(X))%>E(KuJ6%.GbNk%^%:^]jZoptK^C:_9#m"q:7gWZN8Sti%cMk\(%,qpiY=`i^.IjID
%c4Zec$?NZ/;kR=D!)>@o=cOQ(r!PlN%8$o`5O1CnG$X54e*V*;YPGaD.NR9?Zi*.%d1Omm@<WhXVQG094rIs?'/(X#T-7>U.2\uG
%o1Lqf?2T\i@G8gB('C1lC)&o39BLd$:-k5+d@mMN$QKb-qne$Q`E$aDp.?h6^.*R^0GfI#B+?A2ro@MaZ8b\s56F=c0tYrif>&(a
%X@C14#u\YR`1SLHS[B:4@YlGSJ/crEfL-/)B0_ki7R2UJnIn+7fe0(I_07C-j2/rV^4_jon-*D"DV64Z7pZL/H@'pckn`G\cps=6
%ARlcWK(kj=Y0;rQ@*`unK)9!Y3du'-Dj\QBT.``P:"84I`s^f/#.'&9BpL_65c>BMLt</9'6Ao%,XkMbKXrrJ-JH0B4q4=o7XQYP
%<d7V&!)*5f\2n&G4u)g;>'o&,GD5.c\mTYur84o1bGoDPEa?GQraC#NA'cOZO/BUQ_6?4C\Drl(N\7WR>;@MH`ddG7`e_^V>3j6U
%<>F</\RWrCB0IObj"]Q3E9-3Zf<@s$72&CA>h3b?9Z/?/GtY'T-(CA2=@%6s4#LD=+>t')^^<9Ydr7#8#c/X`=G7F@AD'R55a6o)
%j(,Ij+`JOGI5*rlc-Z-=#^$L@:\Z-n.'V,@=omV6#^JGn'+5ujrk[JE3.[D,%9r:RRL&<Mr%MesS"3=c_>Xfo26&ALNFHY<^/snL
%Scsbj]pU-V`Sc[TP,?&^e8:s+!DRr&+:/KF\&WST#m3pQ_AM>DTeTA/7O#n=BAps;2>]bj!C072K_IS,(`*knb<3?X!3F]("V39n
%;hjt=*BL#u&khkm!,KD;(CU1A*0#nF$kpHqVXcR=(Bgj:CVcXbdII/:<sCVbX.!*@4e)_,19"_tL4D"224MGo+MaP1K`rH[9M2t&
%N$5`]Se81oMTSO!0872m<ADEs5DM.1nUc;Wi7oGcLC,Z<WG,a..t<OD(^_RA]]kCcrSp208Pf*XG/pd^Y9?7-5o:]q8E)6AqT$36
%hhocF*uCZ$AJ@#a\ol7TC7/7/!Oc<H9HBSK=Jr^F(.XQ]KhE>nLC7Ub@^M]<@!Kd26$^*UiH)E\hR0P>YK6leZ$-kP)CdV19Jlgr
%*^e.RkDZ5B1RVK;HH'-S>%BktZqVUB%YZ7X472uY`[[;&,&QEi8i\mT<i5?+O'Nr2VD,=N#jN2;7#it3&MAJgSJ&"P67fNT=J/r0
%@=Cg2-EQ!`AmC,GrCRntW/(0"olJ(68dWDc9IC06euP?R6b;Q60nIZ"IA2qe.aL&JH5i-TrG`#uV7O*uD&_7<TeCiI-AfBS<Z31?
%RfFet[MsSK$hNo[chGWT(.h4g7sc,&5J`-p7qadj&ESag)j23JDjTRFdK:h"hq/8$PiAqjI*+=rOb5*c'@gs79R"^Ko1O_:'LbFP
%E?0STBGOMf+/eeYc[58jal@UGb<TihFOG.o*I!Sn&0ejldllm*?PI(5nB'Ja$u.TP):W&/i)s&H8dG'(HQYg-\bjdf>m;99;cm[/
%YK@isg'fUKRd@71`Di[D=BW@V*A;14&q'u[j.%R:d%G(=]1Mt[=uNZiq`L>+GI11p-b$s?GH1,\/gP9J_d]X#ob=k*&#1Z&6CS%R
%HCC.ZOQpR_AY+V@9Y58[d4fC@UKq&4c\<-)QmZ^71=hL,L*l82Ss5^QBi9N"7nPM;N4d^(jOZASFLk(N[.]m\5h4kF[4rY2$,?A[
%7a,dp#m&!-UJS"(2\i2h^Dma4<Z!@#0>)kh^"#.!eYUd_)VPbso7SEn_0NqlH1,5nFsS!Y7k%CdDD2ZX^,FHh!r;D`o/K6E[?Y&1
%2Y_.YN5OT!R`dWJ7GW7e*&/aTp-Fo%Es4lWM$!s^gfU)LL0_QSE>T[1Zk%k^D50kgcJ7'WH;;!5Ao79DJk)Mqqs2gUs1('&Sp.<c
%eXmM$)S"i,<:);tc.7j7'oRd+GZNONn)2CI5`ZuPoLVqhWCFYS(%N!qaul/!$$1;VL"gR/d/XAWZD_k)&Vjf$;K<i2\Z@En#2N3D
%h!TC<LQ5C$dS3&c.f-Dug@mS?mE!3=dsad>I,Ko,f,&>N-!B\h8GJ3<[UFXbl64[S;%RJQ]=:XujUb([qYf8R-I>^jJ-m,^UGlO9
%SInt7G(cbr=uHcL"\2L.6840,XZe<UN0&XP-`i-<kk]Slc@1Fl0"R>:@@^F[kJg[XoD.Pi_4Jd,17MD\WpOQVGl%kl9_8XdY4K]_
%/&OpFq<RCZs4eRi&2bXP4$%Im:IDTL"j4&kWEWoaF@/k1''^`CE^NYnY\k2GPO'@sJBF`qAY+^je2,+=W[L8>bE@kg)Nlj-Ie^RW
%GY#dn8O#s1gFgZtflKEX>Q!7'FmY2g!#bOh@-[@D#n)S92iaM78,]Ql:,@BQ;QW[4XC*E!&(;F]SDY%HVG_d\4RAG(^)+<a05S"'
%R/afAng(?><dShR\`1Cso1*;^l.I%Gb^Z5LCsS0^(>A@16_F>=l]<F(6gTQ!f^=k$h"nb!Ss)l`Rb@%NA`iiJ4Up4/`u3A\#"Ctl
%R`Q%+fiP,-+VV;Q`gfTu%=O4YBHC7k(EZYhRGEsK>hfZEgV1-+8'@PPo"[S]Nb,Ai6]EqH[EGg+T_m,,j7E5lII5M(-&8A.fp:"[
%1:X0*MOc,2^mfED*/38(^5krK7:=)DR9`m2"7*Arc;D$#C6@r&l7e1mIDjR8DFoBO1HQ"?/ko7ML'9W2?Dm5_\d[P6;VOGT43`DO
%RNJDhp#K3)A'bfB@@dd!E!Yd<hXae4=au6CTgtM]MWO55bp7rY^2(X`2&M<j)qR+dQul8)b\eXt4XM%3da4(abCoePe\(<e-QE`E
%ID)rG%V+W@s*E4$eusLePfnRjD4eHJas)@?@rqh#W3[P4?\"%eEn@(K&Jb2.0MdZHa4&W@VeNTK0R2lSct*(5q-t@'s)t!`\NhSt
%U=lWD8Y=AYW8Hng,)i?<U\aoj2t!()jX=0#$qj:]@WQ&'CK.)%JjIl=9Pgd=6]@@bF&WV?T(PVVkk1lYmESe!&_kL\K=K\BpJB#Q
%':*&NIel&82ZJ%A_rc%rN=-a6.Fr-Jp\jm_3D>9t'DHJ.3F4CHc[TAHR8W"7iLpIVA[dkH_aVd1;H7W0EI)&7<7EgWA"^&02o9MT
%Vu&+m)-@FTU;B0QI;hFH3;rg-\CCW&jOOC^Jf@m/;&7jf7K=Ws3ara=S\f-BGmK>h4%1+#?"ed9B'fViF4uh7p@H/^,ARealikeb
%Z@9LF2IU=_GBcO]2Noft(ic*%%Fj#8!TucO940LdRi[P=K]PB8-rMMr#Z$9=e:K5!C8q*PdNK"0hDj^F!7mWLUtFbK!='[=BG3e'
%Yc'9Cf#,A'+Td!10Q$i;7"aS%"ZGYM_$hI)HXNY8[ctoZ#?DBDLCc^G-C"fY<&0>oWM6W=BCL$8T7TP+$;F&p,Qob10UN!T^$hZ>
%2dpEkd>1=DR0sD=%#(<&8fAjR92!,712&SCT>TcRgANF?Z+=AP$5fWp"Kar-Jq+?^`^QB&Nq*E5ZM"SK`mj_\*$UO1rchl`4NA)&
%Ku@da\r%)+^E2Geo5>.SeNc]X+cNj'DWa4Mf;^CBIF:Gc5AtWSmnJ@(-?)"[AJE:9@*IG1X3,qJV'A?@VJ2Uf\i;rgdZhhV:iV35
%bkoF+7]EIgS,"$DTJDWS14ZYD0tp>L>F9l!3)TK`f;$D1./rH4*Z&:j(Yam9TfN^K]M27:U88D<Z\9e8QnJ]CQ=L*N]lY1NK)FD&
%%V;Hd8nMHDJKT6EG9NZkBHfT31MJkZ/jSC2KIT6XC__XO?cr\O?ajD=*;>X>.'V;HIZI%"d3S2M-t0n77t6ctj?`pO@%Wj</h)$r
%>!F/.RW3B<q8kZaJ&,e*HMMi_7tbo5=rs?9D^3jX8,IK(m6,Mp59<t^+d8?pSI&K08P*N?@?M1X,+e@4kGVNO?8hPE>]osiOJ"q7
%IYnN[0-:Eod)>]XH&WuC1KQNYq%RUM8>Ab<o*,bB[q@Ien^0Uk3mM)u_V79[Q9<USL,06g?Ok9N!8')h#h(I1(Lq>_9q?iI,p[j,
%.^bS'b*H7>0D7qFF[EkgEcM`84m7A_!m4&2fIXqE2I$DU\d3?[/$`f&^4cQIZ]lb^)%fLm3X8bqSjQ3W/BOH\qo"l)=\,\/c)$^n
%:@$P/BJ!M$;\H/VlJ*A%SR-:UX)Wk-qdF-FNksc'6V6jM`A`[<))(ah"u8@F%O>^GQ"n2FQF0@1F9@9;h_7#t(l@neLS'4m\JqW-
%:43<S*"C5d3oQiB:U#''Vss]DlWAQ5R2E^\lP"?nD81_BoD=7[c=k25&!Y*;B!;GYP!.NR"FSAd3\52f@BTWAnmX9Ib>hI:e,BM1
%Fl0,&%$eBA(Dsk4e$K],h0cWC6dJhMGf"Athn]a;/\q_f$mrkq>g!,YX#-DU*3m9`j'RYZ9J%g)'Do//gGoBqOo8DS-A2RJ#(W\Z
%Nk&h5l&b4.>_f,G_sp0d"g5Yr?!0P'U;Re@WJ[5c1C!guF\dXH797mccZujqb+SI37uN)'+:Bf>c2gTh+:**WL^U=i2&0.7ej)O)
%Pb_KNnkA"sCZ1oq">UOI0L&6089/2pPAZhTP*ocU8bbb\',&r,#iH?g9+VdUPDgY3>MK5EYW.47f?KX27#<)ZJ-T=5d\k<+O'!nR
%2[JcPeL\&?qJh//q%h2_gDMDA(`Z7[%l<p(ObORR14_48V(MX-QYnNgO4?(`^(7P.4f4J<^G8LG1W3jD2.)V5=*[O6E<E')Kd!\+
%qIXTZP[J^)f\Q#/*[XQ%,@H@=O&Xk).)bFfl?<&p`UZ.l.hRTk$L6FC>=E>s">;KM_->nYI#0Sr?LhWR'lB:oVBPnj])_XVbn$0N
%:Ro1rXH,E$A]d/@8`sOV-uhg@`%/Lmo>$qcT>OH&lfW5)*riKR,e:_"nd7=oTR>Rf]]%DV)d[r4p_k=,p1PQ:7Vs0uN4gu85Jm?j
%IDK]EI6GDPgP$"n7,'2F<&r"92X#oF-aSd/_.kF5N"sUKp)ldIfoDXFS-(aJd-_pFmIienV,+_%<^hm,k4bpl>!.J+ftpr,h-(qu
%RAT/H1a.'H8nD;3FT%jp,<['#RBf2Z'%YuU3#P5c/&AXi_iBMnZFSI5RJ[PoY6sib]:J?o?r7_(W6Qip"%&i+.Cmj8Y?*]QQPhQ)
%Nb3=G<U+?N0.K%Q`=cu/a3T$h^]D"<oQ<=\j<5p\j3g)bcMJk#jS+:/Fbm1*+*0Gb$7"\]pgjOHPT(UNrH0bb0_uERH.iu[g>XY-
%-HE=g*f6=YAUiHQ0Sl8kp1PPZ%!KC4PF!iR27.[L0>^EcA?`c^6@-Jj82!1t(j)kRU\gY5AOY+6/18%Z(T3MZKe>c?CT4k998T#e
%)).DC?4Ul.K'W@X*&]S'd(_%YR=sn;?MaWT-O<DY;br8dVi\k\g&68nCk`N?Ac1//"UZ`)aaFbU[P)NTg%J#]d0NDX26BLld\X?!
%P?Tn#X&W]Bd3[UL5`u]DJZYDBCup*[)%YE'IY!_$4SPV#IIpTl!0bM]b=k`c)-M%9<+O!dQqUE8p)<%NdGR!QI=-2i@AWne0q-EK
%E:]/\0fO^ue";HD2FCt!fkQ&6Pg#`rcp$Ugq."`7i7uO'-1a8I13'34^W'\hNfPtRJm6=?Hi)1lh9eDmZ^)`.6JJs;kr-^p/e>8k
%7\j-!MqE+a`/mS1F#b;GnukQA''+lak5XFSLnWRE"8QZ6>#gN6lj.XL6/A:('ptD0echHCTt<0#C^f-C6"Fpe)/\!VYJY80]t2%"
%[Uk[,YLPJqU:A?rKsls#bq-dV<neA"G#o%0_Q%3pX&Cq'#%='``MK2nCsPgg@KN'GSo,_$$k;NIAIuBV"34V10r^Gcm/=u"("qcl
%*mIt?@(+QGRd7R_=91%ZRr,J]SeRW.be=69GQ3BEQ1$r@+cg\Wi/OM!imI>6C7Qth[K?Q.o-o`NKk(7FVFXXUVht+H/>AN@n/9Kf
%aCA,Z=,aRBQpDs`7U)b-k-iZp^nb<)7o,[)O@8Vu*d*i<67QTBW1[5iIXq`_aBqa4F]%"7gF6X&_>Xk+X/3O_F5`/S)15_j2gdOP
%K%ZRT:S.&jh?CWPa4KWJ+Y0bXQ]V?%j3*7gE-m;"9*o]t@949]NcB<f@'a'AMAn1i]l9)ldYaP8IkgUB@E\W$ZQI8Roi1nbbu>-&
%kR;8>1L6;Cl,3I:h2U-=8%22hB:,_oAbLFARYpqX[c[E[[\oDjjZC`E=gN_Q_;RN*H=p9[!Y#+%5l!0<iU47,coGu[18q`&Db*Q>
%;%kjA/>U]>Z,6;b!eK1Hd!@UoD4!#S=B+GMhKt3Qbt/d"VqKYd2^#o3bGNAE1k4Em[@!^5N+O]R>`.cJ(a,0ejF*2KR%pc!^ti9#
%h(Ne&Xp/5agS@6,X"TaggASPdGD?M%jp$9!TeHFO./T*!`S>Z[7(3uAC!O-ihplkd)Rc/DV*7&RcZd`1\335t+8PBVa!2;gW\uHP
%8IX!'#$0@'@s-VjXY9n)6FO_IU9hhgU(Y'YRu^cN[U46JTiP[XT2)9$4RNLSkq4VJ6BSmn0]qV#N],_h#HO1QV/8;E%jJReGcPO%
%(Y;LDntF%cF8+u8DR"#f/hc'`CBR(k]=G1&XA'26'$Y9[F1&WWB(*`Edl#?$?a<iVO4"q)m7Sl4;kBg%db?`s><gGJA9U@d>=%-6
%rL.dYn=f:,#<h_OBjtZgH&Q]PNip0p[XE_/FOO;5)dqsY)P6@_I9irl,4?<c>ZTQ<p(B#;F&'1kZ(U0'%l2At6/0dWf[$EbUYXO&
%qEEi=;bae@N_]1[=#gg.S?$K,?5D=C&7`2OP&du8V`F,cgW>euj3`Sb2fTA;@Y3:?gMq)JYD@<]m@nk,b:N?hWJ;FsfH,oBI!IcH
%@0ml+a#Q8)jn7U(BY@66_p=,9$*Q_q!aguYY8,An&TA#YW!N2Li4X]<iS+K],.6ijM,a[F'?a;UI:EG8j15_m%2Y0PT<BeHip-Gf
%g"!=*AP;e=O4&(gmoQ+5nb!@[L@/.2%__Mj[DaA4,DaS<gYgq#4CEUhUi*o*PZki+J\3s<[CkEYMOcp(aoOE\B(7/?FiXDBMQ+kt
%;4($H\mK_la4D,T1j$G%kg2u[f;KAkmjY%cn6A]#,\s[p^:FlL-e2i\HPOO6#4(X"+4i"b17P+AcEA2Lh9&FD],qJ5R<-)_A(T=.
%fGhD/\NBH3pGFFLW][DKYY8SSB\c^0:;Og8ffEQ6f_*Bs!N`K^CF'gmqYb*+XZsR@A&m1;Ho,rYo'"FnhiCVhXU+8J1Tj$+qo)F3
%&^e%+B%G]?KgR@FOF0[_qtIRN43=VHra!FS6Rdb74c8j$M0-cg&+')bKmG!<)cp+4qu$9LBmp^Uq/9c"WQ)>Jl/cSmjihg$<$6(+
%HHlrthiAY1.DbT=MMMCsW!<23h))R#G/-_h5ac6hT2Ng,97,n[09T\&'HXGPo!O!1hT#=%&8cO$:soG2L'W/CTeuULe2hu/)nG7g
%I`L'p2uhQYqoFMj9YOHNOYn&rc<2"kE)]B$&grDP609me77g@).QI"J]$/mQll/StHl;k/<ia')f2>XUVG4(sC1&fU^))PgD863g
%Xt<c9#g&tkp^;T]P/m#%!UHhM\D"m12Pcf+qppBQK579p_tse>7)fb>+X,DS8*Zl40=@$]Eb[>4%j+FA&/R"f._o!dHsrX*pouR$
%eDW'51[?@T2\bDFNU'5UVY'Fnd`\bq6!#u4*%Wg6*hpQc3-@uK+dh4[(Yk_8Bdq[r^>?X$lYSN]]E:!<&$f(-7QKF":?t6X;Ym;R
%WN)F5kXlInj,Ri%?nH-")sdl3Ok/Cf#,L*O)@6)(DN'S'>;o4_<_EuT9bMtN0cH6DMSojcb@Zc$p_Wb`@%C[tc%*KXFEXIU:mqhu
%IUo-q%/3sQoJ!Z=HkcDB,k"oT`.^6,S`TdXpbK!QSjVkXGr$E&EZlMk@!XjR]J.<Ob(!=KT>R7f1Kj12+,HYSTtV/iOI2EpVRk$>
%'c-UN$1?`kB3P@[k(ZZ8c'#:KR%anb>mrXFd4Zr%PJaA3Iro,0Pk^1Phfg$Zd)O?tik.U?r/Kqj/GFV;Q=6:8n8Sr$rU*0QgKl0I
%p+$r&J,Ou$TtmC4etEK+I0WH;q.#crh$)gW:/kl3`H$udB>p$S9bMIVo0&L[QG_mtC=8KVGkCM&),/7R#@\]K4u3Cf6l7%HQstQ1
%*t'VRF,u@"D!U/eTP[7p(WE$pRa\i0Pi"VU5E&\LLSQ]jPYhKu3^X1:\V`%(`lTE)m@d\D)oJ&Pq##2t#8n=/N(:ksaZ/nil^hE)
%D5%Y0J$SXq@EGIgbknRO1CrncAhc_^/E((R7d<m3qVlW!S/gD/n\C)qj2A+N/=6f080(&g\*]7)?Zo>PP!dlCQ$U=;TU*mnZKDsG
%$*El,r-?.Al)Aq[k&J37=<tp:0s[T1l`kSZql&$]6\OEcUPE4fB)>IZ,ag>aR[Bafp<#&ua]'b8q'^uN=68J-TJs$e4F_bfX'0O#
%'Gm8VqV@j3^;&KtGT@f1=<8>DX)DcaO?">IlRFZE@90YUi,p3V;cUij;Wj1f/K,-:M+4bWF][+55`7(Q.?]E?&,Xh`H<897%FKj7
%58d(t?aj97"O.q?qK3P7)#,\B<"S]#`D3Bb^-*'GZia7]=Ztble2[c>>q=JFOPrq5bi;@cE^d9\%%\Yc]er?16MhY,c<T^2;2]mH
%ERWn%o]L7"q=+``EL6c.bYE$g.?EeM%MUm7]?OJoSd%@9^`58M]ni<ijjV43V#S&lE%:pu^LT3q,Hq.%co,Ra"k=&1KuJ!d[Cq1i
%>9q8RU0*!h,+$P-0fs;<h!EQhX<[BQgp#opDT'n:4[/l@[RjhU9`!V<:`7!`0e[-\$sSk],;l\[MQaL7H,^'S\YuqK[E?X[D46T>
%Pe#1W:JnY47dW6:.(pdK,s#=SAL3.e:tK<lm%Gd+3LTR,V6ld@>Wfm-O*<WL;FA*Xf3B`KM^UMP?AMGu2Iu"ZWMNUk*Q<q>[\Q>F
%cs)Y42Q^4M"V2Xh)n67F+<rTi$#<R=/7MWa#S(cK+9EPH8d&B9an*"p6.).<"r$*KM;'-OmV$n2$*U'kH-D)e7m=..QGEe1Rh&-o
%^f8PUie?X[8`aEb7r\t\V)PV^%!sg=(fm[:*7W,*kYuP,3:OjXglUO8ifo-#\abphS_WPM+@8TKX;XR\g]NBQ>ZBuM(+=:t"IF[S
%N&1C(<R4NHKL2]$,/Gc`+c)#d15#b1+#5:&>lqnIo0$#a-(&MP*+%n?nI9#>HH;AlqY)0lQq#A,6\:^0`WMd-lu'%uYps37@a!o$
%W)OgM=GsL@flXBR[i4-0rgfSR$!1dPPQtu/eENeG+'@l9FhUVS-&DKMaZ:^W<WNgf=-On>EE358Al9ei2dXO2n\(#(*-4[50C0kB
%$cftSl/UT+s$>o?D_.LjL(4Y;M!:@.$0]Hk9SV-8,&P-6fA9AM^p-(]@<$U)6kIttER^q^>?*)gN+)i.3\/6n(o`[.UoksYoc,_$
%]S]gd_ius;#X"#_a+1+S@:MKIQV;+n-Jb+fl!S`JmKsBI00\Y-$s#fdUJ;SY7t>R>12a0@ctj_%0)%h1C\rBGa;HMI2=e,D=QkHr
%,[Nkrj0:_?;FIY'2D)QBE9kJOPh7-[l]Mu4,>t!ISDe)SlBQmfEjf@a.@o+@[7>;:q>&DtqiX5#Z/A`"_nUlD:T;hd$^0m-X38D"
%G*WP)(:Pd91k_HIr>*K%<".'2f-$Bc@BEVKU]CQ::7I6H(Y(`e\4'u`lDpln$5lKd@R*pjqgl/nePP4H)k,_&%jA-0,ch4cB>Z-R
%9Y]Q/_MLX(<J.uiL:43&Gh48*5RB]<MI%Rq)<QK=D=uaW)uj$^O$AZbA0pPiLQbm[Jmac*1brKZ4rR\QPVp7$`?rSi*Fd=JT/mgD
%\J&@$6mV\s_%-QYn5P+Y:6!,^<&#J:,hc2Q8b[dZ*IH/3+r;X]-A(j\H!t\0Q@.EVBm'_Fa-:dpW.8ue_dr^,OlZrf*MgPEEiaNQ
%DWh6\_-iLS%6em\hC,or4Kr>`Dm?)JM2Y_L!2[Cr*i<[Z;jfNCQlq\2!n8d)3?\]e<)8Kc2N+pDgfh.aCSkiue3'!=UU`)r2RST,
%-&2lPUm7pQar1s.]UOY0)@Rj'(HXIn.'$3>e_s(9A`QR=CGE?*&dYa%m+h!.(l:G9jB/WG7;-INC@i(EinLUZKN&V@pkt9lI&s/!
%2QVd@J5rhd1G63YhpYtemTB&6O,17iNBK<B0uJ;fBPFF%;59d&$;9[.L+/H*=Cu/#Y`QO(4)D0UdMTViJPlR%Lk[?XJJdYCJCWZ6
%(LL7[>F^_H<;a&1:),de7`;$a_!6$,-5OX20e@OPCt`iu]1`OXIJnD+:#ZPWQ.EI:+%rr<4YSoFnErWFXCi,CmI+bn>4]0,.p@Og
%2q^*lOBh,,IU#O$:fWnLTN7KcF_\fIR`'JG6T;$FY4E!/Cd_r,/(,stqTJ.nXU`t1aqBe=7E?CiJFtKQUPa+[7T5aA91m#i/P#n%
%#;Z(j#.2YXog(5>NP9i_V,FC5+C;UuUG]c&>1F5',0omqM]-K_Kk=o$"to7W8p(NJXe44tmEqH7N#V3<4I@P.RUJojM`MOHr76S]
%@Or,nLK%]emY5P@@T[2a-=F7HXC6Wh>!J')rrI#Mr'TO')9/n#a]AKo-_193'C[lLJ$F0KG+HOZ&-Th&EW6fB`Co!:Q]K0IEbM.\
%Ii2K.'i*DV;XrV!R#_#B?1WeU!*r3YF]1s;mu:DCA*h#u,W,a>(J=q06V?Nk/CjC,U<6]""kSqeGg]A,b>h[M.Z)iSUs)"sS*H/$
%:gC;fTJ@u+R2BFL3*+fFHDF&6!q,,2VE.^t\_dso01`^=1h`u*fQN19IB,,QSo(+R"ZTjk?*(p$brRi6='W@Ri$t%)c$H'P$;Ho:
%[&0Q)j\V,:L*9IElZZeaOfe`S8A=-m/ThogP,)L!#_mQs5](17Zl.d9Mp'&dXl(:l$-b;^7"kl>UF\r&;i$<3,B^0@D;lDS9cPBY
%1NDL<-4\%nai'=TT$E3riteefhW%J[<(&[B<#3g!pfWS(A</>^#D?IIc^RpFU)"WQ?2<48Q1$D=+>L_@EE=&kH!?!CJ7hMD<>o0q
%@H:fZa9jRQG7#l7Fm6Y#Ar"459j:eM8\en5C-$7LaY(3\Ej!f6h%6Q+;p)r+dTDg>_F:&,V6D`J\2:B.4mHfA]9/<H)g7-SQPP7s
%rE$I>%!s!T?A[bA'S/Bj=H\&460Q[irQssi#hnNYRAmhN!`rc4OqArR2hF<XSHcQ@8bB5h'N;:[4]ht(\UXN>D6DBAF&S38BmnN=
%$>tPp9Z*Au"H\@M8iW4rBE1WP$qpn/"q[a\["):50&Vn]_b$1b,`Q?PL6`O;97gZFE/#5=KrR;3"(H8a*,`aR1An-fD".-MpV_<Q
%o=$'sOiO:pb9'BZl';\miaOZbP.@_=S$sEIZ5P0L.ao*V8uEq00""*:(8b;ibF%AXQ(KS;?*iI^]/*/8<!BM)1Maio)Ah9Y(">fm
%Jn\+..TFo2p6M@l@Q;WAEcK3q+.&u05EZ-TbU=bj;3f-T6YFADlS>@jnHHP(A.$J8'W\:X:_%4T?id<O#)C3@>,-mDf\*7Hogmh&
%_Ws88Gh?MPU*^%kdM.,>gTqmJPPr\*iki]4S"Z%g;!f`a`c9:fG=m[__O7USCg;V5(Ki_3)&0HNahQ'[Wm\1XTtX0:6K!35bJCKI
%ibT]RmDV)cD7hS#pkPQJ'JhQ]L.Gb5c!9TB0OU"cVXPa<eT*'HdYu06,s_^/YpGg)_HgLs-4:X&l'oe=BjlErf0V&'-)liCeKHt'
%[glHeN7Rs]]*Yc(lqjUBcE4W%(Y_Y]\$_*1REY"1=X=BL'VZ:O_gLrU-2W!&.SDU^;jJTiZ*maPMn?t:#34KP4T9&D)1K5?fsWF+
%O%c<nS:P8in&$[T@Y=!$5U1S4@qm97:LftY<MTgt`6]\\i"'t:>dDM:(uf.BA#-I9Hc/U$fLDpkg*F+3pD>pF<m+cl;s#p)mpS%2
%*GXFfW3'XXi,s6n7]EIhgi+jKk09iF$,#]t\!d[5^C2]#,44.0f/f2UZlCt]$Ym7_<,sQ0<n7_E8QFG%o]XfgYu\HS5t88DTp=1C
%1'3"bXeJ\pD-p+Z_.cn(i?_#q.20+MW+of6@^+gf%:)3EaP'f)((Y`P)Tr]7@de9[iZLt'_unIHS$M%GO!6*LW0Cu(dU1ejAbhrf
%F)M+tHd/F^P<PC:fCV=Iq6-o*2M/;j[2kYZI@:ZqBHe$P)bn8Oi<Xn.d/s/548PMm$>ZEY@I(Ur)Du9;R?6M;DMD<b;L7,,"5845
%)V!t>gj.1:%`=a"*1Oo$WumCpf;2)j<*>rDJ8m/4)R-)!=59>"H7u>g\t7q0dTUTlB.JGNF_:Ib*'06^d0L>84m&CEX*/G+`a]<n
%nEFIFj@^ER#:RYF%ONoNVB5e:>]".',Nt)dAKAJB2u[6+2TousoS+&SP=nhsKpfML[A:C@k0h1)i!Ve!m*s"r?4KXD?K`)g:%DC7
%"b*#JPXC0n*Z@6Ud&f>].'fhti\rW\'UHutPoV6er+g980]*hE&`&#+-Il?H%;'<:3:u"X&.g<.[DDa/$su0=nQs[ocfO=3j+%&P
%J!(>2Q(+#W6(Qj>^B'W]9\(!#[$hW)#RNam^0";R=QITK%%:inAASc8;g'NfrYs&An$mk=L/F8.?]%m4rFf#9_7TJ^[_7460_s%_
%1R&"Q*/mIbfjm36^,^j[;T4@8=2LJFl1H<MO3umBK(0.Hls5bM^pqfpS=u'!UG0d/Ih(:bM46WrE/b$48eW'kMm[$aP&6pLV$:$[
%;iL9YRAEa$c&]qj,V5+4"#R(<+%B)#1=%I#Y'Z$f_Nu)h$TNuAR8Ig]WV.bpb>NE*IpV?h],tSkZ=1SRXLq+Wrj[G!772$A*Lc@X
%#Eo_`,Ua`s4;m@idB&OgpkkZ4Re'#gph<\q?kuu*<Rt&#&3=?_i_Ic599aI/oUI7fc.Nq7+i:C2nE1aFG0Z>[_=U"d#3Q#47:n8`
%&F>_1<nj<!:P5Pn&AS@`XA'6BdGZC1:)%(r3gmrt:SQc=+q5)Id%FI=5@M)Hn<X!NJ9X6>H=IgF2B>gMITtKiS_ml@.3QR@105#.
%p0sp=Bm2&KB$p1kKam#_V-hiRa:2S;!!--#s1C@S0`5rBF2?:l?(ut<T)oGEQ/."lE*Au0AOsDMQ$KsBHD#Z(C8Fd->G2qa4I-P;
%pK_=HAF[P$JO3WuA=En&-G:(4k8DFd_lC8&EbnU$-O_#\8Xi9"Thu!GbY2%SE2G@@h6A'1+ISg@51rA5HG8pbm,Rs8L/Bq5fQsn`
%Z7&ba^MOg;I5H".H?<f5n[7OErZ"oE;,j::6p]*NE#jEIb^^MH(%2f:Md[K#IepT5?@thrU^Q/DO2;0^7hOFFHiXC4VJ7,8:.qT/
%:I`j[*?XG`+]t_j*$<5[d:ZZ*[rt):7@MQU+6Ws>:nCsJ&jFOZ%+lEETPMoAc$H9#Gdn3.K1*PobX*NbiH`FY2alM5V/VaD+iOaU
%@ti">0$294.nj-IlTAWm(a\5&mmZD:&B-J*q'n[i,'i4er&fk4,!-m#4,HUmUc5+4!]ODJ<+iU7q_b\VZ[KL<A3qt*U6;F_Qu3JS
%f<'hA3[#8`_m>2Gb<c4t,m%5(aVmM_%F7\.k2Hc,+0L1:BqXB]%NK8s1C\1VmNDlUM`dLQ`AS/2G#!b1l(T2%KhLOC^s%@;3:5N2
%U]&F96el\m-C,!J06JnrnQ'=[oAi4,*Jd`&0eTHZn4<;)Dg,k%iO:,2J7F$H0RiS?1>2]5D?;hp7#cmCRq<h?A?QWHHXlnseY=Q.
%_`AegI#]A9^`JA.gHQMM(uW:0_/]mQ)MV!5Hf^nB)kF.^%"P">b7*@fhW@ZEl:>J=5R!E[Q?AP*$erXV`$3Z(R`@:?el*OkA*AmX
%`@g?Ai[MK`VKO,r1:@L+Y;/:RI_6>-k6Z_Lb.qeMS-6^9DhC.7QNhj*d=a[Dk@LHGS!pH-<9b/jN>`#SVak1=dP4pT@E^$DhjB/?
%P;TE0\4IO`-nCR@,7^trX<=E]W[(cL/Epc68k8I8e*d'C/Y)YsWYm*]@cME-6"/E5cGI@=MY(BWB^o:sLWP5r(>%Nn+3>2J!e^NR
%ps4SVZo@+W%B7N]4J_Za(nN03$dCF(T4VYC&HZ-rn`ZeF6cG&8Kt-PQ()8p51H(25mo6_\Bk-:1#AIZR!\CcPC?h[P(=DTg'\:DB
%*KbJraWW]J3<4GlC-2))P5$'M,s4)E6(kYLL</M"UDVE)=^duV3>4OtS"taa'R\cT%f&L1J;`V2VLdnI%EiJMTi!('qRH=.5hD+J
%+#(\=_qGBV3HYYV)^qgSZ_OG0h]$70!jZ.Ij]taeqtXL6m:"l/KXs>VCO(@#0qa6M)R'uR=!bs\8p3btVK2iKGM'<<Bs1M>^]GJ*
%:CqT)q>quM/Q7mLPGH3;F`[Pf&mpiobja>.*PuRtGu8,&-.N5,rc:,Rfd%7=Q`<Xj+hKiPZ5+JOJLitMNkIgeW.J,]n;oU8%`nV/
%P"fYG*YC$Xi(&:?a+^3pE%)mt7,'e5W@3q1&TA3*i[:::V0M42q/Lq!,f/gi8-kYJ`W$4V(EnNF7TkoU#LWFc\N=m@)TMH/j/ZbJ
%c@K\h118!GBOH4E_5_`S/Gd[;/Pc)b/@mF<Hs0fgdL]2$m*a]3m5gG]8IZ)IK["mPrq"Pk=N;D&]SMh^=CQk"Z#P.s7:k/NVQYWF
%75Bu&Q60AK/3[2R@:GQ6TM6,O#j>[S$,h%j:<LRSLjY4P%0cnlD`DQIal[VuCgS5e)U(a?Nf@ILp(T+XSE;H>Q$-KBP(tUdUW"BN
%3"3'/DoaKkRuqV8CODjKT--<KaI_t.geLWdDl(n]&GH[<gU@W+Q`TDm'(e0X8JpmXh'Ru]6bGO,p:2XX9S3^IM#7f_We"/`]s@=8
%e.o2V$cQg\[3<Ih:Xd1]maR'SJ`0_"3MX"6:@NfPWqQVIe^X@I,p"*:-oAl"Cb#qqOi)#=UldI#q<Gha=FjP^S?,.T"8CjCDMOm^
%'r2A*^&E32di!A@p,/QMD9,2D+V&.3eY7\XWIADikc9\3SeB!n=HT_>\B,&H,p074NFBtALU\SX?@sXbM5cLTIie6'=Qjh\$HHs0
%BZBO3$f)3/FCbRS('E&&k!)Y9*5<PSH"$?1P..UjcY%20,a<8j_.I>'C&C\gLbh?W:_HKu2@\jqX4@%hIB'Ec,1][tg;FHB+P8OD
%lS0g50PS?RA!'?,)E]IGL]rYbKK/&ZR&U?5p:4A^)I_<&Om:]C*h\a"_g3';@,,GJF=L5MMoqncSci3p8<%$L1GR#LoWmJ*>UCH/
%%o<R%"Cdn8iF)uUVgqF7m\:s3?Sct]3A8S]A%dZ],_fEbWa(1DiPM\fa\\$NXK']/8c+ZZ%085">)1Qs-.VFQoTs\lJZ8K]i*i0;
%&8ar4cnM!j_CF#f:.@6)@'E3@NS($ZX4>@RllT`V2adK3-f_"B(U;PF6jTsupMRn?b0CEulZh<rp3!s1H+-C$qrt9[?/"kikt[.&
%M![=\WM[!5_`ln5e`rNomVEP.<;,QO/Gmb9\s!r7<Bj%QFD%A9%_GM\Wr=G-ApXQ-:$q!$FJngs0:5kmV.lLg`(15VSaPjVW9;ar
%:9L7aX/MTW:maUj]kAGTe@uke[#]Fra$!S5QVb<m4B?=pj+(e(,EXsg"!6*.'VOcB-T6=#3oKi*P4En6o1O(okJa]B8*b07o0OV_
%T68.p3(,g@cM0>6mb[MjM+[a2N9:m5D0\A+\H5AV`u33;&SL3N`iHn,_`HfgQc_ALJ[M#gdi$J)RAj;3`q.=1)fbRbDg^=Zk0k3o
%gJQ8Z&Uuc>ee*DADU'JuDOTXjNqgM_Z]=f>j7[Z:_tbGk@odI9d]VLsdW0Mul_1TM-*7eSf@,^F's2<jVB&-W">aK`)`,?dmDA02
%2p@9@?+5LIdH5Sip)>r4If"Xs1QOJtm_&8k>'Ho#*8KDf[spWYc#VkP1\7sK!(s)@3o4bA>7K$InU;2(3prX#PoI'5J(ht[=Os)8
%Q&s:%YW]^<fV^U`)nI+Sqrt;3l2)RaU&L5qe7)..B$J/gk5.V6@d4*6-Z$>s`%hW382iS4.iO#)Q[FJu=BbYGSTd9U08#J@57pn-
%FBu7`f'>[.Ao5t#(Mk,eH:$jc+:AEgD=.+eJ]5\8ngfG)L#GI+^_W5&ZJD+,Q%7"$@WXat4,$L-FTeY_%-T`+,bO2XWVmc*+E6lM
%2lg^eeW4j]J9?Sd"-]F1>VW&(=d\''\>4F83FI]4pDX]I+\?Aif<7,L:&VZ^UK>@6K-%^u7UiS+8oKDn;^X_1gX9Clba^o;s&a_c
%SmI`DVj4q#!B1,BMD>1s.Yumtm'GV'K<+W;aK@om'e;I91Z;=.fNBepPm]MDK-*Id"4cbu;$7g0I(o/GUH\]_1iEC&<r*TkJ?64.
%$7'Bq!^0L8\Zc:,]X"s%&8_@ReN,s?6&JYK0.EBUXjCk)K%s%>.h%)PQ10;;#Uu8d%N-4]>"7%?\O.Gjmuj'^SQGXMN?JM[DPe@A
%8MBk6<%+20!ekUFRM]ASeZg4),$LiuiHQ()!:%YkN<aWSqaA,_):`Z$A?=WuhSR^gmn[.1L>!baNAE#mTAqBWXC:O/PfC8=4[CI\
%1J.#=f$cY<R4KOl/I_)BQ_bKQ[8RIA.t3GSH@uNp,O(SENQ;HD=b!f_gflDo)dh1WFaEL@>,T*,:gF$Y<LfZoHAKh3g4uLa'pO8V
%Gh!o2^60I]$nek$C:3XO9(;LuGKd;!O2[?44:6RBDs&X%A^r=l^Q)/k2T0Ls*rXW]"$1(9J_:IaR=QaV1#WZW0,jEU\s`,Y\\ADO
%o-_B**NbB.(J:(;97+Ka=:JVV@?EB.D(_4RhtiMgi!Y`iD4.1L="rD:k4h:?UC($GZkX'fNa0`GPm+$$S<u4iVeqHR[\1lrbe@W.
%^HtB8h/:jUP;HFfdIeoA^\#hEarBr5T;X[^Dm])i7sEO0E;,k2l1H)CVPpkK0Ma5]Hcc@6U29ZlHbhn>e&u"H`Q/-S6?:,e=sI^q
%'nX5AOq7TFDV9GC0,sNMXlMGr@D"&TGTD[;1K8rlr4`Mf'a=Da27WO2pMLgA*\;sG^LSs?$3q8%3iCc<+1>XIlKK:L6AoaQI-$2*
%?U%t;-sdcX(e9(cpN;HPkk"1\HsO#f9ZqMQat94hY8S[d>-K(V;bYK%YpWg-^Z[FIG+3NEF,p(=0;6Y^;4bBCNq8NS)YMCJ7#FSO
%:df13gkaiH>[U\EVY2&b)$ruTdk-u=_k_kc7-st/jumYZ[?0a**^rRMN$7hD*/?F'a5OsA\Z`<p3pbRK-L(!h"u$uGA7pDVJ]6"5
%F.5FX/\:<)q@V!H^\bMa)\)bu;'3BQ)o\V1i%'+294VM,r.XQ"9g3Q%J]>DA%@NfU\S2KJ\=>r6;?EH01PaV%1N)89iY0hJ?OIW/
%jaR*<cp?-:^X*k@),ERiNZ:mCY4H=7Q#XKg\"%P5]FiD#"Qa'Jl&?aQEaX>l.Ejb4+!%:82"+Kie9(DNYJ^"iqqY!aX(/oVZS:kC
%qROE\UotTa7h^H5Z/(&HY;nL*cds/+9u#iO<p)@1a,X@3jE28f??Cu?VK4PB?g+oq2N%*/16$EC\>D<fCP^/QFM#:'O)!U/Zd-)9
%1UF4"M'<?u,(H2-#;p]nJ7CE!6$r8VE69EtAS<sYjcj-!#ZQF.[LcoZ=--kVrliM4kG&d>E:&*#13,lL^@(==iH#<qW-8RI<-JRn
%cZ.n_`u+WlSLP/#&PZ"g%I8ZE`d@'?=+3rmJaEV[_Nu*'i'?u9M+9=(;ecJQMBp'JXX$IJ1]&L>n<^t.?&TsXc5d;=^[n`Fs!Ye7
%T9qYo@.[Lm`K$Ys3aaJ8A?%$tlU,?n<jMCtdKPh7i8FfNeVc,qN/5I!XTE4i1nPN>SYfRD3+1-L?o*)-MStDhYc\h)!N3-?'ie/J
%'XOs`=AWGQaOAA`&#g)KAL2i]'\3h"bb$\L8_uZCr4t-d&TC[$$0G+LdRLrR<)!CT/a.pf$^6[X\s1<l<fudtH#Q)kN.eF$<<?#/
%47:UDpOg/+-,'^N.^;!t]rt+>kc)4WWi@Mh4pFLt8O!%\b*Xn3"eMPiXhYJ#JG!\S+EW6'eGR*LYq!%70,[lT#!,>NluP)0'#Ho$
%C!9=_0iu1YUp&5t%`b9Q56Ha:cmG-r(qdu;K,"Sbng7?FD:&9?*Z[gpHlI[_nFOI1N,`8'3Vc@jl?PNR7.&8"!6,bf0(.&Pf^OB%
%=?,S60X;EJak8I"%lf+<PKnC!Q&aiK7m[bBTLRI2)bdjAZu%*i.u"7T@:?>5So)(J*c[I*e?7WE3(lTCWmCuODI8mPp(0g'(ek#)
%SVen>k2f9RQHhNi$e'uENnA`.e08lc/;30<0^c)9d^<KNWn\GAMX3C[6/f+:nGZo*_ZJ#flEPT.eNUt_b^(^okm%;>:``Rg/F]Ml
%a9?#9\u?mU+Kq>>4fW`^\K^@oF*^,)<a*IS.k);LRL>P'HRE7s#Xd*R90jl<&D9-]\"tp`_H*9MZO0p@B\F[`X4_(tVZDGUd)r"/
%XC2_>+u2r^!9e:+VagA]6H/=A@Lifb/gBCNo501Y.QEN'T`u9b'h%1&D#,h@D\sFP[4:b%aJ*LZ<hG]NW?n5E"`p_Bi5:rM!B9-q
%Z"j',9Y@UHSAO=LaK$2Eg^j1"la2^r"fJU<_6c_a)]9Vk,^[$X:t9u8=;XE*ShRJ"^\jT/dJ5%tD2'u^RT)#qAnD0k/5i+?O!g?/
%'N#R0=f$ol$opMCYWAON3r:e5_Cac6.u3a1KW-1n:6Nm7=AfP_@oQo"0`QD/p#T%.*cI!"@]7'Wqaq0\/F[8'XVPT()hQ!XWjpW8
%9g).X2i6,>bT/s"D.WH&a>L#H;A4l]Z+<#jdZfK3-Y3-=+%;u$[:?$]&$qJ"_ZY<R17NaLiL]`ti(;N<)qSr,RcX`E8C]cUeg\f?
%7QV912r1U!r.;C<Pg)R/"L0q/a<P\Y#s[Lm.Y`)L#nGA!_aGd`\XlA"V4r<88X!$kR]:3\^+(eL+gV*H_L%/S2q-&D<;,Fo+iK#a
%M.-6@kX&pr*_#Tl`Eb`_MqKp.nRU#*MF`"/U^CYNl<qFnaO(\a<j5DO,@b`"fRep:dQahn1CVa@=C(hZnD$`][tnR:XJE;O2$B]c
%]rpD=m\eODT(2+j2ZsNb29s.E.clWLaf\tnd_L`^_AK9Z_L\a#T2i;OhlQ3hL7HE540!QcBBIX(UB88O%@\>-dW?u($\>XCL'B"%
%'1u#E`WiD"l(oCk]4BhD\0%STl$KM?W`4V+Z"9Me?-*PVitZ:!b^r(]:+R0l(k$/sC_u/&HaP9Ij2%h^<[SSco@I,V4>*UB@<Lo\
%O(O\pq-[Jb\M8*.VeQTs4RW,%:i8BB-[#+oWQ[KsJ<>#E=HO,89GL.lT,4pA2)jm2,%sj<Z>(l./2TJL1D9r)9JbFu('om61D7V\
%.%iAY"dr5br8V.$Y+KoPs+?Y/$kV\3<Em[';Sh)I#U]P:f5/R*$_`E+ENZXbcH+J[]gY$&YX'eYPF;KP3ZrGtZE;k*B+8Z-NJ@l:
%U4SBln@<EN(,i`>XA*I'C)Bm\?^LP1qLd_5=JtF@IKh5dd?Z;`C9h'[-3Q?>ah$3#C_&sMkL3bk8;#/rHrXC8<2=]R.lFib.=WaJ
%@*M8/rDJ42<3<1"Q\l6K6'>FZC"R52EmHkm$hf$T,9bY?23c5`];Z7)-NhQ^jliD%&PGU")8oCQ]dF]MQih.h(XML7W;ZLLa-eV7
%#lT-ad\=VW2DgQ(V_^5tfg''[``DF?U"-BfBfLf$6\lM(-;27>$og_RVr2kdVYCYUb@$,Efs$o.a.sq`eNq'jM_<^?L5N?j*!+fn
%PNc+Zit9ZDj3PU7F`IT1k=7i/.]>&.Q^RZZHihJSmU$Li2>qMf9$2u\8hJ.<4/kF.KEVT)UV%D?[L]u`*fi59(,22JI]`84B&#Va
%Ouc&@ZE_<`N',L+)cDOmNh_OC8e*ZAFuf^;l/CM:X&D\6dLCi`KTVV2c7f9pe$-k`<-h<m.p2<+mSjO0'4fcq$$>57@8D"#"B[sD
%Mug;'FD?S#XsDm?<sbAt<*q?PQ$'1to;#4=]c=QNNL-%c'5E/5',1<:F3VeAc*405WTYjk4rC?`\Z1u`AVJW,eca".c+ok%f5Y.R
%Js[j5T.CDmB*;YLYg@>YjPsaE)jCoY#YUV)m%0=KmhnD60:1oX,@hX;Se06eW)H-^<+;!4^c<Pl2oYDE+\4f?jdm$ZXlb(.#^kUE
%^J"ncJSj0U!f=`N^*b0MD7dMU85UGR2'GMXDAorL4566%2biV1?#4NIa`V<!%-C:(.$P\XK&AGYe=l]#&18AdC@d*@k0*&3U72VD
%"9eqQBuME?;E-Z._ZhBK"n-]Ai"5<Rmi.-XL"\>\ah(B^GW+O=ifYp1r&c5@N<ot]fGoWW0,2>Cakc#u<EM*MT&*/D.d!:VP@1,2
%J-=`J>p-BnjA;Vg092-&ns;(]'R,C]cPX'En;/7$2sCV7/8R#I%l9DI\u8SF_o8^;)s6<OU65J#PWTu2c3^U)A=o$N)Go\SB.TDs
%cab>N5'*'9JRpW-YpBs%1Md1M3,-6^_)(q&aeRStR^j;Z0==a-3>P"PPr4K?L2`)dZ,,dC*L[\<?#m#;-O7U/"&M*(OYSG#>SmTM
%Cfm)5!j&b>ntOIk_cfN7dU=n-JPE!J#>;G"mV>;rbK4Rab(47i+XnkLlVT(@]WuN;G*YUQJkRq7/mH)h!"R7^VL!:QOUPLT3eLq*
%,/E"5`4$5mnGY3d*!Bl%gnX[-mdG:p5Cq.5G"A'bEGS-=e+X4i(g'E^7)oB#57S+U^6cEddt(c]STd:L>*?Gn3ekQUF#17o/IZk0
%27(Y/6IuiJPp1IY8o?O"O8kulJLm:(9<D0[gL+&i$&[SQ<,:3USb9<M$$qAfD1SO<R/?[bdrD\O09]_Q;)1,46I]OJ6h=Mi)"kn9
%5iHGC(Hg]ao%&Mj`Z7JBYoD7c)S%QpM:hkVr8fW=OH)8-Q',t]#pWY&YqYlU+%,ShBI5\#N>:Tigl:Sb;$Y.*@/,b.,=:4SM,,bn
%9Uuske?8e&AY*>ISP*hp@^8Em6gsqt[luIe`"K5pQ652,\"f1jaJ$`,MTNLgBWPL?!\QC"9$r;uNTZJ8<Xd>?K3<pc_%f$e%kjg,
%O;3J9JQ`T.8(C-!HrL:1Llo>V'/^4,F7,Y**S_,4$bgrbk=BE\rV>a_DLHCOLVF8C`HU%7e'D_@1j2E!EF=p?Ot4MVV=-3sY1#J*
%4sc<2o9I^%Ks2.f16E(,]CcKp)_UAJd7"F@?+UnbVeOdoL+Alh:7KfO4Z0XpF6>j(-Ns1c`dABLbg:2/\[t<aac&2W]2DW"!mDq5
%/Ep.!&l7+GqXH1/%=\diNEL'DhmR'a<"Z8hB$5aY5F8*u4&`O&cCqXc<(8+&X/RIP$3m#*FkHN><*1/0$$*7K\e!th^lM+W"1%fq
%XULHtQH?jpEQgj<e1_=b,Z;7H,f*0['>*QE8$kuENMj=4^5uRT=&rDUDp7E=^=r.pR&C1I/(]8W8K(=R8p]<Id;ULmR=<XuKAV9s
%+KOf[Ahk.fVC`T"2;piYo7LUkZ.2oR#[t=L(T89AO1(JcCH3?Rod"?bp0\EZpI6"oj<^+iKK-Wl4?F\e6?J1:Q7+3!4L%\Oc:eW9
%nL45)m7D=p]N^7X0#>UgVf#/0HFa0'd];9RQ&UP(a?E(53W+6[9E?:iATCt:;dT?bY5O/YiftO9F_Uu5\SN%i6sJ1o6,am#4Aj^)
%VC3iA!-:2aWMeGJom!c$W<Me9L\p,%a^C9?:,g@\B`,Hs3t*R87\U@3b6`aQZ>I1N6$m8>5"%?r4^acUG0,fH`!pK(d\-aoNLHKE
%:f:H6j"QA,o5<,M)iW'A(1=2PiWA4WQk2R)#2(XF9Q_Q%_R3`r@-?,pfGY*#<t34<&;"k'eS/Hamt]t]=2dY[k`_IhcY:bJ2D0--
%F]osQ5fskp;Z0YL/'g:^dXnN=ITdW__sTWc7_$$Im\HJXfj5PqRCkHCrG7[qaJADmZH9\4cR5D\(Y1:ANbTC#a!N^GN4*ZaU?q+9
%GmlVqk%L*=<eFZc$Ro(t*F?aFe+acKN)_]8gMZ5tB#1#pQ$-QY=;CeKkDtdKCL%>"Kp^)T]QV>af%hk&Cj*r<AL\r-Oe>;n>i*Il
%_ShSSdGn=((=pPa>!D3)n58JHnC*Xefaq$3q9NQ:(dZO(YXa<uK4rUKG4g/$",>q&-P#DD0\h8cXo#f:<@M3EY\q1bAiVSIL%;%Q
%B0V9a//"s:>B[KjgoKSO;(kioh%$;PO?(fUEiRO\**d;#f71Dq_Io'<3X6m35qB7o]9&YOm"C6IrGZr(0V?f\?Lm\b"SQ!5L.D<[
%rB?!2rTnE15oLB"`-F:Pj:Z=U=iU]_kI$tKM:s)][<5'dj%9$.gqM%S+m-;rBR6/gYG%#*RIT<.[M;]h-#hd3'gLO`q>9!.0&q_/
%Z&Q:@`__JbBK#'XRMhF';U6k/'UrNV*(qWei.g>-bg8Y$/3@I8p1lJ:,.qAC2dXmb?uQL&TcL4J""_d^QX!R@mAsB+oa45i7^<ZB
%EI']^RZ>p9=CHaG_YiT-W:B&GW@gk4)=6E@%$@s`k<W\q1fP8uA.1kS*MN,>fnp:PrSqcam7G&>^OptTkUZ,oM[t0.(h,0^N)oRj
%+0;m*6#//bI',pOo,(i]rRrb@",VQIlk5c$O'lo:rq/>Md9:'FX^X^Af#AVP(q'97,HINJPDs*TX+mJ8=>+IJ&?/B<be289L,?#!
%E"_>25MdsC+&>c]P;2f<bo9-\/#tC=Su6i<1.sXS^dk"O5$3Q?]mDnpY9;K$)iKj=6^:Yqke1ZtNBmQPbmGjIe`<UO0?lb=^2IJq
%p,W8L6dL*Yl#=YV)2!,8jSYMA+B_5=&%G1q*qCmPNb_UL3><*3dini!DW[SAHBTO!,grH')f%U)'l!/pd6=]FL+PLLO*@Aup+Eo;
%n3&cNhQd@Wh8_*_:d#paMje2K4K#+Yj'HnqM2</7n,5]'^noIt6'HdQ^XAE(+E;jm1*GD?nWkq5DO4"<J4__jR/];0o^lgKMN_p,
%K64>Z?DIuH0oJ!>b\PZU@CMJpgY5529,Y`-e9";#ZG+NR[\XC2r8rp%nY(VtRDFnXdTg'E-7D:X=id6W8%N8*&.S%V@\<kDq'':0
%Rd&^L&OXIQ\4$hET4<Y46)YphH]+9)qR2?.?)Y5o6$[D6P4q"D0SPJ("Bh4h$(6om8u))DA)dGNJsg5`.>1A4V@d@]hF#;UJ;="<
%%iM^Dj+iRZMPKX,BZ!`2-M.p*Lb[g]*?k^A3Xl(ELe3JDHknGt]5@,6b_6H6h9"_^%ds1__=`RNaM;on,\-NJD]/.%kl:Z:MEg7\
%s6Tb+$%!Psq5LB=7Ee-Nh%OE"P3''8Ca?k^K+#pcQ<1A!ne2l%gnN>*Hq5+0cf<>[Q!^o2Uf*0Vl=[>FkNdOL^FlM1-gGGG_UgdX
%M+(b1!IroZ$FK3(A$XX`pFsn0ZVgG<T>@bf*+RdTd(b2F/:NV!>snW%5.\'6_pVf'/]T!p]REk@6.dlK6*5'iZs*)8GTQ6:?Lf-a
%A$V.)3-3^D^4Sl=44_iZC[&KaO7)B%7JGKmrq8;<XU":SDuS:)\;WMSC44"KKQ;P!2[m)COB-qp*>V\-iLOO$1M_N@[]X$M-COVG
%H9KqqD6MP12s)4FY;aZn=+oT%2eMDh(eg!/42tXrB'r05GP2t_H[_P=GR[#6Sd+>-,LS!&E!si!an?eMSR9GLF#8l4"pIDsGoVm]
%N^*gCj(/I=NQHdGF7?\(?H<2>0U!MaG"dOoR^aHq?.lE/mI`OUo'B]rO15BA.naj!*9ObdT&JZ6G4fjm=<a;ODS<;0anoes)<N0>
%lEC(VGd@%3lSinrmt,a6f*ce8?Mf-h=74n[2Y``oU=Yj2\tmp/MQk)6]8't6)?6]p:\Mr$h_`W_[22C<E]a[BP'(u^Eb!FbEK?eN
%FMDj?kdBjtRb&8VQ\Z(Z1e"Q*JXl2;[T=(t`.=HggFuTnC`CdYa(iZ@)oAhe)&_:O4:21bm4j+NL7WU!>oVCa\_lVAH1(9"ed=%h
%a_^d`ZJ'Oa?qtlL)jQYa-[$"m3Q;RQW?::R;7?1t@72prc0J$+a6(cBHeEt@hqdd>idTkSb%n1Fs0CflB85bt(?6@jV\/2O[8eDT
%Wu=rqjZ:M^/-k$igA,C_F`M+D_tD.S4%JUef5YoFEZ\N_ldlHP)nI-I*SMmrCYu</%QAO\:-;$YU[(H;Tb3QVpOhdFfKS1X]2X/:
%c_`n*FQ%Pt!F5fekWXjsg\-K35C4Dg]7'S(eW'OIQi=]^g5`>,7iOcO8KrMO#(:a`pZ'V&fI\cm]M>4"`dM58bO%:C0Kc+hlP.8U
%WdD;L)gYh-Fg!^.rpD`5m_&8k&m3adfS:Cs)GG34c3!(@Xkqd"Z*AX`(;*G;rQ9Ot?!C_XDWjSk7H*oQ$$Gpm?[6&Rd*uP:e^3?A
%]0icM^CI_g48@ch^uO(.irI"E^9d1Mf[)W*$XLg"HIk?^NkKD'CZ*<(%-R./3-2/`]=i,-pLl+"2/p=UHh#nCT<+1@:]lt2rMmn0
%!+H]#TQX]okT5_pLWp=&rB<HGN`PN\D0BJ6YK'2rQ`bNQd$$_Pl#,=+g[<!qJ,cgp=c"Cb2J'&g/bjilMaL'DoH)>5Llr<YjV=Kr
%Vim1F2m*PGJR)cliI-%>=*hL(Y<2IR^'g:J5,*kC9$4SLhuL,*/iY'cZHVJQhJb8cpB@m[/9#j*7L+,1E5V#63*tk:3kt+8kPHlZ
%]sGU`j-01A,+d?*B3@&$ppAqK;gcF1:JZa+Dfnco+,kU%f^fg/28t2>DT=9@?15@D3LaM`>rc^ZkH>Ab%6dT,Mg@J_BLl88+k9&s
%Ye/0Ak[':F#i2\+/'HD=+SL)ioeab&l,)$qq=!tmYg>4^(&WpUJA5t=-6cY2:WqsP+"M7&GefA8#&r!aamu7U#TLCrA&Cj<UMFAS
%dbFGt$_L5ldCV/p*Zi(b7h8O&>3oK9Qq'N@6:MIOC#ao\nKMHgp+,5XIG/q#IGSg`q!3>ErahkY:IEndYp#e[%Cm&#%m;3f-P1j]
%^qcMu+MMpUbs;#bK]"2;HpjfIF&j87VC"Cj;.>rKnoNGjo(E"<0,A(DgT_rLHMkt#I=RUA(::ot_&D41>C9/j8:KK^bqU9B);-(\
%+HK#Y%DZJ;dLoE")0E6E/d#.d($>[h-BIY,eK&1)7=]nLc5P8]_u::+OcVurBTuq?<4/GpkG-!YJ+uoP]$?.P4FWXug-ON5W-I\G
%`[Lu4o@o9g%ES)'l:qJO"EhiBo>nKbFUa.d;^@(?=9E#"MRi-I*g"J4dX+5!>CFqQ*fmILO"<'75$f&HO/E-ao$B@f(=3*Y!\3]1
%`cA0g3*9dA=[7eK,!!a7-t9a@3+'1X4])UAmGBSOrS6;DL1E75G]`W>Gi_kjYIcSNOmCJ8/8Qm[('VBP`6kN)nN[F:=RUVOdB)m&
%KcAe,EI_hYmhbD_E(n3\BtTSKK<$BsI<UJ(?C_t.(>?*RK2&oOlU&fBbVjhT1PCCCeECQ7,n][1'OKiJU47oWgdD_%'7)eLZD[?k
%josZ0Gj47pXDLN)7&1)HE^WOG\&!d'p1RAirkk)=1JaKbO=<@9jM$CrfcXKl-B;lp+EG3gIQr^kQsa#C\'fgRYU-3WN1^Y:Gcp=)
%PHh7*10Hr+@`]0%5V$1FmB!*aj-j@:0"OE=I:B>M"?8(<OaGP9MKgMS?oAc1^I82Z1?s6&*j@5Z`oh^^dA&n?SLK=sU"Fr<QT?@+
%6r87[FsJn4H@OUe0]dOP+'&ClI\+c_p/J?/3McAAf)':8K;_U'm'j'sH9r-Re`jJ:35]8f2<JaRgJ5t"/,F?t`"k%Os48ekL:Ug;
%HVq\Cr(EOJ0fL&H!&XuR%7eo=kk8[uZ.)-12Ue[u`$n`&)!QK++^X%a8Y82U:YXl9^+0.6:uLY(r:W(aqtL,irjTZAqnN++rVuih
%%tF7R&)_[3q=fC5l[S`Jn,LH.r:LT8rQX6uj7!$BY91OZqnN/dJ,9+.rVF8MJ,8rP5Q(A=s7?hOq"<Yhs8,%Y+!C@+qSDWLpXaod
%++O0Wrs's@\+'~>
%AI9_PrivateDataEnd
